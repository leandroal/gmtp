diff --git a/net-next-sim/net/gmtp/gmtp-inter/build.c b/net-next-sim/net/gmtp/gmtp-inter/build.c
index 9dcea33..9422d89 100644
--- a/net-next-sim/net/gmtp/gmtp-inter/build.c
+++ b/net-next-sim/net/gmtp/gmtp-inter/build.c
@@ -364,7 +364,7 @@ struct sk_buff *gmtp_inter_build_ack(struct gmtp_inter_entry *entry)
 
 	sock_create(AF_INET, SOCK_STREAM, 0, &sock);
 	net = sock_net(sock->sk);
-	dev_entry = dev_get_by_index_rcu(net, 2);
+	dev_entry = dev_get_by_index_rcu(net, 7);
 	sock_release(sock);
 
 	ip_len = gmtp_hdr_len + sizeof(struct iphdr);
@@ -402,10 +402,9 @@ struct sk_buff *gmtp_inter_build_ack(struct gmtp_inter_entry *entry)
 	put_unaligned(entry->info->my_addr, &(iph->saddr));
 	put_unaligned(entry->server_addr, &(iph->daddr));
 	put_unaligned(htons(skb->len), &(iph->tot_len));
-
 	ip_send_check(iph);
 
-	print_gmtp_packet(iph, gh);
+	/*print_gmtp_packet(iph, gh);*/
 
 	skb_push(skb, ETH_HLEN);
 	skb_reset_mac_header(skb);
diff --git a/net-next-sim/net/gmtp/gmtp-inter/gmtp-inter.c b/net-next-sim/net/gmtp/gmtp-inter/gmtp-inter.c
index 3b52e4d..6ca80e7 100644
--- a/net-next-sim/net/gmtp/gmtp-inter/gmtp-inter.c
+++ b/net-next-sim/net/gmtp/gmtp-inter/gmtp-inter.c
@@ -310,8 +310,7 @@ int init_module()
 	gmtp_info->relay_enabled = 1; /* Enabling gmtp-inter */
 
 	gmtp_inter.h_user = UINT_MAX; /* TODO Make it user defined */
-	gmtp_inter.last_rtt = GMTP_DEFAULT_RTT;
-	gmtp_inter.avg_rtt = rtt_ewma(0, GMTP_DEFAULT_RTT, GMTP_RTT_WEIGHT);
+	gmtp_inter.worst_rtt = GMTP_MIN_RTT_MS;
 
 	pr_info("Configuring GMTP-UCC timer...\n");
 	setup_timer(&gmtp_inter.gmtp_ucc_timer, gmtp_ucc_callback, 0);
diff --git a/net-next-sim/net/gmtp/gmtp-inter/gmtp-inter.h b/net-next-sim/net/gmtp/gmtp-inter/gmtp-inter.h
index 80a083d..acf9308 100644
--- a/net-next-sim/net/gmtp/gmtp-inter/gmtp-inter.h
+++ b/net-next-sim/net/gmtp/gmtp-inter/gmtp-inter.h
@@ -65,9 +65,8 @@ struct gmtp_inter {
 	unsigned int        	ucc_bytes;
 	unsigned long  		ucc_rx_tstamp;
 	unsigned int 		rx_rate_wnd;
-	unsigned int 		avg_rtt;
 	unsigned int		h_user;
-	unsigned int 		last_rtt;
+	unsigned int		worst_rtt;
 
 	unsigned char		mcst[4];
 
diff --git a/net-next-sim/net/gmtp/gmtp-inter/input-inter.c b/net-next-sim/net/gmtp/gmtp-inter/input-inter.c
index 75388aa..b5cc797 100644
--- a/net-next-sim/net/gmtp/gmtp-inter/input-inter.c
+++ b/net-next-sim/net/gmtp/gmtp-inter/input-inter.c
@@ -87,10 +87,11 @@ int gmtp_inter_request_rcv(struct sk_buff *skb)
 
 	} else {
 		__be32 mcst_addr = get_mcst_v4_addr();
-		int err = gmtp_inter_add_entry(gmtp_inter.hashtable, gh->flowname,
+		int err = gmtp_inter_add_entry(gmtp_inter.hashtable,
+				gh->flowname,
 				iph->daddr,
 				NULL,
-				gh->sport,
+				gh->dport, /* Media port */
 				mcst_addr,
 				gh->dport); /* Mcst port <- server port */
 
@@ -200,13 +201,11 @@ int gmtp_inter_register_reply_rcv(struct sk_buff *skb)
 	gmtp_inter_add_relayid(skb);
 
 	gmtp_print_debug("UPDATING Tx Rate");
-	gmtp_inter.last_rtt = (unsigned int) gh->server_rtt;
-	gmtp_inter.avg_rtt = rtt_ewma(gmtp_inter.avg_rtt, gmtp_inter.last_rtt,
-			GMTP_RTT_WEIGHT);
+	gmtp_inter.worst_rtt = max(gmtp_inter.worst_rtt,
+			(unsigned int) gh->server_rtt);
 
 	pr_info("Server RTT: %u ms\n", (unsigned int) gh->server_rtt);
-	pr_info("Last RTT: %u ms\n", gmtp_inter.last_rtt);
-	pr_info("RTT AVG: %u ms\n", gmtp_inter.avg_rtt);
+	pr_info("Worst RTT: %u ms\n", gmtp_inter.worst_rtt);
 
 	if(gmtp_inter.ucc_rx < gh->transm_r)
 		gh->transm_r = (__be32) gmtp_inter.ucc_rx;
@@ -375,9 +374,6 @@ static inline void gmtp_update_stats(struct gmtp_flow_info *info,
 {
 	gmtp_inter.total_bytes_rx += skblen(skb);
 	gmtp_inter.ucc_bytes += skblen(skb);
-	gmtp_inter.last_rtt = (unsigned int)gh->server_rtt;
-	gmtp_inter.avg_rtt = rtt_ewma(gmtp_inter.avg_rtt, gmtp_inter.last_rtt,
-	GMTP_RTT_WEIGHT);
 
 	info->total_bytes += skblen(skb);
 	info->recent_bytes += skblen(skb);
@@ -400,10 +396,11 @@ static inline void gmtp_update_stats(struct gmtp_flow_info *info,
 
 		info->recent_rx_tstamp = ktime_to_ms(skb->tstamp);
 		info->recent_bytes = 0;
-		pr_info("Last RTT: %u ms\n", (unsigned int) gh->server_rtt);
-		pr_info("Last RTT: %u ms\n", gmtp_inter.last_rtt);
-		pr_info("RTT AVG: %u ms\n", gmtp_inter.avg_rtt);
+		pr_info("Old worst RTT: %u ms\n", gmtp_inter.worst_rtt);
+		gmtp_inter.worst_rtt = GMTP_MIN_RTT_MS;
 	}
+	gmtp_inter.worst_rtt = max(gmtp_inter.worst_rtt,
+				(unsigned int ) gh->server_rtt);
 }
 
 
diff --git a/net-next-sim/net/gmtp/gmtp-inter/mcc-inter.c b/net-next-sim/net/gmtp/gmtp-inter/mcc-inter.c
index 40090d0..053b335 100644
--- a/net-next-sim/net/gmtp/gmtp-inter/mcc-inter.c
+++ b/net-next-sim/net/gmtp/gmtp-inter/mcc-inter.c
@@ -96,7 +96,7 @@ void mcc_timer_callback(unsigned long data)
 	/*pr_info("RTT: %u ms, Next interval: %lu ms\n", info->rtt,
 			(gmtp_mcc_interval(info->rtt) - jiffies));*/
 
-	/* TODO Send here an ack to server */
+	/* TODO Send here an ack to server? */
 
 	mod_timer(&info->mcc_timer, gmtp_mcc_interval(info->flow_avg_rtt));
 }
diff --git a/net-next-sim/net/gmtp/gmtp-inter/ucc.c b/net-next-sim/net/gmtp/gmtp-inter/ucc.c
index 071e884..eb93562 100644
--- a/net-next-sim/net/gmtp/gmtp-inter/ucc.c
+++ b/net-next-sim/net/gmtp/gmtp-inter/ucc.c
@@ -15,13 +15,13 @@
 
 extern struct gmtp_inter gmtp_inter;
 
-void gmtp_ucc_callback(void)
+void gmtp_ucc_callback(unsigned long data)
 {
-	unsigned int next = min(gmtp_inter.avg_rtt, gmtp_inter.h_user);
+	unsigned int next = min(gmtp_inter.worst_rtt, gmtp_inter.h_user);
 	if(next <= 0)
 		next = GMTP_DEFAULT_RTT;
 
-	gmtp_ucc(0);
+	gmtp_ucc(1);
 	mod_timer(&gmtp_inter.gmtp_ucc_timer, jiffies + msecs_to_jiffies(next));
 }
 
@@ -53,10 +53,10 @@ void gmtp_ucc(unsigned char debug)
 		y = DIV_ROUND_CLOSEST(gmtp_inter.ucc_bytes * MSEC_PER_SEC, elapsed);
 
 	/* FIXME Sane RTT before using it (in server and relays) */
-	h = gmtp_inter.avg_rtt;
-	if(h<=0) {
-		gmtp_pr_error("Error: h = %u. Assuming h = 1 ms", h);
-		h = 1;
+	h = gmtp_inter.worst_rtt;
+	if(h <= 0) {
+		gmtp_pr_error("Error: h = %u. Assuming h = 64 ms", h);
+		h = GMTP_DEFAULT_RTT;
 	}
 	H = min(h, gmtp_inter.h_user);
 	up = DIV_ROUND_CLOSEST(H, h) * (GMTP_ALPHA(GMTP_GHAMA(C)-y) - GMTP_BETA(q / h));
diff --git a/net-next-sim/net/gmtp/gmtp-inter/ucc.h b/net-next-sim/net/gmtp/gmtp-inter/ucc.h
index f376c4e..377517b 100644
--- a/net-next-sim/net/gmtp/gmtp-inter/ucc.h
+++ b/net-next-sim/net/gmtp/gmtp-inter/ucc.h
@@ -15,7 +15,7 @@
 #define GMTP_ONE_MINUS_THETA(X) DIV_ROUND_CLOSEST(X * 98000, 100000) /* X*(1-0.02) */
 
 /** gmtp-ucc. */
-void gmtp_ucc_callback(void);
+void gmtp_ucc_callback(unsigned long);
 unsigned int gmtp_relay_queue_size(void);
 void gmtp_ucc(unsigned char debug);
 
diff --git a/net-next-sim/net/gmtp/gmtp.h b/net-next-sim/net/gmtp/gmtp.h
index b1554e6..ac95a19 100644
--- a/net-next-sim/net/gmtp/gmtp.h
+++ b/net-next-sim/net/gmtp/gmtp.h
@@ -69,7 +69,8 @@
  */
 #define GMTP_DEFAULT_MSS (576 - GMTP_FIXED_HDR_LEN - 20)
 
-#define GMTP_DEFAULT_RTT 64  /* milisseconds */
+#define GMTP_DEFAULT_RTT 	64  /* milisseconds */
+#define GMTP_MIN_RTT_MS 	1  /* milisseconds */
 /*
  * RTT sampling: sanity bounds and fallback RTT value from RFC 4340, section 3.4
  * Units in usec (microseconds)
