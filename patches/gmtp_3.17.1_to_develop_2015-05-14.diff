diff --git a/linux-3.17.1/arch/mips/include/asm/socket.h b/linux-3.17.1/arch/mips/include/asm/socket.h
index 4724a56..ab7a6eb 100644
--- a/linux-3.17.1/arch/mips/include/asm/socket.h
+++ b/linux-3.17.1/arch/mips/include/asm/socket.h
@@ -22,6 +22,8 @@
  * @SOCK_STREAM - stream (connection) socket
  * @SOCK_RAW - raw socket
  * @SOCK_RDM - reliably-delivered message
+ * @SOCK_DCCP - Datagram Congestion Control Protocol socket
+ * @SOCK_GMTP - Global Media Transmission Protocol socket
  * @SOCK_SEQPACKET - sequential packet socket
  * @SOCK_PACKET - linux specific way of getting packets at the dev level.
  *		  For writing rarp and other similar things on the user level.
@@ -33,6 +35,7 @@ enum sock_type {
 	SOCK_RDM	= 4,
 	SOCK_SEQPACKET	= 5,
 	SOCK_DCCP	= 6,
+	SOCK_GMTP 	= 7,
 	SOCK_PACKET	= 10,
 };
 
diff --git a/linux-3.17.1/config_minimal b/linux-3.17.1/config_minimal
new file mode 100644
index 0000000..7a67b59
--- /dev/null
+++ b/linux-3.17.1/config_minimal
@@ -0,0 +1,3586 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/x86 3.17.1 Kernel Configuration
+#
+CONFIG_64BIT=y
+CONFIG_X86_64=y
+CONFIG_X86=y
+CONFIG_INSTRUCTION_DECODER=y
+CONFIG_OUTPUT_FORMAT="elf64-x86-64"
+CONFIG_ARCH_DEFCONFIG="arch/x86/configs/x86_64_defconfig"
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_HAVE_LATENCYTOP_SUPPORT=y
+CONFIG_MMU=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_NEED_SG_DMA_LENGTH=y
+CONFIG_GENERIC_ISA_DMA=y
+CONFIG_GENERIC_BUG=y
+CONFIG_GENERIC_BUG_RELATIVE_POINTERS=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_ARCH_MAY_HAVE_PC_FDC=y
+CONFIG_RWSEM_XCHGADD_ALGORITHM=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_ARCH_HAS_CPU_RELAX=y
+CONFIG_ARCH_HAS_CACHE_LINE_SIZE=y
+CONFIG_HAVE_SETUP_PER_CPU_AREA=y
+CONFIG_NEED_PER_CPU_EMBED_FIRST_CHUNK=y
+CONFIG_NEED_PER_CPU_PAGE_FIRST_CHUNK=y
+CONFIG_ARCH_HIBERNATION_POSSIBLE=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+CONFIG_ARCH_WANT_HUGE_PMD_SHARE=y
+CONFIG_ARCH_WANT_GENERAL_HUGETLB=y
+CONFIG_ZONE_DMA32=y
+CONFIG_AUDIT_ARCH=y
+CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING=y
+CONFIG_ARCH_SUPPORTS_DEBUG_PAGEALLOC=y
+CONFIG_HAVE_INTEL_TXT=y
+CONFIG_X86_64_SMP=y
+CONFIG_X86_HT=y
+CONFIG_ARCH_HWEIGHT_CFLAGS="-fcall-saved-rdi -fcall-saved-rsi -fcall-saved-rdx -fcall-saved-rcx -fcall-saved-r8 -fcall-saved-r9 -fcall-saved-r10 -fcall-saved-r11"
+CONFIG_ARCH_SUPPORTS_UPROBES=y
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
+CONFIG_IRQ_WORK=y
+CONFIG_BUILDTIME_EXTABLE_SORT=y
+
+#
+# General setup
+#
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_CROSS_COMPILE=""
+# CONFIG_COMPILE_TEST is not set
+CONFIG_LOCALVERSION=""
+# CONFIG_LOCALVERSION_AUTO is not set
+CONFIG_HAVE_KERNEL_GZIP=y
+CONFIG_HAVE_KERNEL_BZIP2=y
+CONFIG_HAVE_KERNEL_LZMA=y
+CONFIG_HAVE_KERNEL_XZ=y
+CONFIG_HAVE_KERNEL_LZO=y
+CONFIG_HAVE_KERNEL_LZ4=y
+CONFIG_KERNEL_GZIP=y
+# CONFIG_KERNEL_BZIP2 is not set
+# CONFIG_KERNEL_LZMA is not set
+# CONFIG_KERNEL_XZ is not set
+# CONFIG_KERNEL_LZO is not set
+# CONFIG_KERNEL_LZ4 is not set
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_SWAP=y
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+CONFIG_POSIX_MQUEUE=y
+CONFIG_POSIX_MQUEUE_SYSCTL=y
+CONFIG_CROSS_MEMORY_ATTACH=y
+# CONFIG_FHANDLE is not set
+CONFIG_USELIB=y
+CONFIG_AUDIT=y
+CONFIG_HAVE_ARCH_AUDITSYSCALL=y
+CONFIG_AUDITSYSCALL=y
+CONFIG_AUDIT_WATCH=y
+CONFIG_AUDIT_TREE=y
+
+#
+# IRQ subsystem
+#
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_GENERIC_IRQ_LEGACY_ALLOC_HWIRQ=y
+CONFIG_GENERIC_PENDING_IRQ=y
+CONFIG_IRQ_DOMAIN=y
+# CONFIG_IRQ_DOMAIN_DEBUG is not set
+CONFIG_IRQ_FORCED_THREADING=y
+CONFIG_SPARSE_IRQ=y
+CONFIG_CLOCKSOURCE_WATCHDOG=y
+CONFIG_ARCH_CLOCKSOURCE_DATA=y
+CONFIG_CLOCKSOURCE_VALIDATE_LAST_CYCLE=y
+CONFIG_GENERIC_TIME_VSYSCALL=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_GENERIC_CLOCKEVENTS_MIN_ADJUST=y
+CONFIG_GENERIC_CMOS_UPDATE=y
+
+#
+# Timers subsystem
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ_COMMON=y
+# CONFIG_HZ_PERIODIC is not set
+CONFIG_NO_HZ_IDLE=y
+# CONFIG_NO_HZ_FULL is not set
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+
+#
+# CPU/Task time and stats accounting
+#
+CONFIG_TICK_CPU_ACCOUNTING=y
+# CONFIG_VIRT_CPU_ACCOUNTING_GEN is not set
+# CONFIG_IRQ_TIME_ACCOUNTING is not set
+CONFIG_BSD_PROCESS_ACCT=y
+# CONFIG_BSD_PROCESS_ACCT_V3 is not set
+CONFIG_TASKSTATS=y
+CONFIG_TASK_DELAY_ACCT=y
+CONFIG_TASK_XACCT=y
+CONFIG_TASK_IO_ACCOUNTING=y
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_RCU=y
+# CONFIG_PREEMPT_RCU is not set
+CONFIG_RCU_STALL_COMMON=y
+# CONFIG_RCU_USER_QS is not set
+CONFIG_RCU_FANOUT=64
+CONFIG_RCU_FANOUT_LEAF=16
+# CONFIG_RCU_FANOUT_EXACT is not set
+# CONFIG_RCU_FAST_NO_HZ is not set
+# CONFIG_TREE_RCU_TRACE is not set
+# CONFIG_RCU_NOCB_CPU is not set
+CONFIG_BUILD_BIN2C=y
+CONFIG_IKCONFIG=y
+CONFIG_IKCONFIG_PROC=y
+CONFIG_LOG_BUF_SHIFT=18
+CONFIG_LOG_CPU_MAX_BUF_SHIFT=12
+CONFIG_HAVE_UNSTABLE_SCHED_CLOCK=y
+CONFIG_ARCH_SUPPORTS_NUMA_BALANCING=y
+CONFIG_ARCH_SUPPORTS_INT128=y
+CONFIG_ARCH_WANTS_PROT_NUMA_PROT_NONE=y
+# CONFIG_NUMA_BALANCING is not set
+CONFIG_CGROUPS=y
+# CONFIG_CGROUP_DEBUG is not set
+CONFIG_CGROUP_FREEZER=y
+# CONFIG_CGROUP_DEVICE is not set
+CONFIG_CPUSETS=y
+CONFIG_PROC_PID_CPUSET=y
+CONFIG_CGROUP_CPUACCT=y
+CONFIG_RESOURCE_COUNTERS=y
+# CONFIG_MEMCG is not set
+# CONFIG_CGROUP_HUGETLB is not set
+# CONFIG_CGROUP_PERF is not set
+CONFIG_CGROUP_SCHED=y
+CONFIG_FAIR_GROUP_SCHED=y
+# CONFIG_CFS_BANDWIDTH is not set
+# CONFIG_RT_GROUP_SCHED is not set
+# CONFIG_BLK_CGROUP is not set
+# CONFIG_CHECKPOINT_RESTORE is not set
+CONFIG_NAMESPACES=y
+CONFIG_UTS_NS=y
+CONFIG_IPC_NS=y
+# CONFIG_USER_NS is not set
+CONFIG_PID_NS=y
+CONFIG_NET_NS=y
+# CONFIG_SCHED_AUTOGROUP is not set
+# CONFIG_SYSFS_DEPRECATED is not set
+CONFIG_RELAY=y
+# CONFIG_BLK_DEV_INITRD is not set
+# CONFIG_CC_OPTIMIZE_FOR_SIZE is not set
+CONFIG_SYSCTL=y
+CONFIG_ANON_INODES=y
+CONFIG_HAVE_UID16=y
+CONFIG_SYSCTL_EXCEPTION_TRACE=y
+CONFIG_HAVE_PCSPKR_PLATFORM=y
+# CONFIG_EXPERT is not set
+CONFIG_UID16=y
+CONFIG_SGETMASK_SYSCALL=y
+CONFIG_SYSFS_SYSCALL=y
+# CONFIG_SYSCTL_SYSCALL is not set
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_ALL is not set
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+CONFIG_ELF_CORE=y
+CONFIG_PCSPKR_PLATFORM=y
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+CONFIG_AIO=y
+CONFIG_PCI_QUIRKS=y
+# CONFIG_EMBEDDED is not set
+CONFIG_HAVE_PERF_EVENTS=y
+
+#
+# Kernel Performance Events And Counters
+#
+CONFIG_PERF_EVENTS=y
+# CONFIG_DEBUG_PERF_USE_VMALLOC is not set
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_SLUB_DEBUG=y
+# CONFIG_COMPAT_BRK is not set
+# CONFIG_SLAB is not set
+CONFIG_SLUB=y
+CONFIG_SLUB_CPU_PARTIAL=y
+# CONFIG_SYSTEM_TRUSTED_KEYRING is not set
+CONFIG_PROFILING=y
+CONFIG_TRACEPOINTS=y
+# CONFIG_OPROFILE is not set
+CONFIG_HAVE_OPROFILE=y
+CONFIG_OPROFILE_NMI_TIMER=y
+CONFIG_KPROBES=y
+# CONFIG_JUMP_LABEL is not set
+CONFIG_OPTPROBES=y
+# CONFIG_UPROBES is not set
+# CONFIG_HAVE_64BIT_ALIGNED_ACCESS is not set
+CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y
+CONFIG_ARCH_USE_BUILTIN_BSWAP=y
+CONFIG_KRETPROBES=y
+CONFIG_HAVE_IOREMAP_PROT=y
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_HAVE_OPTPROBES=y
+CONFIG_HAVE_KPROBES_ON_FTRACE=y
+CONFIG_HAVE_ARCH_TRACEHOOK=y
+CONFIG_HAVE_DMA_ATTRS=y
+CONFIG_HAVE_DMA_CONTIGUOUS=y
+CONFIG_GENERIC_SMP_IDLE_THREAD=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_HAVE_DMA_API_DEBUG=y
+CONFIG_HAVE_HW_BREAKPOINT=y
+CONFIG_HAVE_MIXED_BREAKPOINTS_REGS=y
+CONFIG_HAVE_USER_RETURN_NOTIFIER=y
+CONFIG_HAVE_PERF_EVENTS_NMI=y
+CONFIG_HAVE_PERF_REGS=y
+CONFIG_HAVE_PERF_USER_STACK_DUMP=y
+CONFIG_HAVE_ARCH_JUMP_LABEL=y
+CONFIG_ARCH_HAVE_NMI_SAFE_CMPXCHG=y
+CONFIG_HAVE_ALIGNED_STRUCT_PAGE=y
+CONFIG_HAVE_CMPXCHG_LOCAL=y
+CONFIG_HAVE_CMPXCHG_DOUBLE=y
+CONFIG_ARCH_WANT_COMPAT_IPC_PARSE_VERSION=y
+CONFIG_ARCH_WANT_OLD_COMPAT_IPC=y
+CONFIG_HAVE_ARCH_SECCOMP_FILTER=y
+CONFIG_SECCOMP_FILTER=y
+CONFIG_HAVE_CC_STACKPROTECTOR=y
+# CONFIG_CC_STACKPROTECTOR is not set
+CONFIG_CC_STACKPROTECTOR_NONE=y
+# CONFIG_CC_STACKPROTECTOR_REGULAR is not set
+# CONFIG_CC_STACKPROTECTOR_STRONG is not set
+CONFIG_HAVE_CONTEXT_TRACKING=y
+CONFIG_HAVE_VIRT_CPU_ACCOUNTING_GEN=y
+CONFIG_HAVE_IRQ_TIME_ACCOUNTING=y
+CONFIG_HAVE_ARCH_TRANSPARENT_HUGEPAGE=y
+CONFIG_HAVE_ARCH_SOFT_DIRTY=y
+CONFIG_MODULES_USE_ELF_RELA=y
+CONFIG_HAVE_IRQ_EXIT_ON_IRQ_STACK=y
+CONFIG_OLD_SIGSUSPEND3=y
+CONFIG_COMPAT_OLD_SIGACTION=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+# CONFIG_HAVE_GENERIC_DMA_COHERENT is not set
+CONFIG_SLABINFO=y
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=0
+CONFIG_MODULES=y
+# CONFIG_MODULE_FORCE_LOAD is not set
+CONFIG_MODULE_UNLOAD=y
+CONFIG_MODULE_FORCE_UNLOAD=y
+# CONFIG_MODVERSIONS is not set
+# CONFIG_MODULE_SRCVERSION_ALL is not set
+# CONFIG_MODULE_SIG is not set
+CONFIG_STOP_MACHINE=y
+CONFIG_BLOCK=y
+CONFIG_BLK_DEV_BSG=y
+# CONFIG_BLK_DEV_BSGLIB is not set
+# CONFIG_BLK_DEV_INTEGRITY is not set
+# CONFIG_BLK_CMDLINE_PARSER is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITION_ADVANCED=y
+# CONFIG_ACORN_PARTITION is not set
+# CONFIG_AIX_PARTITION is not set
+CONFIG_OSF_PARTITION=y
+CONFIG_AMIGA_PARTITION=y
+# CONFIG_ATARI_PARTITION is not set
+CONFIG_MAC_PARTITION=y
+CONFIG_MSDOS_PARTITION=y
+CONFIG_BSD_DISKLABEL=y
+CONFIG_MINIX_SUBPARTITION=y
+CONFIG_SOLARIS_X86_PARTITION=y
+CONFIG_UNIXWARE_DISKLABEL=y
+# CONFIG_LDM_PARTITION is not set
+CONFIG_SGI_PARTITION=y
+# CONFIG_ULTRIX_PARTITION is not set
+CONFIG_SUN_PARTITION=y
+CONFIG_KARMA_PARTITION=y
+CONFIG_EFI_PARTITION=y
+# CONFIG_SYSV68_PARTITION is not set
+# CONFIG_CMDLINE_PARTITION is not set
+CONFIG_BLOCK_COMPAT=y
+
+#
+# IO Schedulers
+#
+CONFIG_IOSCHED_NOOP=y
+CONFIG_IOSCHED_DEADLINE=y
+CONFIG_IOSCHED_CFQ=y
+# CONFIG_DEFAULT_DEADLINE is not set
+CONFIG_DEFAULT_CFQ=y
+# CONFIG_DEFAULT_NOOP is not set
+CONFIG_DEFAULT_IOSCHED="cfq"
+CONFIG_INLINE_SPIN_UNLOCK_IRQ=y
+CONFIG_INLINE_READ_UNLOCK=y
+CONFIG_INLINE_READ_UNLOCK_IRQ=y
+CONFIG_INLINE_WRITE_UNLOCK=y
+CONFIG_INLINE_WRITE_UNLOCK_IRQ=y
+CONFIG_ARCH_SUPPORTS_ATOMIC_RMW=y
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_RWSEM_SPIN_ON_OWNER=y
+CONFIG_ARCH_USE_QUEUE_RWLOCK=y
+CONFIG_QUEUE_RWLOCK=y
+CONFIG_FREEZER=y
+
+#
+# Processor type and features
+#
+CONFIG_ZONE_DMA=y
+CONFIG_SMP=y
+CONFIG_X86_MPPARSE=y
+CONFIG_X86_EXTENDED_PLATFORM=y
+# CONFIG_X86_VSMP is not set
+# CONFIG_X86_GOLDFISH is not set
+# CONFIG_X86_INTEL_LPSS is not set
+CONFIG_X86_SUPPORTS_MEMORY_FAILURE=y
+CONFIG_SCHED_OMIT_FRAME_POINTER=y
+# CONFIG_HYPERVISOR_GUEST is not set
+CONFIG_NO_BOOTMEM=y
+# CONFIG_MEMTEST is not set
+# CONFIG_MK8 is not set
+# CONFIG_MPSC is not set
+# CONFIG_MCORE2 is not set
+# CONFIG_MATOM is not set
+CONFIG_GENERIC_CPU=y
+CONFIG_X86_INTERNODE_CACHE_SHIFT=6
+CONFIG_X86_L1_CACHE_SHIFT=6
+CONFIG_X86_TSC=y
+CONFIG_X86_CMPXCHG64=y
+CONFIG_X86_CMOV=y
+CONFIG_X86_MINIMUM_CPU_FAMILY=64
+CONFIG_X86_DEBUGCTLMSR=y
+CONFIG_CPU_SUP_INTEL=y
+CONFIG_CPU_SUP_AMD=y
+CONFIG_CPU_SUP_CENTAUR=y
+CONFIG_HPET_TIMER=y
+CONFIG_HPET_EMULATE_RTC=y
+CONFIG_DMI=y
+# CONFIG_GART_IOMMU is not set
+CONFIG_CALGARY_IOMMU=y
+CONFIG_CALGARY_IOMMU_ENABLED_BY_DEFAULT=y
+CONFIG_SWIOTLB=y
+CONFIG_IOMMU_HELPER=y
+# CONFIG_MAXSMP is not set
+CONFIG_NR_CPUS=64
+CONFIG_SCHED_SMT=y
+CONFIG_SCHED_MC=y
+# CONFIG_PREEMPT_NONE is not set
+CONFIG_PREEMPT_VOLUNTARY=y
+# CONFIG_PREEMPT is not set
+CONFIG_X86_LOCAL_APIC=y
+CONFIG_X86_IO_APIC=y
+CONFIG_X86_REROUTE_FOR_BROKEN_BOOT_IRQS=y
+CONFIG_X86_MCE=y
+CONFIG_X86_MCE_INTEL=y
+CONFIG_X86_MCE_AMD=y
+CONFIG_X86_MCE_THRESHOLD=y
+# CONFIG_X86_MCE_INJECT is not set
+CONFIG_X86_THERMAL_VECTOR=y
+CONFIG_X86_16BIT=y
+CONFIG_X86_ESPFIX64=y
+# CONFIG_I8K is not set
+CONFIG_MICROCODE=y
+CONFIG_MICROCODE_INTEL=y
+CONFIG_MICROCODE_AMD=y
+CONFIG_MICROCODE_OLD_INTERFACE=y
+# CONFIG_MICROCODE_INTEL_EARLY is not set
+# CONFIG_MICROCODE_AMD_EARLY is not set
+CONFIG_X86_MSR=y
+CONFIG_X86_CPUID=y
+CONFIG_ARCH_PHYS_ADDR_T_64BIT=y
+CONFIG_ARCH_DMA_ADDR_T_64BIT=y
+CONFIG_DIRECT_GBPAGES=y
+CONFIG_NUMA=y
+CONFIG_AMD_NUMA=y
+CONFIG_X86_64_ACPI_NUMA=y
+CONFIG_NODES_SPAN_OTHER_NODES=y
+# CONFIG_NUMA_EMU is not set
+CONFIG_NODES_SHIFT=6
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_ARCH_SPARSEMEM_DEFAULT=y
+CONFIG_ARCH_SELECT_MEMORY_MODEL=y
+CONFIG_ARCH_PROC_KCORE_TEXT=y
+CONFIG_ILLEGAL_POINTER_VALUE=0xdead000000000000
+CONFIG_SELECT_MEMORY_MODEL=y
+CONFIG_SPARSEMEM_MANUAL=y
+CONFIG_SPARSEMEM=y
+CONFIG_NEED_MULTIPLE_NODES=y
+CONFIG_HAVE_MEMORY_PRESENT=y
+CONFIG_SPARSEMEM_EXTREME=y
+CONFIG_SPARSEMEM_VMEMMAP_ENABLE=y
+CONFIG_SPARSEMEM_ALLOC_MEM_MAP_TOGETHER=y
+CONFIG_SPARSEMEM_VMEMMAP=y
+CONFIG_HAVE_MEMBLOCK=y
+CONFIG_HAVE_MEMBLOCK_NODE_MAP=y
+CONFIG_ARCH_DISCARD_MEMBLOCK=y
+# CONFIG_MOVABLE_NODE is not set
+# CONFIG_HAVE_BOOTMEM_INFO_NODE is not set
+# CONFIG_MEMORY_HOTPLUG is not set
+CONFIG_PAGEFLAGS_EXTENDED=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK=y
+CONFIG_COMPACTION=y
+CONFIG_MIGRATION=y
+CONFIG_ARCH_ENABLE_HUGEPAGE_MIGRATION=y
+CONFIG_PHYS_ADDR_T_64BIT=y
+CONFIG_ZONE_DMA_FLAG=1
+CONFIG_BOUNCE=y
+CONFIG_VIRT_TO_BUS=y
+# CONFIG_KSM is not set
+CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
+CONFIG_ARCH_SUPPORTS_MEMORY_FAILURE=y
+# CONFIG_MEMORY_FAILURE is not set
+# CONFIG_TRANSPARENT_HUGEPAGE is not set
+# CONFIG_CLEANCACHE is not set
+# CONFIG_FRONTSWAP is not set
+# CONFIG_CMA is not set
+# CONFIG_ZPOOL is not set
+# CONFIG_ZBUD is not set
+# CONFIG_ZSMALLOC is not set
+CONFIG_GENERIC_EARLY_IOREMAP=y
+CONFIG_X86_CHECK_BIOS_CORRUPTION=y
+CONFIG_X86_BOOTPARAM_MEMORY_CORRUPTION_CHECK=y
+CONFIG_X86_RESERVE_LOW=64
+CONFIG_MTRR=y
+# CONFIG_MTRR_SANITIZER is not set
+CONFIG_X86_PAT=y
+CONFIG_ARCH_USES_PG_UNCACHED=y
+CONFIG_ARCH_RANDOM=y
+CONFIG_X86_SMAP=y
+CONFIG_EFI=y
+# CONFIG_EFI_STUB is not set
+CONFIG_SECCOMP=y
+# CONFIG_HZ_100 is not set
+# CONFIG_HZ_250 is not set
+# CONFIG_HZ_300 is not set
+CONFIG_HZ_1000=y
+CONFIG_HZ=1000
+CONFIG_SCHED_HRTICK=y
+CONFIG_KEXEC=y
+CONFIG_CRASH_DUMP=y
+# CONFIG_KEXEC_JUMP is not set
+CONFIG_PHYSICAL_START=0x1000000
+CONFIG_RELOCATABLE=y
+# CONFIG_RANDOMIZE_BASE is not set
+CONFIG_PHYSICAL_ALIGN=0x200000
+CONFIG_HOTPLUG_CPU=y
+# CONFIG_BOOTPARAM_HOTPLUG_CPU0 is not set
+# CONFIG_DEBUG_HOTPLUG_CPU0 is not set
+# CONFIG_COMPAT_VDSO is not set
+# CONFIG_CMDLINE_BOOL is not set
+CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG=y
+CONFIG_USE_PERCPU_NUMA_NODE_ID=y
+
+#
+# Power management and ACPI options
+#
+CONFIG_ARCH_HIBERNATION_HEADER=y
+CONFIG_SUSPEND=y
+CONFIG_SUSPEND_FREEZER=y
+CONFIG_HIBERNATE_CALLBACKS=y
+CONFIG_HIBERNATION=y
+CONFIG_PM_STD_PARTITION=""
+CONFIG_PM_SLEEP=y
+CONFIG_PM_SLEEP_SMP=y
+# CONFIG_PM_AUTOSLEEP is not set
+# CONFIG_PM_WAKELOCKS is not set
+# CONFIG_PM_RUNTIME is not set
+CONFIG_PM=y
+CONFIG_PM_DEBUG=y
+# CONFIG_PM_ADVANCED_DEBUG is not set
+# CONFIG_PM_TEST_SUSPEND is not set
+CONFIG_PM_SLEEP_DEBUG=y
+CONFIG_PM_TRACE=y
+CONFIG_PM_TRACE_RTC=y
+# CONFIG_WQ_POWER_EFFICIENT_DEFAULT is not set
+CONFIG_ACPI=y
+CONFIG_ACPI_LEGACY_TABLES_LOOKUP=y
+CONFIG_ARCH_MIGHT_HAVE_ACPI_PDC=y
+CONFIG_ACPI_SLEEP=y
+# CONFIG_ACPI_PROCFS_POWER is not set
+# CONFIG_ACPI_EC_DEBUGFS is not set
+CONFIG_ACPI_AC=y
+CONFIG_ACPI_BATTERY=y
+CONFIG_ACPI_BUTTON=y
+CONFIG_ACPI_VIDEO=y
+CONFIG_ACPI_FAN=y
+CONFIG_ACPI_DOCK=y
+CONFIG_ACPI_PROCESSOR=y
+CONFIG_ACPI_HOTPLUG_CPU=y
+# CONFIG_ACPI_PROCESSOR_AGGREGATOR is not set
+CONFIG_ACPI_THERMAL=y
+CONFIG_ACPI_NUMA=y
+# CONFIG_ACPI_CUSTOM_DSDT is not set
+# CONFIG_ACPI_DEBUG is not set
+# CONFIG_ACPI_PCI_SLOT is not set
+CONFIG_X86_PM_TIMER=y
+CONFIG_ACPI_CONTAINER=y
+# CONFIG_ACPI_SBS is not set
+# CONFIG_ACPI_HED is not set
+# CONFIG_ACPI_CUSTOM_METHOD is not set
+# CONFIG_ACPI_BGRT is not set
+# CONFIG_ACPI_REDUCED_HARDWARE_ONLY is not set
+CONFIG_HAVE_ACPI_APEI=y
+CONFIG_HAVE_ACPI_APEI_NMI=y
+# CONFIG_ACPI_APEI is not set
+# CONFIG_ACPI_EXTLOG is not set
+# CONFIG_SFI is not set
+
+#
+# CPU Frequency scaling
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_GOV_COMMON=y
+# CONFIG_CPU_FREQ_STAT is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
+CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+# CONFIG_CPU_FREQ_GOV_POWERSAVE is not set
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+# CONFIG_CPU_FREQ_GOV_CONSERVATIVE is not set
+
+#
+# x86 CPU frequency scaling drivers
+#
+# CONFIG_X86_INTEL_PSTATE is not set
+# CONFIG_X86_PCC_CPUFREQ is not set
+CONFIG_X86_ACPI_CPUFREQ=y
+CONFIG_X86_ACPI_CPUFREQ_CPB=y
+# CONFIG_X86_POWERNOW_K8 is not set
+# CONFIG_X86_AMD_FREQ_SENSITIVITY is not set
+# CONFIG_X86_SPEEDSTEP_CENTRINO is not set
+# CONFIG_X86_P4_CLOCKMOD is not set
+
+#
+# shared options
+#
+# CONFIG_X86_SPEEDSTEP_LIB is not set
+
+#
+# CPU Idle
+#
+CONFIG_CPU_IDLE=y
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+# CONFIG_ARCH_NEEDS_CPU_IDLE_COUPLED is not set
+# CONFIG_INTEL_IDLE is not set
+
+#
+# Memory power savings
+#
+# CONFIG_I7300_IDLE is not set
+
+#
+# Bus options (PCI etc.)
+#
+CONFIG_PCI=y
+CONFIG_PCI_DIRECT=y
+CONFIG_PCI_MMCONFIG=y
+CONFIG_PCI_DOMAINS=y
+CONFIG_PCIEPORTBUS=y
+# CONFIG_HOTPLUG_PCI_PCIE is not set
+CONFIG_PCIEAER=y
+# CONFIG_PCIE_ECRC is not set
+# CONFIG_PCIEAER_INJECT is not set
+CONFIG_PCIEASPM=y
+# CONFIG_PCIEASPM_DEBUG is not set
+CONFIG_PCIEASPM_DEFAULT=y
+# CONFIG_PCIEASPM_POWERSAVE is not set
+# CONFIG_PCIEASPM_PERFORMANCE is not set
+CONFIG_PCI_MSI=y
+# CONFIG_PCI_DEBUG is not set
+# CONFIG_PCI_REALLOC_ENABLE_AUTO is not set
+# CONFIG_PCI_STUB is not set
+CONFIG_HT_IRQ=y
+CONFIG_PCI_ATS=y
+# CONFIG_PCI_IOV is not set
+CONFIG_PCI_PRI=y
+CONFIG_PCI_PASID=y
+# CONFIG_PCI_IOAPIC is not set
+CONFIG_PCI_LABEL=y
+
+#
+# PCI host controller drivers
+#
+CONFIG_ISA_DMA_API=y
+CONFIG_AMD_NB=y
+CONFIG_PCCARD=y
+CONFIG_PCMCIA=y
+CONFIG_PCMCIA_LOAD_CIS=y
+CONFIG_CARDBUS=y
+
+#
+# PC-card bridges
+#
+CONFIG_YENTA=y
+CONFIG_YENTA_O2=y
+CONFIG_YENTA_RICOH=y
+CONFIG_YENTA_TI=y
+CONFIG_YENTA_ENE_TUNE=y
+CONFIG_YENTA_TOSHIBA=y
+# CONFIG_PD6729 is not set
+# CONFIG_I82092 is not set
+CONFIG_PCCARD_NONSTATIC=y
+CONFIG_HOTPLUG_PCI=y
+# CONFIG_HOTPLUG_PCI_ACPI is not set
+# CONFIG_HOTPLUG_PCI_CPCI is not set
+# CONFIG_HOTPLUG_PCI_SHPC is not set
+# CONFIG_RAPIDIO is not set
+# CONFIG_X86_SYSFB is not set
+
+#
+# Executable file formats / Emulations
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_COMPAT_BINFMT_ELF=y
+CONFIG_ARCH_BINFMT_ELF_RANDOMIZE_PIE=y
+CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS=y
+CONFIG_BINFMT_SCRIPT=y
+# CONFIG_HAVE_AOUT is not set
+CONFIG_BINFMT_MISC=y
+CONFIG_COREDUMP=y
+CONFIG_IA32_EMULATION=y
+# CONFIG_IA32_AOUT is not set
+# CONFIG_X86_X32 is not set
+CONFIG_COMPAT=y
+CONFIG_COMPAT_FOR_U64_ALIGNMENT=y
+CONFIG_SYSVIPC_COMPAT=y
+CONFIG_KEYS_COMPAT=y
+CONFIG_X86_DEV_DMA_OPS=y
+CONFIG_IOSF_MBI=m
+CONFIG_PMC_ATOM=y
+CONFIG_NET=y
+
+#
+# Networking options
+#
+CONFIG_PACKET=y
+# CONFIG_PACKET_DIAG is not set
+CONFIG_UNIX=y
+# CONFIG_UNIX_DIAG is not set
+CONFIG_XFRM=y
+CONFIG_XFRM_ALGO=y
+CONFIG_XFRM_USER=y
+# CONFIG_XFRM_SUB_POLICY is not set
+# CONFIG_XFRM_MIGRATE is not set
+# CONFIG_XFRM_STATISTICS is not set
+# CONFIG_NET_KEY is not set
+CONFIG_INET=y
+CONFIG_IP_MULTICAST=y
+CONFIG_IP_ADVANCED_ROUTER=y
+# CONFIG_IP_FIB_TRIE_STATS is not set
+CONFIG_IP_MULTIPLE_TABLES=y
+CONFIG_IP_ROUTE_MULTIPATH=y
+CONFIG_IP_ROUTE_VERBOSE=y
+CONFIG_IP_PNP=y
+CONFIG_IP_PNP_DHCP=y
+CONFIG_IP_PNP_BOOTP=y
+CONFIG_IP_PNP_RARP=y
+# CONFIG_NET_IPIP is not set
+# CONFIG_NET_IPGRE_DEMUX is not set
+CONFIG_NET_IP_TUNNEL=y
+CONFIG_IP_MROUTE=y
+# CONFIG_IP_MROUTE_MULTIPLE_TABLES is not set
+CONFIG_IP_PIMSM_V1=y
+CONFIG_IP_PIMSM_V2=y
+CONFIG_SYN_COOKIES=y
+# CONFIG_NET_UDP_TUNNEL is not set
+# CONFIG_INET_AH is not set
+# CONFIG_INET_ESP is not set
+# CONFIG_INET_IPCOMP is not set
+# CONFIG_INET_XFRM_TUNNEL is not set
+CONFIG_INET_TUNNEL=y
+# CONFIG_INET_XFRM_MODE_TRANSPORT is not set
+# CONFIG_INET_XFRM_MODE_TUNNEL is not set
+# CONFIG_INET_XFRM_MODE_BEET is not set
+CONFIG_INET_LRO=y
+# CONFIG_INET_DIAG is not set
+CONFIG_TCP_CONG_ADVANCED=y
+# CONFIG_TCP_CONG_BIC is not set
+CONFIG_TCP_CONG_CUBIC=y
+# CONFIG_TCP_CONG_WESTWOOD is not set
+# CONFIG_TCP_CONG_HTCP is not set
+# CONFIG_TCP_CONG_HSTCP is not set
+# CONFIG_TCP_CONG_HYBLA is not set
+# CONFIG_TCP_CONG_VEGAS is not set
+# CONFIG_TCP_CONG_SCALABLE is not set
+# CONFIG_TCP_CONG_LP is not set
+# CONFIG_TCP_CONG_VENO is not set
+# CONFIG_TCP_CONG_YEAH is not set
+# CONFIG_TCP_CONG_ILLINOIS is not set
+CONFIG_DEFAULT_CUBIC=y
+# CONFIG_DEFAULT_RENO is not set
+CONFIG_DEFAULT_TCP_CONG="cubic"
+CONFIG_TCP_MD5SIG=y
+CONFIG_IPV6=y
+# CONFIG_IPV6_ROUTER_PREF is not set
+# CONFIG_IPV6_OPTIMISTIC_DAD is not set
+CONFIG_INET6_AH=y
+CONFIG_INET6_ESP=y
+# CONFIG_INET6_IPCOMP is not set
+# CONFIG_IPV6_MIP6 is not set
+# CONFIG_INET6_XFRM_TUNNEL is not set
+# CONFIG_INET6_TUNNEL is not set
+CONFIG_INET6_XFRM_MODE_TRANSPORT=y
+CONFIG_INET6_XFRM_MODE_TUNNEL=y
+CONFIG_INET6_XFRM_MODE_BEET=y
+# CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION is not set
+# CONFIG_IPV6_VTI is not set
+CONFIG_IPV6_SIT=y
+# CONFIG_IPV6_SIT_6RD is not set
+CONFIG_IPV6_NDISC_NODETYPE=y
+# CONFIG_IPV6_TUNNEL is not set
+# CONFIG_IPV6_GRE is not set
+# CONFIG_IPV6_MULTIPLE_TABLES is not set
+# CONFIG_IPV6_MROUTE is not set
+CONFIG_NETLABEL=y
+CONFIG_NETWORK_SECMARK=y
+CONFIG_NET_PTP_CLASSIFY=y
+# CONFIG_NETWORK_PHY_TIMESTAMPING is not set
+CONFIG_NETFILTER=y
+# CONFIG_NETFILTER_DEBUG is not set
+# CONFIG_NETFILTER_ADVANCED is not set
+
+#
+# Core Netfilter Configuration
+#
+CONFIG_NETFILTER_NETLINK=y
+CONFIG_NETFILTER_NETLINK_LOG=y
+CONFIG_NF_CONNTRACK=y
+CONFIG_NF_LOG_COMMON=m
+CONFIG_NF_CONNTRACK_SECMARK=y
+CONFIG_NF_CONNTRACK_PROCFS=y
+CONFIG_NF_CONNTRACK_FTP=y
+CONFIG_NF_CONNTRACK_IRC=y
+# CONFIG_NF_CONNTRACK_NETBIOS_NS is not set
+CONFIG_NF_CONNTRACK_SIP=y
+CONFIG_NF_CT_NETLINK=y
+CONFIG_NF_NAT=m
+CONFIG_NF_NAT_NEEDED=y
+# CONFIG_NF_NAT_AMANDA is not set
+CONFIG_NF_NAT_FTP=m
+CONFIG_NF_NAT_IRC=m
+CONFIG_NF_NAT_SIP=m
+# CONFIG_NF_NAT_TFTP is not set
+# CONFIG_NF_TABLES is not set
+CONFIG_NETFILTER_XTABLES=y
+
+#
+# Xtables combined modules
+#
+CONFIG_NETFILTER_XT_MARK=m
+
+#
+# Xtables targets
+#
+CONFIG_NETFILTER_XT_TARGET_CONNSECMARK=y
+CONFIG_NETFILTER_XT_TARGET_LOG=m
+CONFIG_NETFILTER_XT_NAT=m
+# CONFIG_NETFILTER_XT_TARGET_NETMAP is not set
+CONFIG_NETFILTER_XT_TARGET_NFLOG=y
+# CONFIG_NETFILTER_XT_TARGET_REDIRECT is not set
+CONFIG_NETFILTER_XT_TARGET_SECMARK=y
+CONFIG_NETFILTER_XT_TARGET_TCPMSS=y
+
+#
+# Xtables matches
+#
+CONFIG_NETFILTER_XT_MATCH_CONNTRACK=y
+CONFIG_NETFILTER_XT_MATCH_POLICY=y
+CONFIG_NETFILTER_XT_MATCH_STATE=y
+# CONFIG_IP_SET is not set
+# CONFIG_IP_VS is not set
+
+#
+# IP: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV4=y
+CONFIG_NF_CONNTRACK_IPV4=y
+CONFIG_NF_CONNTRACK_PROC_COMPAT=y
+CONFIG_NF_LOG_ARP=m
+CONFIG_NF_LOG_IPV4=m
+CONFIG_NF_NAT_IPV4=m
+# CONFIG_NF_NAT_PPTP is not set
+# CONFIG_NF_NAT_H323 is not set
+CONFIG_IP_NF_IPTABLES=y
+CONFIG_IP_NF_FILTER=y
+CONFIG_IP_NF_TARGET_REJECT=y
+CONFIG_IP_NF_NAT=m
+CONFIG_IP_NF_TARGET_MASQUERADE=m
+CONFIG_IP_NF_MANGLE=y
+# CONFIG_IP_NF_RAW is not set
+
+#
+# IPv6: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV6=y
+CONFIG_NF_CONNTRACK_IPV6=y
+CONFIG_NF_LOG_IPV6=m
+CONFIG_IP6_NF_IPTABLES=y
+CONFIG_IP6_NF_MATCH_IPV6HEADER=y
+CONFIG_IP6_NF_FILTER=y
+CONFIG_IP6_NF_TARGET_REJECT=y
+CONFIG_IP6_NF_MANGLE=y
+# CONFIG_IP6_NF_RAW is not set
+# CONFIG_IP_DCCP is not set
+# CONFIG_IP_SCTP is not set
+# CONFIG_RDS is not set
+# CONFIG_TIPC is not set
+CONFIG_GMTP=y
+
+#
+# GMTP Kernel Hacking
+#
+CONFIG_GMTP_PRI=y
+# CONFIG_ATM is not set
+# CONFIG_L2TP is not set
+# CONFIG_BRIDGE is not set
+CONFIG_HAVE_NET_DSA=y
+# CONFIG_VLAN_8021Q is not set
+# CONFIG_DECNET is not set
+# CONFIG_LLC2 is not set
+# CONFIG_IPX is not set
+# CONFIG_ATALK is not set
+# CONFIG_X25 is not set
+# CONFIG_LAPB is not set
+# CONFIG_PHONET is not set
+# CONFIG_6LOWPAN is not set
+# CONFIG_IEEE802154 is not set
+CONFIG_NET_SCHED=y
+
+#
+# Queueing/Scheduling
+#
+# CONFIG_NET_SCH_CBQ is not set
+# CONFIG_NET_SCH_HTB is not set
+# CONFIG_NET_SCH_HFSC is not set
+# CONFIG_NET_SCH_PRIO is not set
+# CONFIG_NET_SCH_MULTIQ is not set
+# CONFIG_NET_SCH_RED is not set
+# CONFIG_NET_SCH_SFB is not set
+# CONFIG_NET_SCH_SFQ is not set
+# CONFIG_NET_SCH_TEQL is not set
+# CONFIG_NET_SCH_TBF is not set
+# CONFIG_NET_SCH_GRED is not set
+# CONFIG_NET_SCH_DSMARK is not set
+# CONFIG_NET_SCH_NETEM is not set
+# CONFIG_NET_SCH_DRR is not set
+# CONFIG_NET_SCH_MQPRIO is not set
+# CONFIG_NET_SCH_CHOKE is not set
+# CONFIG_NET_SCH_QFQ is not set
+# CONFIG_NET_SCH_CODEL is not set
+# CONFIG_NET_SCH_FQ_CODEL is not set
+# CONFIG_NET_SCH_FQ is not set
+# CONFIG_NET_SCH_HHF is not set
+# CONFIG_NET_SCH_PIE is not set
+# CONFIG_NET_SCH_INGRESS is not set
+# CONFIG_NET_SCH_PLUG is not set
+
+#
+# Classification
+#
+CONFIG_NET_CLS=y
+# CONFIG_NET_CLS_BASIC is not set
+# CONFIG_NET_CLS_TCINDEX is not set
+# CONFIG_NET_CLS_ROUTE4 is not set
+# CONFIG_NET_CLS_FW is not set
+# CONFIG_NET_CLS_U32 is not set
+# CONFIG_NET_CLS_RSVP is not set
+# CONFIG_NET_CLS_RSVP6 is not set
+# CONFIG_NET_CLS_FLOW is not set
+# CONFIG_NET_CLS_CGROUP is not set
+# CONFIG_NET_CLS_BPF is not set
+CONFIG_NET_EMATCH=y
+CONFIG_NET_EMATCH_STACK=32
+# CONFIG_NET_EMATCH_CMP is not set
+# CONFIG_NET_EMATCH_NBYTE is not set
+# CONFIG_NET_EMATCH_U32 is not set
+# CONFIG_NET_EMATCH_META is not set
+# CONFIG_NET_EMATCH_TEXT is not set
+CONFIG_NET_CLS_ACT=y
+# CONFIG_NET_ACT_POLICE is not set
+# CONFIG_NET_ACT_GACT is not set
+# CONFIG_NET_ACT_MIRRED is not set
+# CONFIG_NET_ACT_IPT is not set
+# CONFIG_NET_ACT_NAT is not set
+# CONFIG_NET_ACT_PEDIT is not set
+# CONFIG_NET_ACT_SIMP is not set
+# CONFIG_NET_ACT_SKBEDIT is not set
+# CONFIG_NET_ACT_CSUM is not set
+CONFIG_NET_SCH_FIFO=y
+# CONFIG_DCB is not set
+CONFIG_DNS_RESOLVER=y
+# CONFIG_BATMAN_ADV is not set
+# CONFIG_OPENVSWITCH is not set
+# CONFIG_VSOCKETS is not set
+# CONFIG_NETLINK_MMAP is not set
+# CONFIG_NETLINK_DIAG is not set
+# CONFIG_NET_MPLS_GSO is not set
+# CONFIG_HSR is not set
+CONFIG_RPS=y
+CONFIG_RFS_ACCEL=y
+CONFIG_XPS=y
+# CONFIG_CGROUP_NET_PRIO is not set
+# CONFIG_CGROUP_NET_CLASSID is not set
+CONFIG_NET_RX_BUSY_POLL=y
+CONFIG_BQL=y
+# CONFIG_BPF_JIT is not set
+CONFIG_NET_FLOW_LIMIT=y
+
+#
+# Network testing
+#
+# CONFIG_NET_PKTGEN is not set
+# CONFIG_NET_TCPPROBE is not set
+# CONFIG_NET_DROP_MONITOR is not set
+CONFIG_HAMRADIO=y
+
+#
+# Packet Radio protocols
+#
+# CONFIG_AX25 is not set
+# CONFIG_CAN is not set
+# CONFIG_IRDA is not set
+# CONFIG_BT is not set
+# CONFIG_AF_RXRPC is not set
+CONFIG_FIB_RULES=y
+CONFIG_WIRELESS=y
+CONFIG_CFG80211=y
+# CONFIG_NL80211_TESTMODE is not set
+# CONFIG_CFG80211_DEVELOPER_WARNINGS is not set
+# CONFIG_CFG80211_REG_DEBUG is not set
+CONFIG_CFG80211_DEFAULT_PS=y
+# CONFIG_CFG80211_DEBUGFS is not set
+# CONFIG_CFG80211_INTERNAL_REGDB is not set
+# CONFIG_CFG80211_WEXT is not set
+# CONFIG_LIB80211 is not set
+CONFIG_MAC80211=y
+CONFIG_MAC80211_HAS_RC=y
+CONFIG_MAC80211_RC_MINSTREL=y
+CONFIG_MAC80211_RC_MINSTREL_HT=y
+CONFIG_MAC80211_RC_DEFAULT_MINSTREL=y
+CONFIG_MAC80211_RC_DEFAULT="minstrel_ht"
+# CONFIG_MAC80211_MESH is not set
+CONFIG_MAC80211_LEDS=y
+# CONFIG_MAC80211_DEBUGFS is not set
+# CONFIG_MAC80211_MESSAGE_TRACING is not set
+# CONFIG_MAC80211_DEBUG_MENU is not set
+# CONFIG_WIMAX is not set
+CONFIG_RFKILL=y
+CONFIG_RFKILL_LEDS=y
+CONFIG_RFKILL_INPUT=y
+# CONFIG_NET_9P is not set
+# CONFIG_CAIF is not set
+# CONFIG_CEPH_LIB is not set
+# CONFIG_NFC is not set
+CONFIG_HAVE_BPF_JIT=y
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+CONFIG_UEVENT_HELPER=y
+CONFIG_UEVENT_HELPER_PATH="/sbin/hotplug"
+CONFIG_DEVTMPFS=y
+CONFIG_DEVTMPFS_MOUNT=y
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+CONFIG_FW_LOADER=y
+CONFIG_FIRMWARE_IN_KERNEL=y
+CONFIG_EXTRA_FIRMWARE=""
+# CONFIG_FW_LOADER_USER_HELPER_FALLBACK is not set
+# CONFIG_DEBUG_DRIVER is not set
+CONFIG_DEBUG_DEVRES=y
+# CONFIG_SYS_HYPERVISOR is not set
+# CONFIG_GENERIC_CPU_DEVICES is not set
+CONFIG_GENERIC_CPU_AUTOPROBE=y
+CONFIG_DMA_SHARED_BUFFER=y
+# CONFIG_FENCE_TRACE is not set
+
+#
+# Bus devices
+#
+CONFIG_CONNECTOR=y
+CONFIG_PROC_EVENTS=y
+# CONFIG_MTD is not set
+CONFIG_ARCH_MIGHT_HAVE_PC_PARPORT=y
+# CONFIG_PARPORT is not set
+CONFIG_PNP=y
+CONFIG_PNP_DEBUG_MESSAGES=y
+
+#
+# Protocols
+#
+CONFIG_PNPACPI=y
+CONFIG_BLK_DEV=y
+# CONFIG_BLK_DEV_NULL_BLK is not set
+# CONFIG_BLK_DEV_FD is not set
+# CONFIG_BLK_DEV_PCIESSD_MTIP32XX is not set
+# CONFIG_BLK_CPQ_CISS_DA is not set
+# CONFIG_BLK_DEV_DAC960 is not set
+# CONFIG_BLK_DEV_UMEM is not set
+# CONFIG_BLK_DEV_COW_COMMON is not set
+CONFIG_BLK_DEV_LOOP=y
+CONFIG_BLK_DEV_LOOP_MIN_COUNT=8
+# CONFIG_BLK_DEV_CRYPTOLOOP is not set
+# CONFIG_BLK_DEV_DRBD is not set
+# CONFIG_BLK_DEV_NBD is not set
+# CONFIG_BLK_DEV_NVME is not set
+# CONFIG_BLK_DEV_SKD is not set
+# CONFIG_BLK_DEV_SX8 is not set
+# CONFIG_BLK_DEV_RAM is not set
+# CONFIG_CDROM_PKTCDVD is not set
+# CONFIG_ATA_OVER_ETH is not set
+# CONFIG_BLK_DEV_HD is not set
+# CONFIG_BLK_DEV_RBD is not set
+# CONFIG_BLK_DEV_RSXX is not set
+
+#
+# Misc devices
+#
+# CONFIG_SENSORS_LIS3LV02D is not set
+# CONFIG_AD525X_DPOT is not set
+# CONFIG_DUMMY_IRQ is not set
+# CONFIG_IBM_ASM is not set
+# CONFIG_PHANTOM is not set
+# CONFIG_SGI_IOC4 is not set
+# CONFIG_TIFM_CORE is not set
+# CONFIG_ICS932S401 is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+# CONFIG_HP_ILO is not set
+# CONFIG_APDS9802ALS is not set
+# CONFIG_ISL29003 is not set
+# CONFIG_ISL29020 is not set
+# CONFIG_SENSORS_TSL2550 is not set
+# CONFIG_SENSORS_BH1780 is not set
+# CONFIG_SENSORS_BH1770 is not set
+# CONFIG_SENSORS_APDS990X is not set
+# CONFIG_HMC6352 is not set
+# CONFIG_DS1682 is not set
+# CONFIG_BMP085_I2C is not set
+# CONFIG_USB_SWITCH_FSA9480 is not set
+# CONFIG_SRAM is not set
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
+# CONFIG_EEPROM_AT24 is not set
+# CONFIG_EEPROM_LEGACY is not set
+# CONFIG_EEPROM_MAX6875 is not set
+# CONFIG_EEPROM_93CX6 is not set
+# CONFIG_CB710_CORE is not set
+
+#
+# Texas Instruments shared transport line discipline
+#
+# CONFIG_SENSORS_LIS3_I2C is not set
+
+#
+# Altera FPGA firmware download module
+#
+# CONFIG_ALTERA_STAPL is not set
+# CONFIG_VMWARE_VMCI is not set
+
+#
+# Intel MIC Bus Driver
+#
+# CONFIG_INTEL_MIC_BUS is not set
+
+#
+# Intel MIC Host Driver
+#
+
+#
+# Intel MIC Card Driver
+#
+# CONFIG_GENWQE is not set
+# CONFIG_ECHO is not set
+CONFIG_HAVE_IDE=y
+# CONFIG_IDE is not set
+
+#
+# SCSI device support
+#
+CONFIG_SCSI_MOD=y
+# CONFIG_RAID_ATTRS is not set
+CONFIG_SCSI=y
+CONFIG_SCSI_DMA=y
+# CONFIG_SCSI_NETLINK is not set
+CONFIG_SCSI_PROC_FS=y
+
+#
+# SCSI support type (disk, tape, CD-ROM)
+#
+CONFIG_BLK_DEV_SD=y
+# CONFIG_CHR_DEV_ST is not set
+# CONFIG_CHR_DEV_OSST is not set
+CONFIG_BLK_DEV_SR=y
+CONFIG_BLK_DEV_SR_VENDOR=y
+CONFIG_CHR_DEV_SG=y
+# CONFIG_CHR_DEV_SCH is not set
+CONFIG_SCSI_CONSTANTS=y
+# CONFIG_SCSI_LOGGING is not set
+# CONFIG_SCSI_SCAN_ASYNC is not set
+
+#
+# SCSI Transports
+#
+CONFIG_SCSI_SPI_ATTRS=y
+# CONFIG_SCSI_FC_ATTRS is not set
+# CONFIG_SCSI_ISCSI_ATTRS is not set
+# CONFIG_SCSI_SAS_ATTRS is not set
+# CONFIG_SCSI_SAS_LIBSAS is not set
+# CONFIG_SCSI_SRP_ATTRS is not set
+# CONFIG_SCSI_LOWLEVEL is not set
+# CONFIG_SCSI_LOWLEVEL_PCMCIA is not set
+# CONFIG_SCSI_DH is not set
+# CONFIG_SCSI_OSD_INITIATOR is not set
+CONFIG_ATA=y
+# CONFIG_ATA_NONSTANDARD is not set
+CONFIG_ATA_VERBOSE_ERROR=y
+CONFIG_ATA_ACPI=y
+CONFIG_SATA_PMP=y
+
+#
+# Controllers with non-SFF native interface
+#
+CONFIG_SATA_AHCI=y
+# CONFIG_SATA_AHCI_PLATFORM is not set
+# CONFIG_SATA_INIC162X is not set
+# CONFIG_SATA_ACARD_AHCI is not set
+# CONFIG_SATA_SIL24 is not set
+CONFIG_ATA_SFF=y
+
+#
+# SFF controllers with custom DMA interface
+#
+# CONFIG_PDC_ADMA is not set
+# CONFIG_SATA_QSTOR is not set
+# CONFIG_SATA_SX4 is not set
+CONFIG_ATA_BMDMA=y
+
+#
+# SATA SFF controllers with BMDMA
+#
+CONFIG_ATA_PIIX=y
+# CONFIG_SATA_MV is not set
+# CONFIG_SATA_NV is not set
+# CONFIG_SATA_PROMISE is not set
+# CONFIG_SATA_SIL is not set
+# CONFIG_SATA_SIS is not set
+# CONFIG_SATA_SVW is not set
+# CONFIG_SATA_ULI is not set
+# CONFIG_SATA_VIA is not set
+# CONFIG_SATA_VITESSE is not set
+
+#
+# PATA SFF controllers with BMDMA
+#
+# CONFIG_PATA_ALI is not set
+CONFIG_PATA_AMD=y
+# CONFIG_PATA_ARTOP is not set
+# CONFIG_PATA_ATIIXP is not set
+# CONFIG_PATA_ATP867X is not set
+# CONFIG_PATA_CMD64X is not set
+# CONFIG_PATA_CYPRESS is not set
+# CONFIG_PATA_EFAR is not set
+# CONFIG_PATA_HPT366 is not set
+# CONFIG_PATA_HPT37X is not set
+# CONFIG_PATA_HPT3X2N is not set
+# CONFIG_PATA_HPT3X3 is not set
+# CONFIG_PATA_IT8213 is not set
+# CONFIG_PATA_IT821X is not set
+# CONFIG_PATA_JMICRON is not set
+# CONFIG_PATA_MARVELL is not set
+# CONFIG_PATA_NETCELL is not set
+# CONFIG_PATA_NINJA32 is not set
+# CONFIG_PATA_NS87415 is not set
+CONFIG_PATA_OLDPIIX=y
+# CONFIG_PATA_OPTIDMA is not set
+# CONFIG_PATA_PDC2027X is not set
+# CONFIG_PATA_PDC_OLD is not set
+# CONFIG_PATA_RADISYS is not set
+# CONFIG_PATA_RDC is not set
+CONFIG_PATA_SCH=y
+# CONFIG_PATA_SERVERWORKS is not set
+# CONFIG_PATA_SIL680 is not set
+# CONFIG_PATA_SIS is not set
+# CONFIG_PATA_TOSHIBA is not set
+# CONFIG_PATA_TRIFLEX is not set
+# CONFIG_PATA_VIA is not set
+# CONFIG_PATA_WINBOND is not set
+
+#
+# PIO-only SFF controllers
+#
+# CONFIG_PATA_CMD640_PCI is not set
+# CONFIG_PATA_MPIIX is not set
+# CONFIG_PATA_NS87410 is not set
+# CONFIG_PATA_OPTI is not set
+# CONFIG_PATA_PCMCIA is not set
+# CONFIG_PATA_RZ1000 is not set
+
+#
+# Generic fallback / legacy drivers
+#
+# CONFIG_PATA_ACPI is not set
+# CONFIG_ATA_GENERIC is not set
+# CONFIG_PATA_LEGACY is not set
+CONFIG_MD=y
+CONFIG_BLK_DEV_MD=y
+CONFIG_MD_AUTODETECT=y
+# CONFIG_MD_LINEAR is not set
+# CONFIG_MD_RAID0 is not set
+# CONFIG_MD_RAID1 is not set
+# CONFIG_MD_RAID10 is not set
+# CONFIG_MD_RAID456 is not set
+# CONFIG_MD_MULTIPATH is not set
+# CONFIG_MD_FAULTY is not set
+# CONFIG_BCACHE is not set
+CONFIG_BLK_DEV_DM_BUILTIN=y
+CONFIG_BLK_DEV_DM=y
+# CONFIG_DM_DEBUG is not set
+# CONFIG_DM_CRYPT is not set
+# CONFIG_DM_SNAPSHOT is not set
+# CONFIG_DM_THIN_PROVISIONING is not set
+# CONFIG_DM_CACHE is not set
+# CONFIG_DM_ERA is not set
+CONFIG_DM_MIRROR=y
+# CONFIG_DM_LOG_USERSPACE is not set
+# CONFIG_DM_RAID is not set
+CONFIG_DM_ZERO=y
+# CONFIG_DM_MULTIPATH is not set
+# CONFIG_DM_DELAY is not set
+# CONFIG_DM_UEVENT is not set
+# CONFIG_DM_FLAKEY is not set
+# CONFIG_DM_VERITY is not set
+# CONFIG_DM_SWITCH is not set
+# CONFIG_TARGET_CORE is not set
+# CONFIG_FUSION is not set
+
+#
+# IEEE 1394 (FireWire) support
+#
+# CONFIG_FIREWIRE is not set
+# CONFIG_FIREWIRE_NOSY is not set
+# CONFIG_I2O is not set
+CONFIG_MACINTOSH_DRIVERS=y
+CONFIG_MAC_EMUMOUSEBTN=y
+CONFIG_NETDEVICES=y
+CONFIG_MII=y
+CONFIG_NET_CORE=y
+# CONFIG_BONDING is not set
+# CONFIG_DUMMY is not set
+# CONFIG_EQUALIZER is not set
+# CONFIG_NET_FC is not set
+# CONFIG_IFB is not set
+# CONFIG_NET_TEAM is not set
+# CONFIG_MACVLAN is not set
+# CONFIG_VXLAN is not set
+CONFIG_NETCONSOLE=y
+CONFIG_NETPOLL=y
+CONFIG_NET_POLL_CONTROLLER=y
+# CONFIG_TUN is not set
+# CONFIG_VETH is not set
+# CONFIG_NLMON is not set
+# CONFIG_ARCNET is not set
+
+#
+# CAIF transport drivers
+#
+# CONFIG_VHOST_NET is not set
+
+#
+# Distributed Switch Architecture drivers
+#
+# CONFIG_NET_DSA_MV88E6XXX is not set
+# CONFIG_NET_DSA_MV88E6060 is not set
+# CONFIG_NET_DSA_MV88E6XXX_NEED_PPU is not set
+# CONFIG_NET_DSA_MV88E6131 is not set
+# CONFIG_NET_DSA_MV88E6123_61_65 is not set
+CONFIG_ETHERNET=y
+CONFIG_NET_VENDOR_3COM=y
+# CONFIG_PCMCIA_3C574 is not set
+# CONFIG_PCMCIA_3C589 is not set
+# CONFIG_VORTEX is not set
+# CONFIG_TYPHOON is not set
+CONFIG_NET_VENDOR_ADAPTEC=y
+# CONFIG_ADAPTEC_STARFIRE is not set
+CONFIG_NET_VENDOR_ALTEON=y
+# CONFIG_ACENIC is not set
+# CONFIG_ALTERA_TSE is not set
+CONFIG_NET_VENDOR_AMD=y
+# CONFIG_AMD8111_ETH is not set
+# CONFIG_PCNET32 is not set
+# CONFIG_PCMCIA_NMCLAN is not set
+# CONFIG_NET_XGENE is not set
+CONFIG_NET_VENDOR_ARC=y
+CONFIG_NET_VENDOR_ATHEROS=y
+# CONFIG_ATL2 is not set
+# CONFIG_ATL1 is not set
+# CONFIG_ATL1E is not set
+# CONFIG_ATL1C is not set
+# CONFIG_ALX is not set
+CONFIG_NET_VENDOR_BROADCOM=y
+# CONFIG_B44 is not set
+# CONFIG_BNX2 is not set
+# CONFIG_CNIC is not set
+CONFIG_TIGON3=y
+# CONFIG_BNX2X is not set
+CONFIG_NET_VENDOR_BROCADE=y
+# CONFIG_BNA is not set
+CONFIG_NET_VENDOR_CHELSIO=y
+# CONFIG_CHELSIO_T1 is not set
+# CONFIG_CHELSIO_T3 is not set
+# CONFIG_CHELSIO_T4 is not set
+# CONFIG_CHELSIO_T4VF is not set
+CONFIG_NET_VENDOR_CISCO=y
+# CONFIG_ENIC is not set
+# CONFIG_CX_ECAT is not set
+# CONFIG_DNET is not set
+CONFIG_NET_VENDOR_DEC=y
+CONFIG_NET_TULIP=y
+# CONFIG_DE2104X is not set
+# CONFIG_TULIP is not set
+# CONFIG_DE4X5 is not set
+# CONFIG_WINBOND_840 is not set
+# CONFIG_DM9102 is not set
+# CONFIG_ULI526X is not set
+# CONFIG_PCMCIA_XIRCOM is not set
+CONFIG_NET_VENDOR_DLINK=y
+# CONFIG_DL2K is not set
+# CONFIG_SUNDANCE is not set
+CONFIG_NET_VENDOR_EMULEX=y
+# CONFIG_BE2NET is not set
+CONFIG_NET_VENDOR_EXAR=y
+# CONFIG_S2IO is not set
+# CONFIG_VXGE is not set
+CONFIG_NET_VENDOR_FUJITSU=y
+# CONFIG_PCMCIA_FMVJ18X is not set
+CONFIG_NET_VENDOR_HP=y
+# CONFIG_HP100 is not set
+CONFIG_NET_VENDOR_INTEL=y
+CONFIG_E100=y
+CONFIG_E1000=y
+# CONFIG_E1000E is not set
+# CONFIG_IGB is not set
+# CONFIG_IGBVF is not set
+# CONFIG_IXGB is not set
+# CONFIG_IXGBE is not set
+# CONFIG_IXGBEVF is not set
+# CONFIG_I40E is not set
+# CONFIG_I40EVF is not set
+CONFIG_NET_VENDOR_I825XX=y
+# CONFIG_IP1000 is not set
+# CONFIG_JME is not set
+CONFIG_NET_VENDOR_MARVELL=y
+# CONFIG_MVMDIO is not set
+# CONFIG_SKGE is not set
+CONFIG_SKY2=y
+# CONFIG_SKY2_DEBUG is not set
+CONFIG_NET_VENDOR_MELLANOX=y
+# CONFIG_MLX4_EN is not set
+# CONFIG_MLX4_CORE is not set
+# CONFIG_MLX5_CORE is not set
+CONFIG_NET_VENDOR_MICREL=y
+# CONFIG_KS8851_MLL is not set
+# CONFIG_KSZ884X_PCI is not set
+CONFIG_NET_VENDOR_MYRI=y
+# CONFIG_MYRI10GE is not set
+# CONFIG_FEALNX is not set
+CONFIG_NET_VENDOR_NATSEMI=y
+# CONFIG_NATSEMI is not set
+# CONFIG_NS83820 is not set
+CONFIG_NET_VENDOR_8390=y
+# CONFIG_PCMCIA_AXNET is not set
+# CONFIG_NE2K_PCI is not set
+# CONFIG_PCMCIA_PCNET is not set
+CONFIG_NET_VENDOR_NVIDIA=y
+CONFIG_FORCEDETH=y
+CONFIG_NET_VENDOR_OKI=y
+# CONFIG_ETHOC is not set
+CONFIG_NET_PACKET_ENGINE=y
+# CONFIG_HAMACHI is not set
+# CONFIG_YELLOWFIN is not set
+CONFIG_NET_VENDOR_QLOGIC=y
+# CONFIG_QLA3XXX is not set
+# CONFIG_QLCNIC is not set
+# CONFIG_QLGE is not set
+# CONFIG_NETXEN_NIC is not set
+CONFIG_NET_VENDOR_REALTEK=y
+# CONFIG_8139CP is not set
+CONFIG_8139TOO=y
+CONFIG_8139TOO_PIO=y
+# CONFIG_8139TOO_TUNE_TWISTER is not set
+# CONFIG_8139TOO_8129 is not set
+# CONFIG_8139_OLD_RX_RESET is not set
+# CONFIG_R8169 is not set
+CONFIG_NET_VENDOR_RDC=y
+# CONFIG_R6040 is not set
+CONFIG_NET_VENDOR_SAMSUNG=y
+# CONFIG_SXGBE_ETH is not set
+CONFIG_NET_VENDOR_SEEQ=y
+CONFIG_NET_VENDOR_SILAN=y
+# CONFIG_SC92031 is not set
+CONFIG_NET_VENDOR_SIS=y
+# CONFIG_SIS900 is not set
+# CONFIG_SIS190 is not set
+# CONFIG_SFC is not set
+CONFIG_NET_VENDOR_SMSC=y
+# CONFIG_PCMCIA_SMC91C92 is not set
+# CONFIG_EPIC100 is not set
+# CONFIG_SMSC911X is not set
+# CONFIG_SMSC9420 is not set
+CONFIG_NET_VENDOR_STMICRO=y
+# CONFIG_STMMAC_ETH is not set
+CONFIG_NET_VENDOR_SUN=y
+# CONFIG_HAPPYMEAL is not set
+# CONFIG_SUNGEM is not set
+# CONFIG_CASSINI is not set
+# CONFIG_NIU is not set
+CONFIG_NET_VENDOR_TEHUTI=y
+# CONFIG_TEHUTI is not set
+CONFIG_NET_VENDOR_TI=y
+# CONFIG_TLAN is not set
+CONFIG_NET_VENDOR_VIA=y
+# CONFIG_VIA_RHINE is not set
+# CONFIG_VIA_VELOCITY is not set
+CONFIG_NET_VENDOR_WIZNET=y
+# CONFIG_WIZNET_W5100 is not set
+# CONFIG_WIZNET_W5300 is not set
+CONFIG_NET_VENDOR_XIRCOM=y
+# CONFIG_PCMCIA_XIRC2PS is not set
+CONFIG_FDDI=y
+# CONFIG_DEFXX is not set
+# CONFIG_SKFP is not set
+# CONFIG_HIPPI is not set
+# CONFIG_NET_SB1000 is not set
+CONFIG_PHYLIB=y
+
+#
+# MII PHY device drivers
+#
+# CONFIG_AT803X_PHY is not set
+# CONFIG_AMD_PHY is not set
+# CONFIG_MARVELL_PHY is not set
+# CONFIG_DAVICOM_PHY is not set
+# CONFIG_QSEMI_PHY is not set
+# CONFIG_LXT_PHY is not set
+# CONFIG_CICADA_PHY is not set
+# CONFIG_VITESSE_PHY is not set
+# CONFIG_SMSC_PHY is not set
+# CONFIG_BROADCOM_PHY is not set
+# CONFIG_BCM7XXX_PHY is not set
+# CONFIG_BCM87XX_PHY is not set
+# CONFIG_ICPLUS_PHY is not set
+# CONFIG_REALTEK_PHY is not set
+# CONFIG_NATIONAL_PHY is not set
+# CONFIG_STE10XP is not set
+# CONFIG_LSI_ET1011C_PHY is not set
+# CONFIG_MICREL_PHY is not set
+# CONFIG_FIXED_PHY is not set
+# CONFIG_MDIO_BITBANG is not set
+# CONFIG_PPP is not set
+# CONFIG_SLIP is not set
+CONFIG_USB_NET_DRIVERS=y
+# CONFIG_USB_CATC is not set
+# CONFIG_USB_KAWETH is not set
+# CONFIG_USB_PEGASUS is not set
+# CONFIG_USB_RTL8150 is not set
+# CONFIG_USB_RTL8152 is not set
+# CONFIG_USB_USBNET is not set
+# CONFIG_USB_HSO is not set
+# CONFIG_USB_IPHETH is not set
+CONFIG_WLAN=y
+# CONFIG_PCMCIA_RAYCS is not set
+# CONFIG_LIBERTAS_THINFIRM is not set
+# CONFIG_AIRO is not set
+# CONFIG_ATMEL is not set
+# CONFIG_AT76C50X_USB is not set
+# CONFIG_AIRO_CS is not set
+# CONFIG_PCMCIA_WL3501 is not set
+# CONFIG_PRISM54 is not set
+# CONFIG_USB_ZD1201 is not set
+# CONFIG_USB_NET_RNDIS_WLAN is not set
+# CONFIG_RTL8180 is not set
+# CONFIG_RTL8187 is not set
+# CONFIG_ADM8211 is not set
+# CONFIG_MAC80211_HWSIM is not set
+# CONFIG_MWL8K is not set
+# CONFIG_ATH_CARDS is not set
+# CONFIG_B43 is not set
+# CONFIG_B43LEGACY is not set
+# CONFIG_BRCMSMAC is not set
+# CONFIG_BRCMFMAC is not set
+# CONFIG_HOSTAP is not set
+# CONFIG_IPW2100 is not set
+# CONFIG_IWLWIFI is not set
+# CONFIG_IWL4965 is not set
+# CONFIG_IWL3945 is not set
+# CONFIG_LIBERTAS is not set
+# CONFIG_P54_COMMON is not set
+# CONFIG_RT2X00 is not set
+CONFIG_RTL_CARDS=y
+# CONFIG_RTL8192CE is not set
+# CONFIG_RTL8192SE is not set
+# CONFIG_RTL8192DE is not set
+# CONFIG_RTL8723AE is not set
+# CONFIG_RTL8723BE is not set
+# CONFIG_RTL8188EE is not set
+# CONFIG_RTL8192CU is not set
+# CONFIG_WL_TI is not set
+# CONFIG_ZD1211RW is not set
+# CONFIG_MWIFIEX is not set
+# CONFIG_CW1200 is not set
+# CONFIG_RSI_91X is not set
+
+#
+# Enable WiMAX (Networking options) to see the WiMAX drivers
+#
+# CONFIG_WAN is not set
+# CONFIG_VMXNET3 is not set
+# CONFIG_ISDN is not set
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+CONFIG_INPUT_FF_MEMLESS=y
+CONFIG_INPUT_POLLDEV=y
+CONFIG_INPUT_SPARSEKMAP=y
+# CONFIG_INPUT_MATRIXKMAP is not set
+
+#
+# Userland interfaces
+#
+CONFIG_INPUT_MOUSEDEV=y
+# CONFIG_INPUT_MOUSEDEV_PSAUX is not set
+CONFIG_INPUT_MOUSEDEV_SCREEN_X=1024
+CONFIG_INPUT_MOUSEDEV_SCREEN_Y=768
+# CONFIG_INPUT_JOYDEV is not set
+CONFIG_INPUT_EVDEV=y
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+# CONFIG_KEYBOARD_ADP5588 is not set
+# CONFIG_KEYBOARD_ADP5589 is not set
+CONFIG_KEYBOARD_ATKBD=y
+# CONFIG_KEYBOARD_QT1070 is not set
+# CONFIG_KEYBOARD_QT2160 is not set
+# CONFIG_KEYBOARD_LKKBD is not set
+# CONFIG_KEYBOARD_TCA6416 is not set
+# CONFIG_KEYBOARD_TCA8418 is not set
+# CONFIG_KEYBOARD_LM8323 is not set
+# CONFIG_KEYBOARD_LM8333 is not set
+# CONFIG_KEYBOARD_MAX7359 is not set
+# CONFIG_KEYBOARD_MCS is not set
+# CONFIG_KEYBOARD_MPR121 is not set
+# CONFIG_KEYBOARD_NEWTON is not set
+# CONFIG_KEYBOARD_OPENCORES is not set
+# CONFIG_KEYBOARD_STOWAWAY is not set
+# CONFIG_KEYBOARD_SUNKBD is not set
+# CONFIG_KEYBOARD_XTKBD is not set
+CONFIG_INPUT_MOUSE=y
+CONFIG_MOUSE_PS2=y
+CONFIG_MOUSE_PS2_ALPS=y
+CONFIG_MOUSE_PS2_LOGIPS2PP=y
+CONFIG_MOUSE_PS2_SYNAPTICS=y
+CONFIG_MOUSE_PS2_CYPRESS=y
+CONFIG_MOUSE_PS2_LIFEBOOK=y
+CONFIG_MOUSE_PS2_TRACKPOINT=y
+# CONFIG_MOUSE_PS2_ELANTECH is not set
+# CONFIG_MOUSE_PS2_SENTELIC is not set
+# CONFIG_MOUSE_PS2_TOUCHKIT is not set
+# CONFIG_MOUSE_SERIAL is not set
+# CONFIG_MOUSE_APPLETOUCH is not set
+# CONFIG_MOUSE_BCM5974 is not set
+# CONFIG_MOUSE_CYAPA is not set
+# CONFIG_MOUSE_VSXXXAA is not set
+# CONFIG_MOUSE_SYNAPTICS_I2C is not set
+# CONFIG_MOUSE_SYNAPTICS_USB is not set
+CONFIG_INPUT_JOYSTICK=y
+# CONFIG_JOYSTICK_ANALOG is not set
+# CONFIG_JOYSTICK_A3D is not set
+# CONFIG_JOYSTICK_ADI is not set
+# CONFIG_JOYSTICK_COBRA is not set
+# CONFIG_JOYSTICK_GF2K is not set
+# CONFIG_JOYSTICK_GRIP is not set
+# CONFIG_JOYSTICK_GRIP_MP is not set
+# CONFIG_JOYSTICK_GUILLEMOT is not set
+# CONFIG_JOYSTICK_INTERACT is not set
+# CONFIG_JOYSTICK_SIDEWINDER is not set
+# CONFIG_JOYSTICK_TMDC is not set
+# CONFIG_JOYSTICK_IFORCE is not set
+# CONFIG_JOYSTICK_WARRIOR is not set
+# CONFIG_JOYSTICK_MAGELLAN is not set
+# CONFIG_JOYSTICK_SPACEORB is not set
+# CONFIG_JOYSTICK_SPACEBALL is not set
+# CONFIG_JOYSTICK_STINGER is not set
+# CONFIG_JOYSTICK_TWIDJOY is not set
+# CONFIG_JOYSTICK_ZHENHUA is not set
+# CONFIG_JOYSTICK_AS5011 is not set
+# CONFIG_JOYSTICK_JOYDUMP is not set
+# CONFIG_JOYSTICK_XPAD is not set
+CONFIG_INPUT_TABLET=y
+# CONFIG_TABLET_USB_ACECAD is not set
+# CONFIG_TABLET_USB_AIPTEK is not set
+# CONFIG_TABLET_USB_GTCO is not set
+# CONFIG_TABLET_USB_HANWANG is not set
+# CONFIG_TABLET_USB_KBTAB is not set
+# CONFIG_TABLET_SERIAL_WACOM4 is not set
+CONFIG_INPUT_TOUCHSCREEN=y
+# CONFIG_TOUCHSCREEN_AD7879 is not set
+# CONFIG_TOUCHSCREEN_ATMEL_MXT is not set
+# CONFIG_TOUCHSCREEN_BU21013 is not set
+# CONFIG_TOUCHSCREEN_CYTTSP_CORE is not set
+# CONFIG_TOUCHSCREEN_CYTTSP4_CORE is not set
+# CONFIG_TOUCHSCREEN_DYNAPRO is not set
+# CONFIG_TOUCHSCREEN_HAMPSHIRE is not set
+# CONFIG_TOUCHSCREEN_EETI is not set
+# CONFIG_TOUCHSCREEN_FUJITSU is not set
+# CONFIG_TOUCHSCREEN_ILI210X is not set
+# CONFIG_TOUCHSCREEN_GUNZE is not set
+# CONFIG_TOUCHSCREEN_ELO is not set
+# CONFIG_TOUCHSCREEN_WACOM_W8001 is not set
+# CONFIG_TOUCHSCREEN_WACOM_I2C is not set
+# CONFIG_TOUCHSCREEN_MAX11801 is not set
+# CONFIG_TOUCHSCREEN_MCS5000 is not set
+# CONFIG_TOUCHSCREEN_MMS114 is not set
+# CONFIG_TOUCHSCREEN_MTOUCH is not set
+# CONFIG_TOUCHSCREEN_INEXIO is not set
+# CONFIG_TOUCHSCREEN_MK712 is not set
+# CONFIG_TOUCHSCREEN_PENMOUNT is not set
+# CONFIG_TOUCHSCREEN_EDT_FT5X06 is not set
+# CONFIG_TOUCHSCREEN_TOUCHRIGHT is not set
+# CONFIG_TOUCHSCREEN_TOUCHWIN is not set
+# CONFIG_TOUCHSCREEN_PIXCIR is not set
+# CONFIG_TOUCHSCREEN_USB_COMPOSITE is not set
+# CONFIG_TOUCHSCREEN_TOUCHIT213 is not set
+# CONFIG_TOUCHSCREEN_TSC_SERIO is not set
+# CONFIG_TOUCHSCREEN_TSC2007 is not set
+# CONFIG_TOUCHSCREEN_ST1232 is not set
+# CONFIG_TOUCHSCREEN_SUR40 is not set
+# CONFIG_TOUCHSCREEN_TPS6507X is not set
+CONFIG_INPUT_MISC=y
+# CONFIG_INPUT_AD714X is not set
+# CONFIG_INPUT_BMA150 is not set
+# CONFIG_INPUT_PCSPKR is not set
+# CONFIG_INPUT_MMA8450 is not set
+# CONFIG_INPUT_MPU3050 is not set
+# CONFIG_INPUT_APANEL is not set
+# CONFIG_INPUT_ATLAS_BTNS is not set
+# CONFIG_INPUT_ATI_REMOTE2 is not set
+# CONFIG_INPUT_KEYSPAN_REMOTE is not set
+# CONFIG_INPUT_KXTJ9 is not set
+# CONFIG_INPUT_POWERMATE is not set
+# CONFIG_INPUT_YEALINK is not set
+# CONFIG_INPUT_CM109 is not set
+# CONFIG_INPUT_UINPUT is not set
+# CONFIG_INPUT_PCF8574 is not set
+# CONFIG_INPUT_ADXL34X is not set
+# CONFIG_INPUT_IMS_PCU is not set
+# CONFIG_INPUT_CMA3000 is not set
+# CONFIG_INPUT_IDEAPAD_SLIDEBAR is not set
+
+#
+# Hardware I/O ports
+#
+CONFIG_SERIO=y
+CONFIG_ARCH_MIGHT_HAVE_PC_SERIO=y
+CONFIG_SERIO_I8042=y
+CONFIG_SERIO_SERPORT=y
+# CONFIG_SERIO_CT82C710 is not set
+# CONFIG_SERIO_PCIPS2 is not set
+CONFIG_SERIO_LIBPS2=y
+# CONFIG_SERIO_RAW is not set
+# CONFIG_SERIO_ALTERA_PS2 is not set
+# CONFIG_SERIO_PS2MULT is not set
+# CONFIG_SERIO_ARC_PS2 is not set
+# CONFIG_GAMEPORT is not set
+
+#
+# Character devices
+#
+CONFIG_TTY=y
+CONFIG_VT=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_VT_CONSOLE=y
+CONFIG_VT_CONSOLE_SLEEP=y
+CONFIG_HW_CONSOLE=y
+CONFIG_VT_HW_CONSOLE_BINDING=y
+CONFIG_UNIX98_PTYS=y
+# CONFIG_DEVPTS_MULTIPLE_INSTANCES is not set
+# CONFIG_LEGACY_PTYS is not set
+CONFIG_SERIAL_NONSTANDARD=y
+# CONFIG_ROCKETPORT is not set
+# CONFIG_CYCLADES is not set
+# CONFIG_MOXA_INTELLIO is not set
+# CONFIG_MOXA_SMARTIO is not set
+# CONFIG_SYNCLINK is not set
+# CONFIG_SYNCLINKMP is not set
+# CONFIG_SYNCLINK_GT is not set
+# CONFIG_NOZOMI is not set
+# CONFIG_ISI is not set
+# CONFIG_N_HDLC is not set
+# CONFIG_N_GSM is not set
+# CONFIG_TRACE_SINK is not set
+CONFIG_DEVKMEM=y
+
+#
+# Serial drivers
+#
+CONFIG_SERIAL_EARLYCON=y
+CONFIG_SERIAL_8250=y
+CONFIG_SERIAL_8250_DEPRECATED_OPTIONS=y
+CONFIG_SERIAL_8250_PNP=y
+CONFIG_SERIAL_8250_CONSOLE=y
+CONFIG_SERIAL_8250_DMA=y
+CONFIG_SERIAL_8250_PCI=y
+# CONFIG_SERIAL_8250_CS is not set
+CONFIG_SERIAL_8250_NR_UARTS=32
+CONFIG_SERIAL_8250_RUNTIME_UARTS=4
+CONFIG_SERIAL_8250_EXTENDED=y
+CONFIG_SERIAL_8250_MANY_PORTS=y
+CONFIG_SERIAL_8250_SHARE_IRQ=y
+CONFIG_SERIAL_8250_DETECT_IRQ=y
+CONFIG_SERIAL_8250_RSA=y
+# CONFIG_SERIAL_8250_DW is not set
+
+#
+# Non-8250 serial port support
+#
+# CONFIG_SERIAL_MFD_HSU is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+# CONFIG_SERIAL_JSM is not set
+# CONFIG_SERIAL_SCCNXP is not set
+# CONFIG_SERIAL_SC16IS7XX is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+# CONFIG_SERIAL_ARC is not set
+# CONFIG_SERIAL_RP2 is not set
+# CONFIG_SERIAL_FSL_LPUART is not set
+# CONFIG_IPMI_HANDLER is not set
+CONFIG_HW_RANDOM=y
+# CONFIG_HW_RANDOM_TIMERIOMEM is not set
+# CONFIG_HW_RANDOM_INTEL is not set
+# CONFIG_HW_RANDOM_AMD is not set
+CONFIG_HW_RANDOM_VIA=y
+CONFIG_NVRAM=y
+# CONFIG_R3964 is not set
+# CONFIG_APPLICOM is not set
+
+#
+# PCMCIA character devices
+#
+# CONFIG_SYNCLINK_CS is not set
+# CONFIG_CARDMAN_4000 is not set
+# CONFIG_CARDMAN_4040 is not set
+# CONFIG_IPWIRELESS is not set
+# CONFIG_MWAVE is not set
+# CONFIG_RAW_DRIVER is not set
+CONFIG_HPET=y
+# CONFIG_HPET_MMAP is not set
+# CONFIG_HANGCHECK_TIMER is not set
+# CONFIG_TCG_TPM is not set
+# CONFIG_TELCLOCK is not set
+CONFIG_DEVPORT=y
+
+#
+# I2C support
+#
+CONFIG_I2C=y
+CONFIG_ACPI_I2C_OPREGION=y
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_COMPAT=y
+# CONFIG_I2C_CHARDEV is not set
+# CONFIG_I2C_MUX is not set
+CONFIG_I2C_HELPER_AUTO=y
+CONFIG_I2C_ALGOBIT=y
+
+#
+# I2C Hardware Bus support
+#
+
+#
+# PC SMBus host controller drivers
+#
+# CONFIG_I2C_ALI1535 is not set
+# CONFIG_I2C_ALI1563 is not set
+# CONFIG_I2C_ALI15X3 is not set
+# CONFIG_I2C_AMD756 is not set
+# CONFIG_I2C_AMD8111 is not set
+CONFIG_I2C_I801=y
+# CONFIG_I2C_ISCH is not set
+# CONFIG_I2C_ISMT is not set
+# CONFIG_I2C_PIIX4 is not set
+# CONFIG_I2C_NFORCE2 is not set
+# CONFIG_I2C_SIS5595 is not set
+# CONFIG_I2C_SIS630 is not set
+# CONFIG_I2C_SIS96X is not set
+# CONFIG_I2C_VIA is not set
+# CONFIG_I2C_VIAPRO is not set
+
+#
+# ACPI drivers
+#
+# CONFIG_I2C_SCMI is not set
+
+#
+# I2C system bus drivers (mostly embedded / system-on-chip)
+#
+# CONFIG_I2C_DESIGNWARE_PLATFORM is not set
+# CONFIG_I2C_DESIGNWARE_PCI is not set
+# CONFIG_I2C_OCORES is not set
+# CONFIG_I2C_PCA_PLATFORM is not set
+# CONFIG_I2C_PXA_PCI is not set
+# CONFIG_I2C_SIMTEC is not set
+# CONFIG_I2C_XILINX is not set
+
+#
+# External I2C/SMBus adapter drivers
+#
+# CONFIG_I2C_DIOLAN_U2C is not set
+# CONFIG_I2C_PARPORT_LIGHT is not set
+# CONFIG_I2C_ROBOTFUZZ_OSIF is not set
+# CONFIG_I2C_TAOS_EVM is not set
+# CONFIG_I2C_TINY_USB is not set
+
+#
+# Other I2C/SMBus bus drivers
+#
+# CONFIG_I2C_STUB is not set
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+# CONFIG_SPI is not set
+# CONFIG_SPMI is not set
+# CONFIG_HSI is not set
+
+#
+# PPS support
+#
+CONFIG_PPS=y
+# CONFIG_PPS_DEBUG is not set
+
+#
+# PPS clients support
+#
+# CONFIG_PPS_CLIENT_KTIMER is not set
+# CONFIG_PPS_CLIENT_LDISC is not set
+# CONFIG_PPS_CLIENT_GPIO is not set
+
+#
+# PPS generators support
+#
+
+#
+# PTP clock support
+#
+CONFIG_PTP_1588_CLOCK=y
+
+#
+# Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
+#
+CONFIG_ARCH_WANT_OPTIONAL_GPIOLIB=y
+# CONFIG_GPIOLIB is not set
+# CONFIG_W1 is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+# CONFIG_PDA_POWER is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_BATTERY_DS2780 is not set
+# CONFIG_BATTERY_DS2781 is not set
+# CONFIG_BATTERY_DS2782 is not set
+# CONFIG_BATTERY_SBS is not set
+# CONFIG_BATTERY_BQ27x00 is not set
+# CONFIG_BATTERY_MAX17040 is not set
+# CONFIG_BATTERY_MAX17042 is not set
+# CONFIG_CHARGER_MAX8903 is not set
+# CONFIG_CHARGER_LP8727 is not set
+# CONFIG_CHARGER_BQ2415X is not set
+# CONFIG_CHARGER_SMB347 is not set
+# CONFIG_POWER_RESET is not set
+# CONFIG_POWER_AVS is not set
+CONFIG_HWMON=y
+# CONFIG_HWMON_VID is not set
+# CONFIG_HWMON_DEBUG_CHIP is not set
+
+#
+# Native drivers
+#
+# CONFIG_SENSORS_ABITUGURU is not set
+# CONFIG_SENSORS_ABITUGURU3 is not set
+# CONFIG_SENSORS_AD7414 is not set
+# CONFIG_SENSORS_AD7418 is not set
+# CONFIG_SENSORS_ADM1021 is not set
+# CONFIG_SENSORS_ADM1025 is not set
+# CONFIG_SENSORS_ADM1026 is not set
+# CONFIG_SENSORS_ADM1029 is not set
+# CONFIG_SENSORS_ADM1031 is not set
+# CONFIG_SENSORS_ADM9240 is not set
+# CONFIG_SENSORS_ADT7410 is not set
+# CONFIG_SENSORS_ADT7411 is not set
+# CONFIG_SENSORS_ADT7462 is not set
+# CONFIG_SENSORS_ADT7470 is not set
+# CONFIG_SENSORS_ADT7475 is not set
+# CONFIG_SENSORS_ASC7621 is not set
+# CONFIG_SENSORS_K8TEMP is not set
+# CONFIG_SENSORS_K10TEMP is not set
+# CONFIG_SENSORS_FAM15H_POWER is not set
+# CONFIG_SENSORS_APPLESMC is not set
+# CONFIG_SENSORS_ASB100 is not set
+# CONFIG_SENSORS_ATXP1 is not set
+# CONFIG_SENSORS_DS620 is not set
+# CONFIG_SENSORS_DS1621 is not set
+# CONFIG_SENSORS_I5K_AMB is not set
+# CONFIG_SENSORS_F71805F is not set
+# CONFIG_SENSORS_F71882FG is not set
+# CONFIG_SENSORS_F75375S is not set
+# CONFIG_SENSORS_FSCHMD is not set
+# CONFIG_SENSORS_GL518SM is not set
+# CONFIG_SENSORS_GL520SM is not set
+# CONFIG_SENSORS_G760A is not set
+# CONFIG_SENSORS_G762 is not set
+# CONFIG_SENSORS_HIH6130 is not set
+# CONFIG_SENSORS_CORETEMP is not set
+# CONFIG_SENSORS_IT87 is not set
+# CONFIG_SENSORS_JC42 is not set
+# CONFIG_SENSORS_POWR1220 is not set
+# CONFIG_SENSORS_LINEAGE is not set
+# CONFIG_SENSORS_LTC2945 is not set
+# CONFIG_SENSORS_LTC4151 is not set
+# CONFIG_SENSORS_LTC4215 is not set
+# CONFIG_SENSORS_LTC4222 is not set
+# CONFIG_SENSORS_LTC4245 is not set
+# CONFIG_SENSORS_LTC4260 is not set
+# CONFIG_SENSORS_LTC4261 is not set
+# CONFIG_SENSORS_MAX16065 is not set
+# CONFIG_SENSORS_MAX1619 is not set
+# CONFIG_SENSORS_MAX1668 is not set
+# CONFIG_SENSORS_MAX197 is not set
+# CONFIG_SENSORS_MAX6639 is not set
+# CONFIG_SENSORS_MAX6642 is not set
+# CONFIG_SENSORS_MAX6650 is not set
+# CONFIG_SENSORS_MAX6697 is not set
+# CONFIG_SENSORS_HTU21 is not set
+# CONFIG_SENSORS_MCP3021 is not set
+# CONFIG_SENSORS_LM63 is not set
+# CONFIG_SENSORS_LM73 is not set
+# CONFIG_SENSORS_LM75 is not set
+# CONFIG_SENSORS_LM77 is not set
+# CONFIG_SENSORS_LM78 is not set
+# CONFIG_SENSORS_LM80 is not set
+# CONFIG_SENSORS_LM83 is not set
+# CONFIG_SENSORS_LM85 is not set
+# CONFIG_SENSORS_LM87 is not set
+# CONFIG_SENSORS_LM90 is not set
+# CONFIG_SENSORS_LM92 is not set
+# CONFIG_SENSORS_LM93 is not set
+# CONFIG_SENSORS_LM95234 is not set
+# CONFIG_SENSORS_LM95241 is not set
+# CONFIG_SENSORS_LM95245 is not set
+# CONFIG_SENSORS_PC87360 is not set
+# CONFIG_SENSORS_PC87427 is not set
+# CONFIG_SENSORS_NTC_THERMISTOR is not set
+# CONFIG_SENSORS_NCT6683 is not set
+# CONFIG_SENSORS_NCT6775 is not set
+# CONFIG_SENSORS_PCF8591 is not set
+# CONFIG_PMBUS is not set
+# CONFIG_SENSORS_SHT21 is not set
+# CONFIG_SENSORS_SHTC1 is not set
+# CONFIG_SENSORS_SIS5595 is not set
+# CONFIG_SENSORS_DME1737 is not set
+# CONFIG_SENSORS_EMC1403 is not set
+# CONFIG_SENSORS_EMC2103 is not set
+# CONFIG_SENSORS_EMC6W201 is not set
+# CONFIG_SENSORS_SMSC47M1 is not set
+# CONFIG_SENSORS_SMSC47M192 is not set
+# CONFIG_SENSORS_SMSC47B397 is not set
+# CONFIG_SENSORS_SCH56XX_COMMON is not set
+# CONFIG_SENSORS_SCH5627 is not set
+# CONFIG_SENSORS_SCH5636 is not set
+# CONFIG_SENSORS_SMM665 is not set
+# CONFIG_SENSORS_ADC128D818 is not set
+# CONFIG_SENSORS_ADS1015 is not set
+# CONFIG_SENSORS_ADS7828 is not set
+# CONFIG_SENSORS_AMC6821 is not set
+# CONFIG_SENSORS_INA209 is not set
+# CONFIG_SENSORS_INA2XX is not set
+# CONFIG_SENSORS_THMC50 is not set
+# CONFIG_SENSORS_TMP102 is not set
+# CONFIG_SENSORS_TMP103 is not set
+# CONFIG_SENSORS_TMP401 is not set
+# CONFIG_SENSORS_TMP421 is not set
+# CONFIG_SENSORS_VIA_CPUTEMP is not set
+# CONFIG_SENSORS_VIA686A is not set
+# CONFIG_SENSORS_VT1211 is not set
+# CONFIG_SENSORS_VT8231 is not set
+# CONFIG_SENSORS_W83781D is not set
+# CONFIG_SENSORS_W83791D is not set
+# CONFIG_SENSORS_W83792D is not set
+# CONFIG_SENSORS_W83793 is not set
+# CONFIG_SENSORS_W83795 is not set
+# CONFIG_SENSORS_W83L785TS is not set
+# CONFIG_SENSORS_W83L786NG is not set
+# CONFIG_SENSORS_W83627HF is not set
+# CONFIG_SENSORS_W83627EHF is not set
+
+#
+# ACPI drivers
+#
+# CONFIG_SENSORS_ACPI_POWER is not set
+# CONFIG_SENSORS_ATK0110 is not set
+CONFIG_THERMAL=y
+CONFIG_THERMAL_HWMON=y
+CONFIG_THERMAL_DEFAULT_GOV_STEP_WISE=y
+# CONFIG_THERMAL_DEFAULT_GOV_FAIR_SHARE is not set
+# CONFIG_THERMAL_DEFAULT_GOV_USER_SPACE is not set
+# CONFIG_THERMAL_GOV_FAIR_SHARE is not set
+CONFIG_THERMAL_GOV_STEP_WISE=y
+CONFIG_THERMAL_GOV_USER_SPACE=y
+# CONFIG_THERMAL_EMULATION is not set
+# CONFIG_INTEL_POWERCLAMP is not set
+CONFIG_X86_PKG_TEMP_THERMAL=m
+# CONFIG_ACPI_INT3403_THERMAL is not set
+# CONFIG_INTEL_SOC_DTS_THERMAL is not set
+
+#
+# Texas Instruments thermal drivers
+#
+CONFIG_WATCHDOG=y
+# CONFIG_WATCHDOG_CORE is not set
+# CONFIG_WATCHDOG_NOWAYOUT is not set
+
+#
+# Watchdog Device Drivers
+#
+# CONFIG_SOFT_WATCHDOG is not set
+# CONFIG_XILINX_WATCHDOG is not set
+# CONFIG_DW_WATCHDOG is not set
+# CONFIG_ACQUIRE_WDT is not set
+# CONFIG_ADVANTECH_WDT is not set
+# CONFIG_ALIM1535_WDT is not set
+# CONFIG_ALIM7101_WDT is not set
+# CONFIG_F71808E_WDT is not set
+# CONFIG_SP5100_TCO is not set
+# CONFIG_SBC_FITPC2_WATCHDOG is not set
+# CONFIG_EUROTECH_WDT is not set
+# CONFIG_IB700_WDT is not set
+# CONFIG_IBMASR is not set
+# CONFIG_WAFER_WDT is not set
+# CONFIG_I6300ESB_WDT is not set
+# CONFIG_IE6XX_WDT is not set
+# CONFIG_ITCO_WDT is not set
+# CONFIG_IT8712F_WDT is not set
+# CONFIG_IT87_WDT is not set
+# CONFIG_HP_WATCHDOG is not set
+# CONFIG_SC1200_WDT is not set
+# CONFIG_PC87413_WDT is not set
+# CONFIG_NV_TCO is not set
+# CONFIG_60XX_WDT is not set
+# CONFIG_CPU5_WDT is not set
+# CONFIG_SMSC_SCH311X_WDT is not set
+# CONFIG_SMSC37B787_WDT is not set
+# CONFIG_VIA_WDT is not set
+# CONFIG_W83627HF_WDT is not set
+# CONFIG_W83877F_WDT is not set
+# CONFIG_W83977F_WDT is not set
+# CONFIG_MACHZ_WDT is not set
+# CONFIG_SBC_EPX_C3_WATCHDOG is not set
+
+#
+# PCI-based Watchdog Cards
+#
+# CONFIG_PCIPCWATCHDOG is not set
+# CONFIG_WDTPCI is not set
+
+#
+# USB-based Watchdog Cards
+#
+# CONFIG_USBPCWATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+
+#
+# Sonics Silicon Backplane
+#
+# CONFIG_SSB is not set
+CONFIG_BCMA_POSSIBLE=y
+
+#
+# Broadcom specific AMBA
+#
+# CONFIG_BCMA is not set
+
+#
+# Multifunction device drivers
+#
+# CONFIG_MFD_CORE is not set
+# CONFIG_MFD_AS3711 is not set
+# CONFIG_PMIC_ADP5520 is not set
+# CONFIG_MFD_BCM590XX is not set
+# CONFIG_MFD_AXP20X is not set
+# CONFIG_MFD_CROS_EC is not set
+# CONFIG_PMIC_DA903X is not set
+# CONFIG_MFD_DA9052_I2C is not set
+# CONFIG_MFD_DA9055 is not set
+# CONFIG_MFD_DA9063 is not set
+# CONFIG_MFD_MC13XXX_I2C is not set
+# CONFIG_HTC_PASIC3 is not set
+# CONFIG_LPC_ICH is not set
+# CONFIG_LPC_SCH is not set
+# CONFIG_INTEL_SOC_PMIC is not set
+# CONFIG_MFD_JANZ_CMODIO is not set
+# CONFIG_MFD_KEMPLD is not set
+# CONFIG_MFD_88PM800 is not set
+# CONFIG_MFD_88PM805 is not set
+# CONFIG_MFD_88PM860X is not set
+# CONFIG_MFD_MAX14577 is not set
+# CONFIG_MFD_MAX77686 is not set
+# CONFIG_MFD_MAX77693 is not set
+# CONFIG_MFD_MAX8907 is not set
+# CONFIG_MFD_MAX8925 is not set
+# CONFIG_MFD_MAX8997 is not set
+# CONFIG_MFD_MAX8998 is not set
+# CONFIG_MFD_VIPERBOARD is not set
+# CONFIG_MFD_RETU is not set
+# CONFIG_MFD_PCF50633 is not set
+# CONFIG_MFD_RDC321X is not set
+# CONFIG_MFD_RTSX_PCI is not set
+# CONFIG_MFD_RTSX_USB is not set
+# CONFIG_MFD_RC5T583 is not set
+# CONFIG_MFD_SEC_CORE is not set
+# CONFIG_MFD_SI476X_CORE is not set
+# CONFIG_MFD_SM501 is not set
+# CONFIG_MFD_SMSC is not set
+# CONFIG_ABX500_CORE is not set
+# CONFIG_MFD_SYSCON is not set
+# CONFIG_MFD_TI_AM335X_TSCADC is not set
+# CONFIG_MFD_LP3943 is not set
+# CONFIG_MFD_LP8788 is not set
+# CONFIG_MFD_PALMAS is not set
+# CONFIG_TPS6105X is not set
+# CONFIG_TPS6507X is not set
+# CONFIG_MFD_TPS65090 is not set
+# CONFIG_MFD_TPS65217 is not set
+# CONFIG_MFD_TPS65218 is not set
+# CONFIG_MFD_TPS6586X is not set
+# CONFIG_MFD_TPS80031 is not set
+# CONFIG_TWL4030_CORE is not set
+# CONFIG_TWL6040_CORE is not set
+# CONFIG_MFD_WL1273_CORE is not set
+# CONFIG_MFD_LM3533 is not set
+# CONFIG_MFD_TC3589X is not set
+# CONFIG_MFD_TMIO is not set
+# CONFIG_MFD_VX855 is not set
+# CONFIG_MFD_ARIZONA_I2C is not set
+# CONFIG_MFD_WM8400 is not set
+# CONFIG_MFD_WM831X_I2C is not set
+# CONFIG_MFD_WM8350_I2C is not set
+# CONFIG_MFD_WM8994 is not set
+# CONFIG_REGULATOR is not set
+# CONFIG_MEDIA_SUPPORT is not set
+
+#
+# Graphics support
+#
+CONFIG_AGP=y
+CONFIG_AGP_AMD64=y
+CONFIG_AGP_INTEL=y
+# CONFIG_AGP_SIS is not set
+# CONFIG_AGP_VIA is not set
+CONFIG_INTEL_GTT=y
+CONFIG_VGA_ARB=y
+CONFIG_VGA_ARB_MAX_GPUS=16
+# CONFIG_VGA_SWITCHEROO is not set
+
+#
+# Direct Rendering Manager
+#
+CONFIG_DRM=y
+CONFIG_DRM_KMS_HELPER=y
+CONFIG_DRM_KMS_FB_HELPER=y
+# CONFIG_DRM_LOAD_EDID_FIRMWARE is not set
+CONFIG_DRM_TTM=y
+
+#
+# I2C encoder or helper chips
+#
+# CONFIG_DRM_I2C_CH7006 is not set
+# CONFIG_DRM_I2C_SIL164 is not set
+# CONFIG_DRM_I2C_NXP_TDA998X is not set
+# CONFIG_DRM_PTN3460 is not set
+# CONFIG_DRM_TDFX is not set
+# CONFIG_DRM_R128 is not set
+# CONFIG_DRM_RADEON is not set
+# CONFIG_DRM_NOUVEAU is not set
+# CONFIG_DRM_I810 is not set
+# CONFIG_DRM_I915 is not set
+# CONFIG_DRM_MGA is not set
+# CONFIG_DRM_SIS is not set
+# CONFIG_DRM_VIA is not set
+# CONFIG_DRM_SAVAGE is not set
+# CONFIG_DRM_VMWGFX is not set
+# CONFIG_DRM_GMA500 is not set
+# CONFIG_DRM_UDL is not set
+# CONFIG_DRM_AST is not set
+# CONFIG_DRM_MGAG200 is not set
+CONFIG_DRM_CIRRUS_QEMU=y
+# CONFIG_DRM_QXL is not set
+# CONFIG_DRM_BOCHS is not set
+
+#
+# Frame buffer Devices
+#
+CONFIG_FB=y
+# CONFIG_FIRMWARE_EDID is not set
+# CONFIG_FB_DDC is not set
+# CONFIG_FB_BOOT_VESA_SUPPORT is not set
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+# CONFIG_FB_CFB_REV_PIXELS_IN_BYTE is not set
+CONFIG_FB_SYS_FILLRECT=y
+CONFIG_FB_SYS_COPYAREA=y
+CONFIG_FB_SYS_IMAGEBLIT=y
+# CONFIG_FB_FOREIGN_ENDIAN is not set
+# CONFIG_FB_SYS_FOPS is not set
+# CONFIG_FB_SVGALIB is not set
+# CONFIG_FB_MACMODES is not set
+# CONFIG_FB_BACKLIGHT is not set
+CONFIG_FB_MODE_HELPERS=y
+CONFIG_FB_TILEBLITTING=y
+
+#
+# Frame buffer hardware drivers
+#
+# CONFIG_FB_CIRRUS is not set
+# CONFIG_FB_PM2 is not set
+# CONFIG_FB_CYBER2000 is not set
+# CONFIG_FB_ARC is not set
+# CONFIG_FB_ASILIANT is not set
+# CONFIG_FB_IMSTT is not set
+# CONFIG_FB_VGA16 is not set
+# CONFIG_FB_UVESA is not set
+# CONFIG_FB_VESA is not set
+CONFIG_FB_EFI=y
+# CONFIG_FB_N411 is not set
+# CONFIG_FB_HGA is not set
+# CONFIG_FB_OPENCORES is not set
+# CONFIG_FB_S1D13XXX is not set
+# CONFIG_FB_NVIDIA is not set
+# CONFIG_FB_RIVA is not set
+# CONFIG_FB_I740 is not set
+# CONFIG_FB_LE80578 is not set
+# CONFIG_FB_MATROX is not set
+# CONFIG_FB_RADEON is not set
+# CONFIG_FB_ATY128 is not set
+# CONFIG_FB_ATY is not set
+# CONFIG_FB_S3 is not set
+# CONFIG_FB_SAVAGE is not set
+# CONFIG_FB_SIS is not set
+# CONFIG_FB_VIA is not set
+# CONFIG_FB_NEOMAGIC is not set
+# CONFIG_FB_KYRO is not set
+# CONFIG_FB_3DFX is not set
+# CONFIG_FB_VOODOO1 is not set
+# CONFIG_FB_VT8623 is not set
+# CONFIG_FB_TRIDENT is not set
+# CONFIG_FB_ARK is not set
+# CONFIG_FB_PM3 is not set
+# CONFIG_FB_CARMINE is not set
+# CONFIG_FB_SMSCUFX is not set
+# CONFIG_FB_UDL is not set
+# CONFIG_FB_VIRTUAL is not set
+# CONFIG_FB_METRONOME is not set
+# CONFIG_FB_MB862XX is not set
+# CONFIG_FB_BROADSHEET is not set
+# CONFIG_FB_AUO_K190X is not set
+# CONFIG_FB_SIMPLE is not set
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+# CONFIG_LCD_CLASS_DEVICE is not set
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+CONFIG_BACKLIGHT_GENERIC=y
+# CONFIG_BACKLIGHT_APPLE is not set
+# CONFIG_BACKLIGHT_SAHARA is not set
+# CONFIG_BACKLIGHT_ADP8860 is not set
+# CONFIG_BACKLIGHT_ADP8870 is not set
+# CONFIG_BACKLIGHT_LM3639 is not set
+# CONFIG_BACKLIGHT_LV5207LP is not set
+# CONFIG_BACKLIGHT_BD6107 is not set
+# CONFIG_VGASTATE is not set
+CONFIG_HDMI=y
+
+#
+# Console display driver support
+#
+CONFIG_VGA_CONSOLE=y
+CONFIG_VGACON_SOFT_SCROLLBACK=y
+CONFIG_VGACON_SOFT_SCROLLBACK_SIZE=64
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_FRAMEBUFFER_CONSOLE=y
+CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY=y
+# CONFIG_FRAMEBUFFER_CONSOLE_ROTATION is not set
+CONFIG_LOGO=y
+# CONFIG_LOGO_LINUX_MONO is not set
+# CONFIG_LOGO_LINUX_VGA16 is not set
+CONFIG_LOGO_LINUX_CLUT224=y
+CONFIG_SOUND=y
+CONFIG_SOUND_OSS_CORE=y
+CONFIG_SOUND_OSS_CORE_PRECLAIM=y
+CONFIG_SND=y
+CONFIG_SND_TIMER=y
+CONFIG_SND_PCM=y
+CONFIG_SND_HWDEP=y
+CONFIG_SND_SEQUENCER=y
+CONFIG_SND_SEQ_DUMMY=y
+CONFIG_SND_OSSEMUL=y
+CONFIG_SND_MIXER_OSS=y
+CONFIG_SND_PCM_OSS=y
+CONFIG_SND_PCM_OSS_PLUGINS=y
+CONFIG_SND_SEQUENCER_OSS=y
+CONFIG_SND_HRTIMER=y
+CONFIG_SND_SEQ_HRTIMER_DEFAULT=y
+# CONFIG_SND_DYNAMIC_MINORS is not set
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_SND_VERBOSE_PROCFS=y
+# CONFIG_SND_VERBOSE_PRINTK is not set
+# CONFIG_SND_DEBUG is not set
+CONFIG_SND_VMASTER=y
+CONFIG_SND_KCTL_JACK=y
+CONFIG_SND_DMA_SGBUF=y
+# CONFIG_SND_RAWMIDI_SEQ is not set
+# CONFIG_SND_OPL3_LIB_SEQ is not set
+# CONFIG_SND_OPL4_LIB_SEQ is not set
+# CONFIG_SND_SBAWE_SEQ is not set
+# CONFIG_SND_EMU10K1_SEQ is not set
+CONFIG_SND_DRIVERS=y
+# CONFIG_SND_PCSP is not set
+# CONFIG_SND_DUMMY is not set
+# CONFIG_SND_ALOOP is not set
+# CONFIG_SND_VIRMIDI is not set
+# CONFIG_SND_MTPAV is not set
+# CONFIG_SND_SERIAL_U16550 is not set
+# CONFIG_SND_MPU401 is not set
+CONFIG_SND_PCI=y
+# CONFIG_SND_AD1889 is not set
+# CONFIG_SND_ALS300 is not set
+# CONFIG_SND_ALS4000 is not set
+# CONFIG_SND_ALI5451 is not set
+# CONFIG_SND_ASIHPI is not set
+# CONFIG_SND_ATIIXP is not set
+# CONFIG_SND_ATIIXP_MODEM is not set
+# CONFIG_SND_AU8810 is not set
+# CONFIG_SND_AU8820 is not set
+# CONFIG_SND_AU8830 is not set
+# CONFIG_SND_AW2 is not set
+# CONFIG_SND_AZT3328 is not set
+# CONFIG_SND_BT87X is not set
+# CONFIG_SND_CA0106 is not set
+# CONFIG_SND_CMIPCI is not set
+# CONFIG_SND_OXYGEN is not set
+# CONFIG_SND_CS4281 is not set
+# CONFIG_SND_CS46XX is not set
+# CONFIG_SND_CTXFI is not set
+# CONFIG_SND_DARLA20 is not set
+# CONFIG_SND_GINA20 is not set
+# CONFIG_SND_LAYLA20 is not set
+# CONFIG_SND_DARLA24 is not set
+# CONFIG_SND_GINA24 is not set
+# CONFIG_SND_LAYLA24 is not set
+# CONFIG_SND_MONA is not set
+# CONFIG_SND_MIA is not set
+# CONFIG_SND_ECHO3G is not set
+# CONFIG_SND_INDIGO is not set
+# CONFIG_SND_INDIGOIO is not set
+# CONFIG_SND_INDIGODJ is not set
+# CONFIG_SND_INDIGOIOX is not set
+# CONFIG_SND_INDIGODJX is not set
+# CONFIG_SND_EMU10K1 is not set
+# CONFIG_SND_EMU10K1X is not set
+# CONFIG_SND_ENS1370 is not set
+# CONFIG_SND_ENS1371 is not set
+# CONFIG_SND_ES1938 is not set
+# CONFIG_SND_ES1968 is not set
+# CONFIG_SND_FM801 is not set
+# CONFIG_SND_HDSP is not set
+# CONFIG_SND_HDSPM is not set
+# CONFIG_SND_ICE1712 is not set
+# CONFIG_SND_ICE1724 is not set
+# CONFIG_SND_INTEL8X0 is not set
+# CONFIG_SND_INTEL8X0M is not set
+# CONFIG_SND_KORG1212 is not set
+# CONFIG_SND_LOLA is not set
+# CONFIG_SND_LX6464ES is not set
+# CONFIG_SND_MAESTRO3 is not set
+# CONFIG_SND_MIXART is not set
+# CONFIG_SND_NM256 is not set
+# CONFIG_SND_PCXHR is not set
+# CONFIG_SND_RIPTIDE is not set
+# CONFIG_SND_RME32 is not set
+# CONFIG_SND_RME96 is not set
+# CONFIG_SND_RME9652 is not set
+# CONFIG_SND_SONICVIBES is not set
+# CONFIG_SND_TRIDENT is not set
+# CONFIG_SND_VIA82XX is not set
+# CONFIG_SND_VIA82XX_MODEM is not set
+# CONFIG_SND_VIRTUOSO is not set
+# CONFIG_SND_VX222 is not set
+# CONFIG_SND_YMFPCI is not set
+
+#
+# HD-Audio
+#
+CONFIG_SND_HDA=y
+CONFIG_SND_HDA_INTEL=y
+CONFIG_SND_HDA_PREALLOC_SIZE=64
+CONFIG_SND_HDA_HWDEP=y
+# CONFIG_SND_HDA_RECONFIG is not set
+# CONFIG_SND_HDA_INPUT_BEEP is not set
+# CONFIG_SND_HDA_INPUT_JACK is not set
+# CONFIG_SND_HDA_PATCH_LOADER is not set
+# CONFIG_SND_HDA_CODEC_REALTEK is not set
+# CONFIG_SND_HDA_CODEC_ANALOG is not set
+# CONFIG_SND_HDA_CODEC_SIGMATEL is not set
+# CONFIG_SND_HDA_CODEC_VIA is not set
+# CONFIG_SND_HDA_CODEC_HDMI is not set
+# CONFIG_SND_HDA_CODEC_CIRRUS is not set
+# CONFIG_SND_HDA_CODEC_CONEXANT is not set
+# CONFIG_SND_HDA_CODEC_CA0110 is not set
+# CONFIG_SND_HDA_CODEC_CA0132 is not set
+# CONFIG_SND_HDA_CODEC_CMEDIA is not set
+# CONFIG_SND_HDA_CODEC_SI3054 is not set
+# CONFIG_SND_HDA_GENERIC is not set
+CONFIG_SND_HDA_POWER_SAVE_DEFAULT=0
+CONFIG_SND_USB=y
+# CONFIG_SND_USB_AUDIO is not set
+# CONFIG_SND_USB_UA101 is not set
+# CONFIG_SND_USB_USX2Y is not set
+# CONFIG_SND_USB_CAIAQ is not set
+# CONFIG_SND_USB_US122L is not set
+# CONFIG_SND_USB_6FIRE is not set
+# CONFIG_SND_USB_HIFACE is not set
+# CONFIG_SND_BCD2000 is not set
+CONFIG_SND_PCMCIA=y
+# CONFIG_SND_VXPOCKET is not set
+# CONFIG_SND_PDAUDIOCF is not set
+# CONFIG_SND_SOC is not set
+# CONFIG_SOUND_PRIME is not set
+
+#
+# HID support
+#
+CONFIG_HID=y
+# CONFIG_HID_BATTERY_STRENGTH is not set
+CONFIG_HIDRAW=y
+# CONFIG_UHID is not set
+CONFIG_HID_GENERIC=y
+
+#
+# Special HID drivers
+#
+CONFIG_HID_A4TECH=y
+# CONFIG_HID_ACRUX is not set
+CONFIG_HID_APPLE=y
+# CONFIG_HID_APPLEIR is not set
+# CONFIG_HID_AUREAL is not set
+CONFIG_HID_BELKIN=y
+CONFIG_HID_CHERRY=y
+CONFIG_HID_CHICONY=y
+# CONFIG_HID_PRODIKEYS is not set
+CONFIG_HID_CYPRESS=y
+# CONFIG_HID_DRAGONRISE is not set
+# CONFIG_HID_EMS_FF is not set
+# CONFIG_HID_ELECOM is not set
+# CONFIG_HID_ELO is not set
+CONFIG_HID_EZKEY=y
+# CONFIG_HID_HOLTEK is not set
+# CONFIG_HID_GT683R is not set
+# CONFIG_HID_HUION is not set
+# CONFIG_HID_KEYTOUCH is not set
+# CONFIG_HID_KYE is not set
+# CONFIG_HID_UCLOGIC is not set
+# CONFIG_HID_WALTOP is not set
+CONFIG_HID_GYRATION=y
+# CONFIG_HID_ICADE is not set
+# CONFIG_HID_TWINHAN is not set
+CONFIG_HID_KENSINGTON=y
+# CONFIG_HID_LCPOWER is not set
+# CONFIG_HID_LENOVO is not set
+CONFIG_HID_LOGITECH=y
+# CONFIG_HID_LOGITECH_DJ is not set
+CONFIG_LOGITECH_FF=y
+# CONFIG_LOGIRUMBLEPAD2_FF is not set
+# CONFIG_LOGIG940_FF is not set
+CONFIG_LOGIWHEELS_FF=y
+# CONFIG_HID_MAGICMOUSE is not set
+CONFIG_HID_MICROSOFT=y
+CONFIG_HID_MONTEREY=y
+# CONFIG_HID_MULTITOUCH is not set
+CONFIG_HID_NTRIG=y
+# CONFIG_HID_ORTEK is not set
+CONFIG_HID_PANTHERLORD=y
+CONFIG_PANTHERLORD_FF=y
+CONFIG_HID_PETALYNX=y
+# CONFIG_HID_PICOLCD is not set
+# CONFIG_HID_PRIMAX is not set
+# CONFIG_HID_ROCCAT is not set
+# CONFIG_HID_SAITEK is not set
+CONFIG_HID_SAMSUNG=y
+CONFIG_HID_SONY=y
+# CONFIG_SONY_FF is not set
+# CONFIG_HID_SPEEDLINK is not set
+# CONFIG_HID_STEELSERIES is not set
+CONFIG_HID_SUNPLUS=y
+# CONFIG_HID_RMI is not set
+# CONFIG_HID_GREENASIA is not set
+# CONFIG_HID_SMARTJOYPLUS is not set
+# CONFIG_HID_TIVO is not set
+CONFIG_HID_TOPSEED=y
+# CONFIG_HID_THINGM is not set
+# CONFIG_HID_THRUSTMASTER is not set
+# CONFIG_HID_WACOM is not set
+# CONFIG_HID_WIIMOTE is not set
+# CONFIG_HID_XINMO is not set
+# CONFIG_HID_ZEROPLUS is not set
+# CONFIG_HID_ZYDACRON is not set
+# CONFIG_HID_SENSOR_HUB is not set
+
+#
+# USB HID support
+#
+CONFIG_USB_HID=y
+CONFIG_HID_PID=y
+CONFIG_USB_HIDDEV=y
+
+#
+# I2C HID support
+#
+# CONFIG_I2C_HID is not set
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_COMMON=y
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_USB=y
+CONFIG_USB_ANNOUNCE_NEW_DEVICES=y
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEFAULT_PERSIST=y
+# CONFIG_USB_DYNAMIC_MINORS is not set
+# CONFIG_USB_OTG_FSM is not set
+CONFIG_USB_MON=y
+# CONFIG_USB_WUSB_CBAF is not set
+
+#
+# USB Host Controller Drivers
+#
+# CONFIG_USB_C67X00_HCD is not set
+# CONFIG_USB_XHCI_HCD is not set
+CONFIG_USB_EHCI_HCD=y
+# CONFIG_USB_EHCI_ROOT_HUB_TT is not set
+# CONFIG_USB_EHCI_TT_NEWSCHED is not set
+CONFIG_USB_EHCI_PCI=y
+# CONFIG_USB_EHCI_HCD_PLATFORM is not set
+# CONFIG_USB_OXU210HP_HCD is not set
+# CONFIG_USB_ISP116X_HCD is not set
+# CONFIG_USB_ISP1760_HCD is not set
+# CONFIG_USB_ISP1362_HCD is not set
+# CONFIG_USB_FUSBH200_HCD is not set
+# CONFIG_USB_FOTG210_HCD is not set
+CONFIG_USB_OHCI_HCD=y
+CONFIG_USB_OHCI_HCD_PCI=y
+# CONFIG_USB_OHCI_HCD_PLATFORM is not set
+CONFIG_USB_UHCI_HCD=y
+# CONFIG_USB_SL811_HCD is not set
+# CONFIG_USB_R8A66597_HCD is not set
+# CONFIG_USB_HCD_TEST_MODE is not set
+
+#
+# USB Device Class drivers
+#
+# CONFIG_USB_ACM is not set
+CONFIG_USB_PRINTER=y
+# CONFIG_USB_WDM is not set
+# CONFIG_USB_TMC is not set
+
+#
+# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
+#
+
+#
+# also be needed; see USB_STORAGE Help for more info
+#
+CONFIG_USB_STORAGE=y
+# CONFIG_USB_STORAGE_DEBUG is not set
+# CONFIG_USB_STORAGE_REALTEK is not set
+# CONFIG_USB_STORAGE_DATAFAB is not set
+# CONFIG_USB_STORAGE_FREECOM is not set
+# CONFIG_USB_STORAGE_ISD200 is not set
+# CONFIG_USB_STORAGE_USBAT is not set
+# CONFIG_USB_STORAGE_SDDR09 is not set
+# CONFIG_USB_STORAGE_SDDR55 is not set
+# CONFIG_USB_STORAGE_JUMPSHOT is not set
+# CONFIG_USB_STORAGE_ALAUDA is not set
+# CONFIG_USB_STORAGE_ONETOUCH is not set
+# CONFIG_USB_STORAGE_KARMA is not set
+# CONFIG_USB_STORAGE_CYPRESS_ATACB is not set
+# CONFIG_USB_STORAGE_ENE_UB6250 is not set
+# CONFIG_USB_UAS is not set
+
+#
+# USB Imaging devices
+#
+# CONFIG_USB_MDC800 is not set
+# CONFIG_USB_MICROTEK is not set
+# CONFIG_USBIP_CORE is not set
+# CONFIG_USB_MUSB_HDRC is not set
+# CONFIG_USB_DWC3 is not set
+# CONFIG_USB_DWC2 is not set
+# CONFIG_USB_CHIPIDEA is not set
+
+#
+# USB port drivers
+#
+# CONFIG_USB_SERIAL is not set
+
+#
+# USB Miscellaneous drivers
+#
+# CONFIG_USB_EMI62 is not set
+# CONFIG_USB_EMI26 is not set
+# CONFIG_USB_ADUTUX is not set
+# CONFIG_USB_SEVSEG is not set
+# CONFIG_USB_RIO500 is not set
+# CONFIG_USB_LEGOTOWER is not set
+# CONFIG_USB_LCD is not set
+# CONFIG_USB_LED is not set
+# CONFIG_USB_CYPRESS_CY7C63 is not set
+# CONFIG_USB_CYTHERM is not set
+# CONFIG_USB_IDMOUSE is not set
+# CONFIG_USB_FTDI_ELAN is not set
+# CONFIG_USB_APPLEDISPLAY is not set
+# CONFIG_USB_SISUSBVGA is not set
+# CONFIG_USB_LD is not set
+# CONFIG_USB_TRANCEVIBRATOR is not set
+# CONFIG_USB_IOWARRIOR is not set
+# CONFIG_USB_TEST is not set
+# CONFIG_USB_EHSET_TEST_FIXTURE is not set
+# CONFIG_USB_ISIGHTFW is not set
+# CONFIG_USB_YUREX is not set
+# CONFIG_USB_EZUSB_FX2 is not set
+# CONFIG_USB_HSIC_USB3503 is not set
+# CONFIG_USB_LINK_LAYER_TEST is not set
+
+#
+# USB Physical Layer drivers
+#
+# CONFIG_USB_PHY is not set
+# CONFIG_NOP_USB_XCEIV is not set
+# CONFIG_SAMSUNG_USB2PHY is not set
+# CONFIG_SAMSUNG_USB3PHY is not set
+# CONFIG_USB_ISP1301 is not set
+# CONFIG_USB_GADGET is not set
+# CONFIG_UWB is not set
+# CONFIG_MMC is not set
+# CONFIG_MEMSTICK is not set
+CONFIG_NEW_LEDS=y
+CONFIG_LEDS_CLASS=y
+
+#
+# LED drivers
+#
+# CONFIG_LEDS_LM3530 is not set
+# CONFIG_LEDS_LM3642 is not set
+# CONFIG_LEDS_PCA9532 is not set
+# CONFIG_LEDS_LP3944 is not set
+# CONFIG_LEDS_LP5521 is not set
+# CONFIG_LEDS_LP5523 is not set
+# CONFIG_LEDS_LP5562 is not set
+# CONFIG_LEDS_LP8501 is not set
+# CONFIG_LEDS_CLEVO_MAIL is not set
+# CONFIG_LEDS_PCA955X is not set
+# CONFIG_LEDS_PCA963X is not set
+# CONFIG_LEDS_BD2802 is not set
+# CONFIG_LEDS_INTEL_SS4200 is not set
+# CONFIG_LEDS_TCA6507 is not set
+# CONFIG_LEDS_LM355x is not set
+
+#
+# LED driver for blink(1) USB RGB LED is under Special HID drivers (HID_THINGM)
+#
+# CONFIG_LEDS_BLINKM is not set
+
+#
+# LED Triggers
+#
+CONFIG_LEDS_TRIGGERS=y
+# CONFIG_LEDS_TRIGGER_TIMER is not set
+# CONFIG_LEDS_TRIGGER_ONESHOT is not set
+# CONFIG_LEDS_TRIGGER_HEARTBEAT is not set
+# CONFIG_LEDS_TRIGGER_BACKLIGHT is not set
+# CONFIG_LEDS_TRIGGER_CPU is not set
+# CONFIG_LEDS_TRIGGER_DEFAULT_ON is not set
+
+#
+# iptables trigger is under Netfilter config (LED target)
+#
+# CONFIG_LEDS_TRIGGER_TRANSIENT is not set
+# CONFIG_LEDS_TRIGGER_CAMERA is not set
+# CONFIG_ACCESSIBILITY is not set
+# CONFIG_INFINIBAND is not set
+CONFIG_EDAC=y
+CONFIG_EDAC_LEGACY_SYSFS=y
+# CONFIG_EDAC_DEBUG is not set
+CONFIG_EDAC_DECODE_MCE=y
+# CONFIG_EDAC_MCE_INJ is not set
+# CONFIG_EDAC_MM_EDAC is not set
+CONFIG_RTC_LIB=y
+CONFIG_RTC_CLASS=y
+# CONFIG_RTC_HCTOSYS is not set
+CONFIG_RTC_SYSTOHC=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+# CONFIG_RTC_DEBUG is not set
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+# CONFIG_RTC_INTF_DEV_UIE_EMUL is not set
+# CONFIG_RTC_DRV_TEST is not set
+
+#
+# I2C RTC drivers
+#
+# CONFIG_RTC_DRV_DS1307 is not set
+# CONFIG_RTC_DRV_DS1374 is not set
+# CONFIG_RTC_DRV_DS1672 is not set
+# CONFIG_RTC_DRV_DS3232 is not set
+# CONFIG_RTC_DRV_MAX6900 is not set
+# CONFIG_RTC_DRV_RS5C372 is not set
+# CONFIG_RTC_DRV_ISL1208 is not set
+# CONFIG_RTC_DRV_ISL12022 is not set
+# CONFIG_RTC_DRV_ISL12057 is not set
+# CONFIG_RTC_DRV_X1205 is not set
+# CONFIG_RTC_DRV_PCF2127 is not set
+# CONFIG_RTC_DRV_PCF8523 is not set
+# CONFIG_RTC_DRV_PCF8563 is not set
+# CONFIG_RTC_DRV_PCF85063 is not set
+# CONFIG_RTC_DRV_PCF8583 is not set
+# CONFIG_RTC_DRV_M41T80 is not set
+# CONFIG_RTC_DRV_BQ32K is not set
+# CONFIG_RTC_DRV_S35390A is not set
+# CONFIG_RTC_DRV_FM3130 is not set
+# CONFIG_RTC_DRV_RX8581 is not set
+# CONFIG_RTC_DRV_RX8025 is not set
+# CONFIG_RTC_DRV_EM3027 is not set
+# CONFIG_RTC_DRV_RV3029C2 is not set
+
+#
+# SPI RTC drivers
+#
+
+#
+# Platform RTC drivers
+#
+CONFIG_RTC_DRV_CMOS=y
+# CONFIG_RTC_DRV_DS1286 is not set
+# CONFIG_RTC_DRV_DS1511 is not set
+# CONFIG_RTC_DRV_DS1553 is not set
+# CONFIG_RTC_DRV_DS1742 is not set
+# CONFIG_RTC_DRV_DS2404 is not set
+# CONFIG_RTC_DRV_EFI is not set
+# CONFIG_RTC_DRV_STK17TA8 is not set
+# CONFIG_RTC_DRV_M48T86 is not set
+# CONFIG_RTC_DRV_M48T35 is not set
+# CONFIG_RTC_DRV_M48T59 is not set
+# CONFIG_RTC_DRV_MSM6242 is not set
+# CONFIG_RTC_DRV_BQ4802 is not set
+# CONFIG_RTC_DRV_RP5C01 is not set
+# CONFIG_RTC_DRV_V3020 is not set
+
+#
+# on-CPU RTC drivers
+#
+# CONFIG_RTC_DRV_XGENE is not set
+
+#
+# HID Sensor RTC drivers
+#
+# CONFIG_RTC_DRV_HID_SENSOR_TIME is not set
+CONFIG_DMADEVICES=y
+# CONFIG_DMADEVICES_DEBUG is not set
+
+#
+# DMA Devices
+#
+# CONFIG_INTEL_MID_DMAC is not set
+# CONFIG_INTEL_IOATDMA is not set
+# CONFIG_DW_DMAC_CORE is not set
+# CONFIG_DW_DMAC is not set
+# CONFIG_DW_DMAC_PCI is not set
+CONFIG_DMA_ACPI=y
+# CONFIG_AUXDISPLAY is not set
+# CONFIG_UIO is not set
+# CONFIG_VFIO is not set
+# CONFIG_VIRT_DRIVERS is not set
+
+#
+# Virtio drivers
+#
+# CONFIG_VIRTIO_PCI is not set
+# CONFIG_VIRTIO_MMIO is not set
+
+#
+# Microsoft Hyper-V guest support
+#
+# CONFIG_STAGING is not set
+CONFIG_X86_PLATFORM_DEVICES=y
+# CONFIG_ACERHDF is not set
+# CONFIG_ASUS_LAPTOP is not set
+# CONFIG_DELL_SMO8800 is not set
+# CONFIG_FUJITSU_LAPTOP is not set
+# CONFIG_FUJITSU_TABLET is not set
+# CONFIG_AMILO_RFKILL is not set
+# CONFIG_HP_ACCEL is not set
+# CONFIG_HP_WIRELESS is not set
+# CONFIG_MSI_LAPTOP is not set
+# CONFIG_PANASONIC_LAPTOP is not set
+# CONFIG_COMPAL_LAPTOP is not set
+# CONFIG_SONY_LAPTOP is not set
+# CONFIG_IDEAPAD_LAPTOP is not set
+# CONFIG_THINKPAD_ACPI is not set
+# CONFIG_SENSORS_HDAPS is not set
+# CONFIG_INTEL_MENLOW is not set
+CONFIG_EEEPC_LAPTOP=y
+# CONFIG_ACPI_WMI is not set
+# CONFIG_TOPSTAR_LAPTOP is not set
+# CONFIG_TOSHIBA_BT_RFKILL is not set
+# CONFIG_TOSHIBA_HAPS is not set
+# CONFIG_ACPI_CMPC is not set
+# CONFIG_INTEL_IPS is not set
+# CONFIG_IBM_RTL is not set
+# CONFIG_SAMSUNG_LAPTOP is not set
+# CONFIG_INTEL_OAKTRAIL is not set
+# CONFIG_SAMSUNG_Q10 is not set
+# CONFIG_APPLE_GMUX is not set
+# CONFIG_INTEL_RST is not set
+# CONFIG_INTEL_SMARTCONNECT is not set
+# CONFIG_PVPANIC is not set
+# CONFIG_CHROME_PLATFORMS is not set
+
+#
+# SOC (System On Chip) specific Drivers
+#
+
+#
+# Hardware Spinlock drivers
+#
+
+#
+# Clock Source drivers
+#
+CONFIG_CLKEVT_I8253=y
+CONFIG_I8253_LOCK=y
+CONFIG_CLKBLD_I8253=y
+# CONFIG_SH_TIMER_CMT is not set
+# CONFIG_SH_TIMER_MTU2 is not set
+# CONFIG_SH_TIMER_TMU is not set
+# CONFIG_EM_TIMER_STI is not set
+# CONFIG_MAILBOX is not set
+CONFIG_IOMMU_API=y
+CONFIG_IOMMU_SUPPORT=y
+CONFIG_AMD_IOMMU=y
+CONFIG_AMD_IOMMU_STATS=y
+# CONFIG_AMD_IOMMU_V2 is not set
+CONFIG_DMAR_TABLE=y
+CONFIG_INTEL_IOMMU=y
+# CONFIG_INTEL_IOMMU_DEFAULT_ON is not set
+CONFIG_INTEL_IOMMU_FLOPPY_WA=y
+# CONFIG_IRQ_REMAP is not set
+
+#
+# Remoteproc drivers
+#
+# CONFIG_STE_MODEM_RPROC is not set
+
+#
+# Rpmsg drivers
+#
+# CONFIG_PM_DEVFREQ is not set
+# CONFIG_EXTCON is not set
+# CONFIG_MEMORY is not set
+# CONFIG_IIO is not set
+# CONFIG_NTB is not set
+# CONFIG_VME_BUS is not set
+# CONFIG_PWM is not set
+# CONFIG_IPACK_BUS is not set
+# CONFIG_RESET_CONTROLLER is not set
+# CONFIG_FMC is not set
+
+#
+# PHY Subsystem
+#
+# CONFIG_GENERIC_PHY is not set
+# CONFIG_BCM_KONA_USB2_PHY is not set
+# CONFIG_POWERCAP is not set
+# CONFIG_MCB is not set
+CONFIG_RAS=y
+# CONFIG_THUNDERBOLT is not set
+
+#
+# Firmware Drivers
+#
+# CONFIG_EDD is not set
+CONFIG_FIRMWARE_MEMMAP=y
+# CONFIG_DELL_RBU is not set
+# CONFIG_DCDBAS is not set
+CONFIG_DMIID=y
+# CONFIG_DMI_SYSFS is not set
+CONFIG_DMI_SCAN_MACHINE_NON_EFI_FALLBACK=y
+# CONFIG_ISCSI_IBFT_FIND is not set
+# CONFIG_GOOGLE_FIRMWARE is not set
+
+#
+# EFI (Extensible Firmware Interface) Support
+#
+CONFIG_EFI_VARS=y
+CONFIG_EFI_RUNTIME_MAP=y
+CONFIG_EFI_RUNTIME_WRAPPERS=y
+
+#
+# File systems
+#
+CONFIG_DCACHE_WORD_ACCESS=y
+# CONFIG_EXT2_FS is not set
+# CONFIG_EXT3_FS is not set
+CONFIG_EXT4_FS=y
+CONFIG_EXT4_USE_FOR_EXT23=y
+CONFIG_EXT4_FS_POSIX_ACL=y
+CONFIG_EXT4_FS_SECURITY=y
+# CONFIG_EXT4_DEBUG is not set
+CONFIG_JBD2=y
+# CONFIG_JBD2_DEBUG is not set
+CONFIG_FS_MBCACHE=y
+# CONFIG_REISERFS_FS is not set
+# CONFIG_JFS_FS is not set
+# CONFIG_XFS_FS is not set
+# CONFIG_GFS2_FS is not set
+# CONFIG_BTRFS_FS is not set
+# CONFIG_NILFS2_FS is not set
+CONFIG_FS_POSIX_ACL=y
+CONFIG_FILE_LOCKING=y
+CONFIG_FSNOTIFY=y
+CONFIG_DNOTIFY=y
+CONFIG_INOTIFY_USER=y
+# CONFIG_FANOTIFY is not set
+CONFIG_QUOTA=y
+CONFIG_QUOTA_NETLINK_INTERFACE=y
+# CONFIG_PRINT_QUOTA_WARNING is not set
+# CONFIG_QUOTA_DEBUG is not set
+CONFIG_QUOTA_TREE=y
+# CONFIG_QFMT_V1 is not set
+CONFIG_QFMT_V2=y
+CONFIG_QUOTACTL=y
+CONFIG_QUOTACTL_COMPAT=y
+CONFIG_AUTOFS4_FS=y
+CONFIG_FUSE_FS=y
+# CONFIG_CUSE is not set
+
+#
+# Caches
+#
+# CONFIG_FSCACHE is not set
+
+#
+# CD-ROM/DVD Filesystems
+#
+CONFIG_ISO9660_FS=y
+CONFIG_JOLIET=y
+CONFIG_ZISOFS=y
+# CONFIG_UDF_FS is not set
+
+#
+# DOS/FAT/NT Filesystems
+#
+CONFIG_FAT_FS=y
+CONFIG_MSDOS_FS=y
+CONFIG_VFAT_FS=y
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_FAT_DEFAULT_IOCHARSET="iso8859-1"
+# CONFIG_NTFS_FS is not set
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_KCORE=y
+CONFIG_PROC_VMCORE=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+CONFIG_KERNFS=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+CONFIG_TMPFS_POSIX_ACL=y
+CONFIG_TMPFS_XATTR=y
+CONFIG_HUGETLBFS=y
+CONFIG_HUGETLB_PAGE=y
+# CONFIG_CONFIGFS_FS is not set
+CONFIG_MISC_FILESYSTEMS=y
+# CONFIG_ADFS_FS is not set
+# CONFIG_AFFS_FS is not set
+# CONFIG_ECRYPT_FS is not set
+# CONFIG_HFS_FS is not set
+# CONFIG_HFSPLUS_FS is not set
+# CONFIG_BEFS_FS is not set
+# CONFIG_BFS_FS is not set
+# CONFIG_EFS_FS is not set
+# CONFIG_LOGFS is not set
+# CONFIG_CRAMFS is not set
+# CONFIG_SQUASHFS is not set
+# CONFIG_VXFS_FS is not set
+# CONFIG_MINIX_FS is not set
+# CONFIG_OMFS_FS is not set
+# CONFIG_HPFS_FS is not set
+# CONFIG_QNX4FS_FS is not set
+# CONFIG_QNX6FS_FS is not set
+# CONFIG_ROMFS_FS is not set
+# CONFIG_PSTORE is not set
+# CONFIG_SYSV_FS is not set
+# CONFIG_UFS_FS is not set
+# CONFIG_F2FS_FS is not set
+# CONFIG_EFIVAR_FS is not set
+CONFIG_NETWORK_FILESYSTEMS=y
+CONFIG_NFS_FS=y
+CONFIG_NFS_V2=y
+CONFIG_NFS_V3=y
+CONFIG_NFS_V3_ACL=y
+CONFIG_NFS_V4=y
+# CONFIG_NFS_SWAP is not set
+# CONFIG_NFS_V4_1 is not set
+CONFIG_ROOT_NFS=y
+# CONFIG_NFS_USE_LEGACY_DNS is not set
+CONFIG_NFS_USE_KERNEL_DNS=y
+# CONFIG_NFSD is not set
+CONFIG_LOCKD=y
+CONFIG_LOCKD_V4=y
+CONFIG_NFS_ACL_SUPPORT=y
+CONFIG_NFS_COMMON=y
+CONFIG_SUNRPC=y
+CONFIG_SUNRPC_GSS=y
+# CONFIG_SUNRPC_DEBUG is not set
+# CONFIG_CEPH_FS is not set
+# CONFIG_CIFS is not set
+# CONFIG_NCP_FS is not set
+# CONFIG_CODA_FS is not set
+# CONFIG_AFS_FS is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="utf8"
+CONFIG_NLS_CODEPAGE_437=y
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+# CONFIG_NLS_CODEPAGE_855 is not set
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+# CONFIG_NLS_CODEPAGE_866 is not set
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+# CONFIG_NLS_CODEPAGE_1251 is not set
+CONFIG_NLS_ASCII=y
+CONFIG_NLS_ISO8859_1=y
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+# CONFIG_NLS_ISO8859_5 is not set
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+# CONFIG_NLS_KOI8_R is not set
+# CONFIG_NLS_KOI8_U is not set
+# CONFIG_NLS_MAC_ROMAN is not set
+# CONFIG_NLS_MAC_CELTIC is not set
+# CONFIG_NLS_MAC_CENTEURO is not set
+# CONFIG_NLS_MAC_CROATIAN is not set
+# CONFIG_NLS_MAC_CYRILLIC is not set
+# CONFIG_NLS_MAC_GAELIC is not set
+# CONFIG_NLS_MAC_GREEK is not set
+# CONFIG_NLS_MAC_ICELAND is not set
+# CONFIG_NLS_MAC_INUIT is not set
+# CONFIG_NLS_MAC_ROMANIAN is not set
+# CONFIG_NLS_MAC_TURKISH is not set
+CONFIG_NLS_UTF8=y
+
+#
+# Kernel hacking
+#
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+
+#
+# printk and dmesg options
+#
+CONFIG_PRINTK_TIME=y
+CONFIG_MESSAGE_LOGLEVEL_DEFAULT=4
+# CONFIG_BOOT_PRINTK_DELAY is not set
+# CONFIG_DYNAMIC_DEBUG is not set
+
+#
+# Compile-time checks and compiler options
+#
+# CONFIG_DEBUG_INFO is not set
+# CONFIG_ENABLE_WARN_DEPRECATED is not set
+CONFIG_ENABLE_MUST_CHECK=y
+CONFIG_FRAME_WARN=2048
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_READABLE_ASM is not set
+# CONFIG_UNUSED_SYMBOLS is not set
+CONFIG_DEBUG_FS=y
+# CONFIG_HEADERS_CHECK is not set
+# CONFIG_DEBUG_SECTION_MISMATCH is not set
+CONFIG_ARCH_WANT_FRAME_POINTERS=y
+CONFIG_FRAME_POINTER=y
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+CONFIG_MAGIC_SYSRQ=y
+CONFIG_MAGIC_SYSRQ_DEFAULT_ENABLE=0x1
+CONFIG_DEBUG_KERNEL=y
+
+#
+# Memory Debugging
+#
+# CONFIG_DEBUG_PAGEALLOC is not set
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_SLUB_DEBUG_ON is not set
+# CONFIG_SLUB_STATS is not set
+CONFIG_HAVE_DEBUG_KMEMLEAK=y
+# CONFIG_DEBUG_KMEMLEAK is not set
+CONFIG_DEBUG_STACK_USAGE=y
+# CONFIG_DEBUG_VM is not set
+# CONFIG_DEBUG_VIRTUAL is not set
+CONFIG_DEBUG_MEMORY_INIT=y
+# CONFIG_DEBUG_PER_CPU_MAPS is not set
+CONFIG_HAVE_DEBUG_STACKOVERFLOW=y
+CONFIG_DEBUG_STACKOVERFLOW=y
+CONFIG_HAVE_ARCH_KMEMCHECK=y
+# CONFIG_KMEMCHECK is not set
+# CONFIG_DEBUG_SHIRQ is not set
+
+#
+# Debug Lockups and Hangs
+#
+# CONFIG_LOCKUP_DETECTOR is not set
+# CONFIG_DETECT_HUNG_TASK is not set
+# CONFIG_PANIC_ON_OOPS is not set
+CONFIG_PANIC_ON_OOPS_VALUE=0
+CONFIG_PANIC_TIMEOUT=0
+# CONFIG_SCHED_DEBUG is not set
+CONFIG_SCHEDSTATS=y
+CONFIG_TIMER_STATS=y
+
+#
+# Lock Debugging (spinlocks, mutexes, etc...)
+#
+# CONFIG_DEBUG_RT_MUTEXES is not set
+# CONFIG_DEBUG_SPINLOCK is not set
+# CONFIG_DEBUG_MUTEXES is not set
+# CONFIG_DEBUG_WW_MUTEX_SLOWPATH is not set
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_LOCK_STAT is not set
+# CONFIG_DEBUG_ATOMIC_SLEEP is not set
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+# CONFIG_LOCK_TORTURE_TEST is not set
+CONFIG_STACKTRACE=y
+# CONFIG_DEBUG_KOBJECT is not set
+CONFIG_DEBUG_BUGVERBOSE=y
+# CONFIG_DEBUG_LIST is not set
+# CONFIG_DEBUG_PI_LIST is not set
+# CONFIG_DEBUG_SG is not set
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_DEBUG_CREDENTIALS is not set
+
+#
+# RCU Debugging
+#
+# CONFIG_SPARSE_RCU_POINTER is not set
+# CONFIG_TORTURE_TEST is not set
+# CONFIG_RCU_TORTURE_TEST is not set
+CONFIG_RCU_CPU_STALL_TIMEOUT=21
+# CONFIG_RCU_CPU_STALL_INFO is not set
+# CONFIG_RCU_TRACE is not set
+# CONFIG_DEBUG_BLOCK_EXT_DEVT is not set
+# CONFIG_NOTIFIER_ERROR_INJECTION is not set
+# CONFIG_FAULT_INJECTION is not set
+# CONFIG_LATENCYTOP is not set
+CONFIG_ARCH_HAS_DEBUG_STRICT_USER_COPY_CHECKS=y
+# CONFIG_DEBUG_STRICT_USER_COPY_CHECKS is not set
+CONFIG_USER_STACKTRACE_SUPPORT=y
+CONFIG_NOP_TRACER=y
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_FP_TEST=y
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_HAVE_DYNAMIC_FTRACE_WITH_REGS=y
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_HAVE_FENTRY=y
+CONFIG_HAVE_C_RECORDMCOUNT=y
+CONFIG_TRACE_CLOCK=y
+CONFIG_RING_BUFFER=y
+CONFIG_EVENT_TRACING=y
+CONFIG_CONTEXT_SWITCH_TRACER=y
+CONFIG_TRACING=y
+CONFIG_GENERIC_TRACER=y
+CONFIG_TRACING_SUPPORT=y
+CONFIG_FTRACE=y
+# CONFIG_FUNCTION_TRACER is not set
+# CONFIG_IRQSOFF_TRACER is not set
+# CONFIG_SCHED_TRACER is not set
+# CONFIG_FTRACE_SYSCALLS is not set
+# CONFIG_TRACER_SNAPSHOT is not set
+CONFIG_BRANCH_PROFILE_NONE=y
+# CONFIG_PROFILE_ANNOTATED_BRANCHES is not set
+# CONFIG_PROFILE_ALL_BRANCHES is not set
+# CONFIG_STACK_TRACER is not set
+CONFIG_BLK_DEV_IO_TRACE=y
+CONFIG_KPROBE_EVENT=y
+# CONFIG_UPROBE_EVENT is not set
+CONFIG_PROBE_EVENTS=y
+# CONFIG_FTRACE_STARTUP_TEST is not set
+# CONFIG_MMIOTRACE is not set
+# CONFIG_TRACEPOINT_BENCHMARK is not set
+# CONFIG_RING_BUFFER_BENCHMARK is not set
+# CONFIG_RING_BUFFER_STARTUP_TEST is not set
+
+#
+# Runtime Testing
+#
+# CONFIG_LKDTM is not set
+# CONFIG_TEST_LIST_SORT is not set
+# CONFIG_KPROBES_SANITY_TEST is not set
+# CONFIG_BACKTRACE_SELF_TEST is not set
+# CONFIG_RBTREE_TEST is not set
+# CONFIG_INTERVAL_TREE_TEST is not set
+# CONFIG_PERCPU_TEST is not set
+# CONFIG_ATOMIC64_SELFTEST is not set
+# CONFIG_TEST_STRING_HELPERS is not set
+# CONFIG_TEST_KSTRTOX is not set
+# CONFIG_TEST_RHASHTABLE is not set
+CONFIG_PROVIDE_OHCI1394_DMA_INIT=y
+# CONFIG_DMA_API_DEBUG is not set
+# CONFIG_TEST_MODULE is not set
+# CONFIG_TEST_USER_COPY is not set
+# CONFIG_TEST_BPF is not set
+# CONFIG_TEST_FIRMWARE is not set
+# CONFIG_TEST_UDELAY is not set
+# CONFIG_SAMPLES is not set
+CONFIG_HAVE_ARCH_KGDB=y
+# CONFIG_KGDB is not set
+# CONFIG_STRICT_DEVMEM is not set
+CONFIG_X86_VERBOSE_BOOTUP=y
+CONFIG_EARLY_PRINTK=y
+CONFIG_EARLY_PRINTK_DBGP=y
+# CONFIG_EARLY_PRINTK_EFI is not set
+# CONFIG_X86_PTDUMP is not set
+CONFIG_DEBUG_RODATA=y
+# CONFIG_DEBUG_RODATA_TEST is not set
+# CONFIG_DEBUG_SET_MODULE_RONX is not set
+# CONFIG_DEBUG_NX_TEST is not set
+CONFIG_DOUBLEFAULT=y
+# CONFIG_DEBUG_TLBFLUSH is not set
+# CONFIG_IOMMU_STRESS is not set
+CONFIG_HAVE_MMIOTRACE_SUPPORT=y
+# CONFIG_X86_DECODER_SELFTEST is not set
+CONFIG_IO_DELAY_TYPE_0X80=0
+CONFIG_IO_DELAY_TYPE_0XED=1
+CONFIG_IO_DELAY_TYPE_UDELAY=2
+CONFIG_IO_DELAY_TYPE_NONE=3
+CONFIG_IO_DELAY_0X80=y
+# CONFIG_IO_DELAY_0XED is not set
+# CONFIG_IO_DELAY_UDELAY is not set
+# CONFIG_IO_DELAY_NONE is not set
+CONFIG_DEFAULT_IO_DELAY_TYPE=0
+CONFIG_DEBUG_BOOT_PARAMS=y
+# CONFIG_CPA_DEBUG is not set
+CONFIG_OPTIMIZE_INLINING=y
+# CONFIG_DEBUG_NMI_SELFTEST is not set
+# CONFIG_X86_DEBUG_STATIC_CPU_HAS is not set
+
+#
+# Security options
+#
+CONFIG_KEYS=y
+# CONFIG_PERSISTENT_KEYRINGS is not set
+# CONFIG_BIG_KEYS is not set
+# CONFIG_ENCRYPTED_KEYS is not set
+CONFIG_KEYS_DEBUG_PROC_KEYS=y
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+CONFIG_SECURITY=y
+# CONFIG_SECURITYFS is not set
+CONFIG_SECURITY_NETWORK=y
+# CONFIG_SECURITY_NETWORK_XFRM is not set
+# CONFIG_SECURITY_PATH is not set
+# CONFIG_INTEL_TXT is not set
+CONFIG_LSM_MMAP_MIN_ADDR=65536
+CONFIG_SECURITY_SELINUX=y
+CONFIG_SECURITY_SELINUX_BOOTPARAM=y
+CONFIG_SECURITY_SELINUX_BOOTPARAM_VALUE=1
+CONFIG_SECURITY_SELINUX_DISABLE=y
+CONFIG_SECURITY_SELINUX_DEVELOP=y
+CONFIG_SECURITY_SELINUX_AVC_STATS=y
+CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE=1
+# CONFIG_SECURITY_SELINUX_POLICYDB_VERSION_MAX is not set
+# CONFIG_SECURITY_SMACK is not set
+# CONFIG_SECURITY_TOMOYO is not set
+# CONFIG_SECURITY_APPARMOR is not set
+# CONFIG_SECURITY_YAMA is not set
+# CONFIG_IMA is not set
+# CONFIG_EVM is not set
+CONFIG_DEFAULT_SECURITY_SELINUX=y
+# CONFIG_DEFAULT_SECURITY_DAC is not set
+CONFIG_DEFAULT_SECURITY="selinux"
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_AEAD=y
+CONFIG_CRYPTO_AEAD2=y
+CONFIG_CRYPTO_BLKCIPHER=y
+CONFIG_CRYPTO_BLKCIPHER2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+CONFIG_CRYPTO_RNG=y
+CONFIG_CRYPTO_RNG2=y
+CONFIG_CRYPTO_PCOMP2=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_MANAGER2=y
+# CONFIG_CRYPTO_USER is not set
+CONFIG_CRYPTO_MANAGER_DISABLE_TESTS=y
+# CONFIG_CRYPTO_GF128MUL is not set
+# CONFIG_CRYPTO_NULL is not set
+# CONFIG_CRYPTO_PCRYPT is not set
+CONFIG_CRYPTO_WORKQUEUE=y
+# CONFIG_CRYPTO_CRYPTD is not set
+CONFIG_CRYPTO_AUTHENC=y
+# CONFIG_CRYPTO_TEST is not set
+
+#
+# Authenticated Encryption with Associated Data
+#
+CONFIG_CRYPTO_CCM=y
+# CONFIG_CRYPTO_GCM is not set
+CONFIG_CRYPTO_SEQIV=y
+
+#
+# Block modes
+#
+CONFIG_CRYPTO_CBC=y
+CONFIG_CRYPTO_CTR=y
+# CONFIG_CRYPTO_CTS is not set
+# CONFIG_CRYPTO_ECB is not set
+# CONFIG_CRYPTO_LRW is not set
+# CONFIG_CRYPTO_PCBC is not set
+# CONFIG_CRYPTO_XTS is not set
+
+#
+# Hash modes
+#
+# CONFIG_CRYPTO_CMAC is not set
+CONFIG_CRYPTO_HMAC=y
+# CONFIG_CRYPTO_XCBC is not set
+# CONFIG_CRYPTO_VMAC is not set
+
+#
+# Digest
+#
+CONFIG_CRYPTO_CRC32C=y
+# CONFIG_CRYPTO_CRC32C_INTEL is not set
+# CONFIG_CRYPTO_CRC32 is not set
+# CONFIG_CRYPTO_CRC32_PCLMUL is not set
+# CONFIG_CRYPTO_CRCT10DIF is not set
+# CONFIG_CRYPTO_GHASH is not set
+# CONFIG_CRYPTO_MD4 is not set
+CONFIG_CRYPTO_MD5=y
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_RMD128 is not set
+# CONFIG_CRYPTO_RMD160 is not set
+# CONFIG_CRYPTO_RMD256 is not set
+# CONFIG_CRYPTO_RMD320 is not set
+CONFIG_CRYPTO_SHA1=y
+# CONFIG_CRYPTO_SHA1_SSSE3 is not set
+# CONFIG_CRYPTO_SHA256_SSSE3 is not set
+# CONFIG_CRYPTO_SHA512_SSSE3 is not set
+# CONFIG_CRYPTO_SHA256 is not set
+# CONFIG_CRYPTO_SHA512 is not set
+# CONFIG_CRYPTO_TGR192 is not set
+# CONFIG_CRYPTO_WP512 is not set
+# CONFIG_CRYPTO_GHASH_CLMUL_NI_INTEL is not set
+
+#
+# Ciphers
+#
+CONFIG_CRYPTO_AES=y
+# CONFIG_CRYPTO_AES_X86_64 is not set
+# CONFIG_CRYPTO_AES_NI_INTEL is not set
+# CONFIG_CRYPTO_ANUBIS is not set
+CONFIG_CRYPTO_ARC4=y
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_BLOWFISH_X86_64 is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAMELLIA_X86_64 is not set
+# CONFIG_CRYPTO_CAMELLIA_AESNI_AVX_X86_64 is not set
+# CONFIG_CRYPTO_CAMELLIA_AESNI_AVX2_X86_64 is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST5_AVX_X86_64 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+# CONFIG_CRYPTO_CAST6_AVX_X86_64 is not set
+CONFIG_CRYPTO_DES=y
+# CONFIG_CRYPTO_DES3_EDE_X86_64 is not set
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_KHAZAD is not set
+# CONFIG_CRYPTO_SALSA20 is not set
+# CONFIG_CRYPTO_SALSA20_X86_64 is not set
+# CONFIG_CRYPTO_SEED is not set
+# CONFIG_CRYPTO_SERPENT is not set
+# CONFIG_CRYPTO_SERPENT_SSE2_X86_64 is not set
+# CONFIG_CRYPTO_SERPENT_AVX_X86_64 is not set
+# CONFIG_CRYPTO_SERPENT_AVX2_X86_64 is not set
+# CONFIG_CRYPTO_TEA is not set
+# CONFIG_CRYPTO_TWOFISH is not set
+# CONFIG_CRYPTO_TWOFISH_X86_64 is not set
+# CONFIG_CRYPTO_TWOFISH_X86_64_3WAY is not set
+# CONFIG_CRYPTO_TWOFISH_AVX_X86_64 is not set
+
+#
+# Compression
+#
+# CONFIG_CRYPTO_DEFLATE is not set
+# CONFIG_CRYPTO_ZLIB is not set
+# CONFIG_CRYPTO_LZO is not set
+# CONFIG_CRYPTO_LZ4 is not set
+# CONFIG_CRYPTO_LZ4HC is not set
+
+#
+# Random Number Generation
+#
+# CONFIG_CRYPTO_ANSI_CPRNG is not set
+# CONFIG_CRYPTO_DRBG_MENU is not set
+# CONFIG_CRYPTO_USER_API_HASH is not set
+# CONFIG_CRYPTO_USER_API_SKCIPHER is not set
+CONFIG_CRYPTO_HW=y
+# CONFIG_CRYPTO_DEV_PADLOCK is not set
+# CONFIG_CRYPTO_DEV_CCP is not set
+# CONFIG_CRYPTO_DEV_QAT_DH895xCC is not set
+# CONFIG_ASYMMETRIC_KEY_TYPE is not set
+CONFIG_HAVE_KVM=y
+CONFIG_VIRTUALIZATION=y
+# CONFIG_KVM is not set
+CONFIG_BINARY_PRINTF=y
+
+#
+# Library routines
+#
+CONFIG_BITREVERSE=y
+CONFIG_GENERIC_STRNCPY_FROM_USER=y
+CONFIG_GENERIC_STRNLEN_USER=y
+CONFIG_GENERIC_NET_UTILS=y
+CONFIG_GENERIC_FIND_FIRST_BIT=y
+CONFIG_GENERIC_PCI_IOMAP=y
+CONFIG_GENERIC_IOMAP=y
+CONFIG_GENERIC_IO=y
+CONFIG_ARCH_USE_CMPXCHG_LOCKREF=y
+CONFIG_ARCH_HAS_FAST_MULTIPLIER=y
+# CONFIG_CRC_CCITT is not set
+CONFIG_CRC16=y
+# CONFIG_CRC_T10DIF is not set
+# CONFIG_CRC_ITU_T is not set
+CONFIG_CRC32=y
+# CONFIG_CRC32_SELFTEST is not set
+CONFIG_CRC32_SLICEBY8=y
+# CONFIG_CRC32_SLICEBY4 is not set
+# CONFIG_CRC32_SARWATE is not set
+# CONFIG_CRC32_BIT is not set
+# CONFIG_CRC7 is not set
+# CONFIG_LIBCRC32C is not set
+# CONFIG_CRC8 is not set
+# CONFIG_AUDIT_ARCH_COMPAT_GENERIC is not set
+# CONFIG_RANDOM32_SELFTEST is not set
+CONFIG_ZLIB_INFLATE=y
+CONFIG_LZO_COMPRESS=y
+CONFIG_LZO_DECOMPRESS=y
+CONFIG_XZ_DEC=y
+CONFIG_XZ_DEC_X86=y
+CONFIG_XZ_DEC_POWERPC=y
+CONFIG_XZ_DEC_IA64=y
+CONFIG_XZ_DEC_ARM=y
+CONFIG_XZ_DEC_ARMTHUMB=y
+CONFIG_XZ_DEC_SPARC=y
+CONFIG_XZ_DEC_BCJ=y
+# CONFIG_XZ_DEC_TEST is not set
+CONFIG_ASSOCIATIVE_ARRAY=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT_MAP=y
+CONFIG_HAS_DMA=y
+CONFIG_CHECK_SIGNATURE=y
+CONFIG_CPU_RMAP=y
+CONFIG_DQL=y
+CONFIG_GLOB=y
+# CONFIG_GLOB_SELFTEST is not set
+CONFIG_NLATTR=y
+CONFIG_ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE=y
+CONFIG_AVERAGE=y
+# CONFIG_CORDIC is not set
+# CONFIG_DDR is not set
+CONFIG_OID_REGISTRY=y
+CONFIG_UCS2_STRING=y
+CONFIG_FONT_SUPPORT=y
+# CONFIG_FONTS is not set
+CONFIG_FONT_8x8=y
+CONFIG_FONT_8x16=y
+CONFIG_ARCH_HAS_SG_CHAIN=y
diff --git a/linux-3.17.1/include/linux/gmtp.h b/linux-3.17.1/include/linux/gmtp.h
new file mode 100644
index 0000000..7f47993
--- /dev/null
+++ b/linux-3.17.1/include/linux/gmtp.h
@@ -0,0 +1,311 @@
+#ifndef LINUX_GMTP_H_
+#define LINUX_GMTP_H_
+
+#include <net/inet_sock.h>
+#include <net/inet_connection_sock.h>
+#include <net/tcp_states.h>
+#include <linux/types.h>
+#include <uapi/linux/gmtp.h>
+
+//TODO Study states
+enum gmtp_state {
+	GMTP_OPEN	     = TCP_ESTABLISHED,
+	GMTP_REQUESTING	     = TCP_SYN_SENT,
+	GMTP_LISTEN	     = TCP_LISTEN,
+	GMTP_REQUEST_RECV    = TCP_SYN_RECV,
+	GMTP_ACTIVE_CLOSEREQ = TCP_FIN_WAIT1,
+	GMTP_PASSIVE_CLOSE   = TCP_CLOSE_WAIT, /* any node receiving a Close */
+	GMTP_CLOSING	     = TCP_CLOSING,
+	GMTP_TIME_WAIT	     = TCP_TIME_WAIT,
+	GMTP_CLOSED	     = TCP_CLOSE,
+	GMTP_MAX_STATES
+};
+
+enum {
+	GMTPF_OPEN	      = TCPF_ESTABLISHED,
+	GMTPF_REQUESTING      = TCPF_SYN_SENT,
+	GMTPF_LISTEN	      = TCPF_LISTEN,
+	GMTPF_REQUEST_RECV	      = TCPF_SYN_RECV, //relay
+	GMTPF_ACTIVE_CLOSEREQ = TCPF_FIN_WAIT1,
+	GMTPF_PASSIVE_CLOSE   = TCPF_CLOSE_WAIT,
+	GMTPF_CLOSING	      = TCPF_CLOSING,
+	GMTPF_TIME_WAIT	      = TCPF_TIME_WAIT,
+	GMTPF_CLOSED	      = TCPF_CLOSE
+};
+
+
+enum gmtp_role {
+	GMTP_ROLE_UNDEFINED,
+	GMTP_ROLE_LISTEN,
+	GMTP_ROLE_CLIENT,
+	GMTP_ROLE_REPORTER,
+	GMTP_ROLE_SERVER,
+	GMTP_ROLE_RELAY
+};
+
+/*
+ * Number of loss intervals (RFC 4342, 8.6.1). The history size is one more than
+ * NINTERVAL, since the `open' interval I_0 is always stored as the first entry.
+ */
+#define NINTERVAL	8
+#define LIH_SIZE	(NINTERVAL + 1)
+
+/* Number of packets to wait after a missing packet (RFC 4342, 6.1) */
+#define MCC_NDUPACK 3
+
+/* GMTP-MCC receiver states */
+enum mcc_rx_states {
+	MCC_RSTATE_NO_DATA = 1,
+	MCC_RSTATE_DATA,
+};
+
+/**
+ * mcc_rx_hist  -  RX history structure for TFRC-based protocols
+ * @ring:		Packet history for RTT sampling and loss detection
+ * @loss_count:		Number of entries in circular history
+ * @loss_start:		Movable index (for loss detection)
+ * @rtt_sample_prev:	Used during RTT sampling, points to candidate entry
+ */
+struct mcc_rx_hist {
+	struct mcc_rx_hist_entry *ring[MCC_NDUPACK + 1];
+	u8			  loss_count:2,
+				  loss_start:2;
+#define rtt_sample_prev		  loss_start
+};
+
+/**
+ *  tfrc_loss_hist  -  Loss record database
+ *  @ring:	Circular queue managed in LIFO manner
+ *  @counter:	Current count of entries (can be more than %LIH_SIZE)
+ *  @i_mean:	Current Average Loss Interval [RFC 3448, 5.4]
+ */
+struct mcc_loss_hist {
+	struct mcc_loss_interval	*ring[LIH_SIZE];
+	u8				counter;
+	u32				i_mean;
+};
+
+/**
+ * struct gmtp_request_sock  -  represent GMTP-specific connection request
+ *
+ * @greq_inet_rsk: structure inherited from
+ *
+ * @iss: initial sequence number, sent on the first REQUEST (or register)
+ * @gss: greatest sequence number sent (for retransmitted REPLYS)
+ * @isr: initial sequence number received in the first REQUEST
+ * @gsr: greatest sequence number received (for retransmitted REQUEST(s))
+ *
+ **/
+struct gmtp_request_sock {
+	struct inet_request_sock greq_inet_rsk;
+
+	__u64			 iss;
+	__u64			 gss;
+	__u64			 isr;
+	__u64			 gsr;
+	
+	__u8 flowname[GMTP_FLOWNAME_LEN];
+};
+
+static inline struct gmtp_request_sock *gmtp_rsk(const struct request_sock *req)
+{
+	return (struct gmtp_request_sock *)req;
+}
+
+/**
+ * struct gmtp_sock - GMTP socket state
+ *
+ * @iss: initial sequence number sent
+ * @isr: initial sequence number received
+ * @gss: greatest sequence number sent
+ * @gsr: greatest valid sequence number received
+ * @mss: current value of MSS (path MTU minus header sizes)
+ * @role: role of this sock, one of %gmtp_role
+ * @req_stamp: time stamp of request sent
+ * @reply_stamp: time stamp of Request-Reply sent
+ * @tx_rtt: RTT from sender to relays
+ * @server_timewait: server holds timewait state on close
+ * @xmitlet: tasklet scheduled by the TX to dequeue data packets (???)
+ * @xmit_timer: used to control the TX (rate-based pacing)
+ * @rx_last_counter:	     Tracks window counter (RFC 4342, 8.1)
+ * @rx_state:		     Receiver state, one of %mcc_rx_states
+ * @rx_bytes_recv:	     Total sum of GMTP payload bytes
+ * @rx_x_recv:		     Receiver estimate of send rate (RFC 3448, sec. 4.3)
+ * @rx_max_rate:	Receiver max send rate calculated by TFRC Equation
+ * @rx_rtt:		RTT from receiver to sender
+ * @rx_avg_rtt:		Receiver estimate of RTT (average)
+ * @relay_rtt: 		     RTT from receiver to relay
+ * @rx_tstamp_last_feedback: Time at which last feedback was sent
+ * @rx_hist:		     Packet history (loss detection + RTT sampling)
+ * @rx_li_hist:		     Loss Interval database
+ * @rx_s:		     Received packet size in bytes
+ * @rx_pinv:		     Inverse of Loss Event Rate (RFC 4342, sec. 8.5)
+ * @pkt_sent: Number of data packets sent
+ * @data_sent: Amount of data sent (bytes)
+ * @bytes_sent: Amount of data+headers sent (bytes)
+ * @tx_sample_len: Length of the sample window (used to infer 'instant' Tx Rate)
+ * @tx_time_sample: Elapsed time at sample window (jiffies)
+ * @tx_byte_sample: Bytes sent at sample window
+ * @tx_first_stamp: time stamp of first sent data packet (jiffies)
+ * @tx_last_stamp: time stamp of last sent data packet (jiffies)
+ * @tx_max_rate: Max TX rate (bytes/s). 0 == no limits.
+ * tx_byte_budget: the amount of bytes that can be sent immediately.
+ * tx_adj_budget: memory of last adjustment in TX rate.
+ * @flowname: name of the dataflow
+ *
+ */
+struct gmtp_sock {
+	/* inet_connection_sock has to be the first member of gmtp_sock */
+	struct inet_connection_sock gmtps_inet_connection;
+#define gmtps_syn_rtt 	gmtps_inet_connection.icsk_ack.lrcvtime
+
+	__u32				iss;
+	__u32				isr;
+	__u32				gss;
+	__u32				gsr;
+	
+	__u32				mss;
+
+	enum gmtp_role			role:3;
+
+	__u32				req_stamp;
+	__u32				reply_stamp;
+
+	__u8				server_timewait:1;
+	struct tasklet_struct		xmitlet;
+	struct timer_list		xmit_timer;
+
+	/** Rx variables */
+	__be32				ndp_count;
+	enum mcc_rx_states		rx_state:8;
+	__u32				rx_bytes_recv;
+	__u32				rx_x_recv;
+	__be32				rx_max_rate;
+	__u32				rx_rtt;
+	__u32				rx_avg_rtt;
+	__u32				relay_rtt;
+	ktime_t				rx_tstamp_last_feedback;
+	struct mcc_rx_hist		rx_hist;
+	struct mcc_loss_hist		rx_li_hist;
+	__u16				rx_s;
+#define rx_pinv				rx_li_hist.i_mean
+
+	/** Tx variables */
+	__u32 				tx_rtt;
+	__u32	 			tx_dpkts_sent;
+	__u32				tx_data_sent;
+	__u32				tx_bytes_sent;
+
+	__u32	 			tx_sample_len;
+	unsigned long 			tx_time_sample; /* jiffies */
+	__u32	 			tx_byte_sample;
+
+	unsigned long			tx_sample_rate;
+	unsigned long			tx_total_rate;
+
+	unsigned long			tx_first_stamp;  /* jiffies */
+	unsigned long 			tx_last_stamp;	/* jiffies */
+	unsigned long			tx_max_rate;
+	int 				tx_byte_budget;
+	int				tx_adj_budget;
+
+	__u8 flowname[GMTP_FLOWNAME_LEN];
+};
+
+static inline struct gmtp_sock *gmtp_sk(const struct sock *sk)
+{
+	return (struct gmtp_sock *)sk;
+}
+
+static inline const char *gmtp_role_name(const struct sock *sk)
+{
+	switch (gmtp_sk(sk)->role) {
+	case GMTP_ROLE_UNDEFINED: return "undefined";
+	case GMTP_ROLE_LISTEN:	  return "listen";
+	case GMTP_ROLE_SERVER:	  return "server";
+	case GMTP_ROLE_CLIENT:	  return "client";
+	case GMTP_ROLE_REPORTER:  return "client (reporter)";
+	case GMTP_ROLE_RELAY:	  return "relay";
+	}
+	return NULL;
+}
+
+static inline int gmtp_role_client(const struct sock *sk)
+{
+	return (gmtp_sk(sk)->role == GMTP_ROLE_CLIENT ||
+		gmtp_sk(sk)->role == GMTP_ROLE_REPORTER);
+}
+
+static inline struct gmtp_hdr *gmtp_hdr(const struct sk_buff *skb)
+{
+	return (struct gmtp_hdr *)skb_transport_header(skb);
+}
+
+static inline struct gmtp_hdr *gmtp_zeroed_hdr(struct sk_buff *skb, int headlen)
+{
+	skb_push(skb, headlen);
+	skb_reset_transport_header(skb);
+	return memset(skb_transport_header(skb), 0, headlen);
+}
+
+static inline struct gmtp_hdr_data *gmtp_hdr_data(const struct sk_buff *skb)
+{
+	return (struct gmtp_hdr_data *)(skb_transport_header(skb) +
+						 sizeof(struct gmtp_hdr));
+}
+
+static inline struct gmtp_hdr_ack *gmtp_hdr_ack(const struct sk_buff *skb)
+{
+	return (struct gmtp_hdr_ack *)(skb_transport_header(skb) +
+						 sizeof(struct gmtp_hdr));
+}
+
+static inline struct gmtp_hdr_register_reply *gmtp_hdr_register_reply(
+		const struct sk_buff *skb)
+{
+	return (struct gmtp_hdr_register_reply *)(skb_transport_header(skb) +
+						 sizeof(struct gmtp_hdr));
+}
+
+static inline struct gmtp_hdr_route *gmtp_hdr_route(const struct sk_buff *skb)
+{
+	return (struct gmtp_hdr_route *)(skb_transport_header(skb) +
+						 sizeof(struct gmtp_hdr));
+}
+
+static inline struct gmtp_hdr_reqnotify *gmtp_hdr_reqnotify(
+		const struct sk_buff *skb)
+{
+	return (struct gmtp_hdr_reqnotify *)(skb_transport_header(skb) +
+						 sizeof(struct gmtp_hdr));
+}
+
+static inline struct gmtp_hdr_reset *gmtp_hdr_reset(const struct sk_buff *skb)
+{
+	return (struct gmtp_hdr_reset *)(skb_transport_header(skb) +
+					 sizeof(struct gmtp_hdr));
+}
+
+static inline unsigned int __gmtp_hdr_len(const struct gmtp_hdr *gh)
+{
+	return sizeof(struct gmtp_hdr) + gmtp_packet_hdr_variable_len(gh->type);
+}
+
+static inline unsigned int gmtp_hdr_len(const struct sk_buff *skb)
+{
+	return __gmtp_hdr_len(gmtp_hdr(skb));
+}
+
+static inline __u8 *gmtp_data(const struct sk_buff *skb)
+{
+	return (__u8*) (skb_transport_header(skb) + gmtp_hdr_len(skb));
+}
+
+static inline __u32 gmtp_data_len(const struct sk_buff *skb)
+{
+	return (__u32)(skb_tail_pointer(skb) - gmtp_data(skb));
+}
+
+#endif /* LINUX_GMTP_H_ */
+
+
diff --git a/linux-3.17.1/include/linux/net.h b/linux-3.17.1/include/linux/net.h
index 17d8339..c464290 100644
--- a/linux-3.17.1/include/linux/net.h
+++ b/linux-3.17.1/include/linux/net.h
@@ -49,6 +49,7 @@ struct net;
  * @SOCK_RDM: reliably-delivered message
  * @SOCK_SEQPACKET: sequential packet socket
  * @SOCK_DCCP: Datagram Congestion Control Protocol socket
+ * @SOCK_GMTP - Global Media Transmission Protocol socket
  * @SOCK_PACKET: linux specific way of getting packets at the dev level.
  *		  For writing rarp and other similar things on the user level.
  *
@@ -63,6 +64,7 @@ enum sock_type {
 	SOCK_RDM	= 4,
 	SOCK_SEQPACKET	= 5,
 	SOCK_DCCP	= 6,
+	SOCK_GMTP 	= 7,
 	SOCK_PACKET	= 10,
 };
 
diff --git a/linux-3.17.1/include/linux/socket.h b/linux-3.17.1/include/linux/socket.h
index ec538fc..885e9ec 100644
--- a/linux-3.17.1/include/linux/socket.h
+++ b/linux-3.17.1/include/linux/socket.h
@@ -301,6 +301,7 @@ struct ucred {
 #define SOL_CAIF	278
 #define SOL_ALG		279
 #define SOL_NFC		280
+#define SOL_GMTP	281
 
 /* IPX options */
 #define IPX_TYPE	1
diff --git a/linux-3.17.1/include/net/net_namespace.h b/linux-3.17.1/include/net/net_namespace.h
index e0d6466..9b2dee9 100644
--- a/linux-3.17.1/include/net/net_namespace.h
+++ b/linux-3.17.1/include/net/net_namespace.h
@@ -19,6 +19,7 @@
 #include <net/netns/ieee802154_6lowpan.h>
 #include <net/netns/sctp.h>
 #include <net/netns/dccp.h>
+#include <net/netns/gmtp.h>
 #include <net/netns/netfilter.h>
 #include <net/netns/x_tables.h>
 #if defined(CONFIG_NF_CONNTRACK) || defined(CONFIG_NF_CONNTRACK_MODULE)
@@ -101,6 +102,9 @@ struct net {
 #if defined(CONFIG_IP_DCCP) || defined(CONFIG_IP_DCCP_MODULE)
 	struct netns_dccp	dccp;
 #endif
+//#if defined(CONFIG_IP_GMTP) || defined(CONFIG_IP_GMTP_MODULE)
+	struct netns_gmtp	gmtp;
+//#endif
 #ifdef CONFIG_NETFILTER
 	struct netns_nf		nf;
 	struct netns_xt		xt;
diff --git a/linux-3.17.1/include/net/netfilter/nf_conntrack.h b/linux-3.17.1/include/net/netfilter/nf_conntrack.h
index 37252f7..4682eaf 100644
--- a/linux-3.17.1/include/net/netfilter/nf_conntrack.h
+++ b/linux-3.17.1/include/net/netfilter/nf_conntrack.h
@@ -29,6 +29,7 @@
 /* per conntrack: protocol private data */
 union nf_conntrack_proto {
 	/* insert conntrack proto private data here */
+//	struct nf_ct_dccp gmtp; //TODO fazer o do GMTP
 	struct nf_ct_dccp dccp;
 	struct ip_ct_sctp sctp;
 	struct ip_ct_tcp tcp;
diff --git a/linux-3.17.1/include/net/netfilter/nf_conntrack_tuple.h b/linux-3.17.1/include/net/netfilter/nf_conntrack_tuple.h
index aea3f82..3d6a3be 100644
--- a/linux-3.17.1/include/net/netfilter/nf_conntrack_tuple.h
+++ b/linux-3.17.1/include/net/netfilter/nf_conntrack_tuple.h
@@ -57,6 +57,9 @@ struct nf_conntrack_tuple {
 			} dccp;
 			struct {
 				__be16 port;
+			} gmtp;
+			struct {
+				__be16 port;
 			} sctp;
 			struct {
 				__be16 key;
diff --git a/linux-3.17.1/include/net/netns/gmtp.h b/linux-3.17.1/include/net/netns/gmtp.h
new file mode 100644
index 0000000..cd2ab3b
--- /dev/null
+++ b/linux-3.17.1/include/net/netns/gmtp.h
@@ -0,0 +1,11 @@
+#ifndef __NETNS_GMTP_H__
+#define __NETNS_GMTP_H__
+
+struct sock;
+
+struct netns_gmtp {
+	struct sock *v4_ctl_sk;
+	struct sock *v6_ctl_sk;
+};
+
+#endif
diff --git a/linux-3.17.1/include/net/secure_seq.h b/linux-3.17.1/include/net/secure_seq.h
index 3f36d45..ff69164 100644
--- a/linux-3.17.1/include/net/secure_seq.h
+++ b/linux-3.17.1/include/net/secure_seq.h
@@ -12,6 +12,8 @@ __u32 secure_tcpv6_sequence_number(const __be32 *saddr, const __be32 *daddr,
 				   __be16 sport, __be16 dport);
 u64 secure_dccp_sequence_number(__be32 saddr, __be32 daddr,
 				__be16 sport, __be16 dport);
+__u32 secure_gmtp_sequence_number(__be32 saddr, __be32 daddr,
+				__be16 sport, __be16 dport);
 u64 secure_dccpv6_sequence_number(__be32 *saddr, __be32 *daddr,
 				  __be16 sport, __be16 dport);
 
diff --git a/linux-3.17.1/include/uapi/linux/gmtp.h b/linux-3.17.1/include/uapi/linux/gmtp.h
new file mode 100644
index 0000000..ae1c02c
--- /dev/null
+++ b/linux-3.17.1/include/uapi/linux/gmtp.h
@@ -0,0 +1,279 @@
+#ifndef UAPI_LINUX_GMTP_H
+#define UAPI_LINUX_GMTP_H
+
+#include <linux/types.h>
+
+#define GMTP_VERSION 1
+#define GMTP_FLOWNAME_LEN 16 /* bytes */
+#define GMTP_FLOWNAME_STR_LEN ((GMTP_FLOWNAME_LEN * 2) + 1)
+
+#define GMTP_RELAY_ID_LEN 16 /* bytes */
+
+/**
+ * MSS: 1444
+ *
+ * GMTP fixed header: 36
+ * GMTP Ack Header: 8
+ * ----------------------
+ *
+ * GMTP Register-Reply header:
+ * 1444 - 36 - 8 = 1400
+ * ---------------------
+ * Register-Reply->nrelays: 8
+ * Register-Reply->relay_list 1392
+ *
+ * 1392/20 = 69, rest: 12
+ *
+ */
+#define GMTP_MAX_RELAY_NUM 69
+
+/**
+ * GMTP packet header
+ *
+ *  0                   1                   2                   3
+ *  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+ *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+ *  | Ver |   Type  |     Header Lenght   |   Server RTT  |P|R| Res |
+ *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+ *  |          Source Port          |           Dest Port           |
+ *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+ *  |                         Sequence Number                       |
+ *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+ *  |                        Transmission Rate                      |
+ *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+ *  |            Data Flow Name - part 1 of 4 (128 bits)            .
+ *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+ *  .                 Data Flow Name - part 2 of 4                  .
+ *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+ *  .                 Data Flow Name - part 3 of 4                  .
+ *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+ *  .                 Data Flow Name - part 4 of 4                  |
+ *  +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
+ *  |                                                               |
+ *  |              Variable part (depends of 'type')                |
+ *  |             Max Lenght = (2^11-1) => 2047 bytes               |
+ *  |                                                               |
+ *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
+ *
+ * struct gmtp_hdr - generic part of GMTP packet header
+ *
+ * @version: protocol version
+ * @type: packet type
+ * @hdrlen: header length (bytes)
+ * @server_rtt: server RTT
+ * @pull:  'P' (Pull) field
+ * @relay:  'R' (Relay) field
+ * @res: reserved to future
+ * @src_port: source port
+ * @dest_port: destiny port
+ * @seq: sequence number
+ * @transm_r: transmission rate
+ * @flowname: data flow name
+ * @varpart: Variable part, depends of the 'Packet type' field
+ */
+struct gmtp_hdr {
+	__u8 version:3;
+	__u8 type:5;
+	__be16 hdrlen:11;
+	__u8 server_rtt;
+	__u8 pull:1;
+	__u8 relay:1;
+	__u8 res:3;
+	__be16 sport; //source port
+	__be16 dport; //dest port
+	__be32 seq;
+	__be32 transm_r;
+	__u8 flowname[GMTP_FLOWNAME_LEN]; //128 bits
+};
+
+/**
+ * struct gmtp_hdr_data - Data packets
+ * @tstamp: time stamp of sent data packet
+ */
+struct gmtp_hdr_data {
+	__be32 tstamp;
+};
+
+/**
+ * struct gmtp_hdr_ack - Acknowledgment packets
+ * @ackcode: One of gmtp_ack_codes
+ */
+struct gmtp_hdr_ack {
+	__u8 ackcode;
+};
+
+enum gmtp_ack_codes {
+	GMTP_ACK_NO_CODE = 0,
+	GMTP_ACK_REQUESTNOTIFY,
+	GMTP_ACK_MAX_CODES
+};
+
+/**
+ * struct gmtp_hdr_feedback - Data packets
+ * @tstamp: time stamp of received data packet
+ */
+struct gmtp_hdr_feedback {
+	__be32 pkt_tstamp;
+};
+
+/**
+ * struct gmtp_hdr_reset - Unconditionally shut down a connection
+ *
+ * @reset_code - one of %gmtp_reset_codes
+ * @reset_data - the Data of reset
+ */
+struct gmtp_hdr_reset {
+	__u8	reset_code,
+			reset_data[3];
+};
+
+/**
+ * struct gmtp_hdr_register_reply - Register reply from servers
+ *
+ * @nrelays: number of relays
+ * @relay_id: unique id of relay
+ * @relay_ip: IP address of relay
+ */
+struct gmtp_relay {
+	__u8 relay_id[GMTP_RELAY_ID_LEN];
+	__be32 relay_ip;
+};
+
+/**
+ * struct gmtp_hdr_register_reply - Register reply from servers
+ *
+ * @nrelays: 	number of relays
+ * @relay_list:	list of relays in path
+ */
+struct gmtp_hdr_register_reply {
+	__u8 nrelays;
+	struct gmtp_relay relay_list[GMTP_MAX_RELAY_NUM];
+};
+
+/**
+ * struct gmtp_hdr_route_notify - RouteNotify to servers
+ *
+ * @nrelays: number of relays
+ * @relay_list - list of relays in path
+ */
+struct gmtp_hdr_route {
+	__u8 nrelays;
+	struct gmtp_relay relay_list[GMTP_MAX_RELAY_NUM];
+};
+
+/**
+ * struct gmtp_hdr_reqnotify - RequestNotify to clients
+ *
+ * @error_code: One of gmtp_reqnotify_error_code
+ * @channel_addr: multicast channel address
+ * @mcst_port: multicast channel port
+ */
+struct gmtp_hdr_reqnotify {
+	__u8	error_code;
+	__be32	mcst_addr;
+	__be16  mcst_port; 
+};
+
+enum gmtp_reqnotify_error_code {
+	GMTP_REQNOTIFY_CODE_OK = 0,
+	GMTP_REQNOTIFY_CODE_OK_REPORTER,
+	GMTP_REQNOTIFY_CODE_WAIT,
+	GMTP_REQNOTIFY_CODE_WAIT_REPORTER,
+	GMTP_REQNOTIFY_CODE_ERROR,
+	GMTP_REQNOTIFY_MAX_CODES
+};
+
+/**
+ * see www.gmtp-protocol.org
+ */
+enum gmtp_pkt_type {
+	GMTP_PKT_REQUEST = 0,
+	GMTP_PKT_REQUESTNOTIFY,
+	GMTP_PKT_RESPONSE,
+	GMTP_PKT_REGISTER,
+	GMTP_PKT_REGISTER_REPLY,
+	GMTP_PKT_ROUTE_NOTIFY,
+	GMTP_PKT_RELAYQUERY,
+	GMTP_PKT_RELAYQUERY_REPLY,
+	GMTP_PKT_DATA,
+	GMTP_PKT_ACK,
+	GMTP_PKT_DATAACK,
+	GMTP_PKT_MEDIADESC,
+	GMTP_PKT_DATAPULL_REQUEST,
+	GMTP_PKT_DATAPULL_RESPONSE,
+	GMTP_PKT_ELECT_REQUEST,
+	GMTP_PKT_ELECT_RESPONSE,
+	GMTP_PKT_CLOSE,
+	GMTP_PKT_RESET,
+
+	GMTP_PKT_FEEDBACK,
+
+	GMTP_PKT_INVALID,
+	GMTP_PKT_MAX_STATES
+};
+
+#define GMTP_NR_PKT_TYPES GMTP_PKT_INVALID
+
+enum gmtp_reset_codes {
+	GMTP_RESET_CODE_UNSPECIFIED = 0,
+	GMTP_RESET_CODE_CLOSED,
+	GMTP_RESET_CODE_ABORTED,
+	GMTP_RESET_CODE_NO_CONNECTION,
+	GMTP_RESET_CODE_PACKET_ERROR,
+	GMTP_RESET_CODE_MANDATORY_ERROR,
+	GMTP_RESET_CODE_CONNECTION_REFUSED,
+	GMTP_RESET_CODE_BAD_FLOWNAME,
+	GMTP_RESET_CODE_TOO_BUSY,
+	GMTP_RESET_CODE_AGGRESSION_PENALTY,
+
+	GMTP_MAX_RESET_CODES		/* Leave at the end!  */
+};
+
+static inline unsigned int gmtp_packet_hdr_variable_len(const __u8 type)
+{
+	int len = 0;
+	switch(type)
+	{
+	case GMTP_PKT_DATA:
+		len = sizeof(struct gmtp_hdr_data);
+		break;
+	case GMTP_PKT_ACK:
+		len = sizeof(struct gmtp_hdr_ack);
+		break;
+	case GMTP_PKT_DATAACK:
+		len = sizeof(struct gmtp_hdr_data) + sizeof(struct gmtp_hdr_ack);
+		break;
+	case GMTP_PKT_FEEDBACK:
+		len = sizeof(struct gmtp_hdr_feedback);
+		break;
+	case GMTP_PKT_REGISTER_REPLY:
+		len = sizeof(struct gmtp_hdr_register_reply);
+		break;
+	case GMTP_PKT_ROUTE_NOTIFY:
+		len = sizeof(struct gmtp_hdr_route);
+		break;
+	case GMTP_PKT_REQUESTNOTIFY:
+		len = sizeof(struct gmtp_hdr_reqnotify);
+		break;
+	case GMTP_PKT_RESET:
+		len = sizeof(struct gmtp_hdr_reset);
+		break;
+	}
+	
+	return len;
+}
+
+/* GMTP socket options */
+enum gmtp_sockopt_codes {
+	GMTP_SOCKOPT_SERVER_RTT = 1,
+	GMTP_SOCKOPT_PULL,
+	GMTP_SOCKOPT_RELAY,
+	GMTP_SOCKOPT_MAX_TX_RATE,
+	GMTP_SOCKOPT_FLOWNAME,
+	GMTP_SOCKOPT_GET_CUR_MSS,
+	GMTP_SOCKOPT_SERVER_TIMEWAIT
+};
+
+
+
+#endif /* UAPI_LINUX_GMTP_H */
diff --git a/linux-3.17.1/include/uapi/linux/in.h b/linux-3.17.1/include/uapi/linux/in.h
index c33a65e..a535945 100644
--- a/linux-3.17.1/include/uapi/linux/in.h
+++ b/linux-3.17.1/include/uapi/linux/in.h
@@ -69,6 +69,8 @@ enum {
 #define IPPROTO_SCTP		IPPROTO_SCTP
   IPPROTO_UDPLITE = 136,	/* UDP-Lite (RFC 3828)			*/
 #define IPPROTO_UDPLITE		IPPROTO_UDPLITE
+  IPPROTO_GMTP = 254,    /* Global Media Transmission Protocol (GMTP)	*/
+#define IPPROTO_GMTP 	 IPPROTO_GMTP
   IPPROTO_RAW = 255,		/* Raw IP packets			*/
 #define IPPROTO_RAW		IPPROTO_RAW
   IPPROTO_MAX
diff --git a/linux-3.17.1/include/uapi/linux/netfilter/nf_conntrack_tuple_common.h b/linux-3.17.1/include/uapi/linux/netfilter/nf_conntrack_tuple_common.h
index 2f6bbc5..ccceca7 100644
--- a/linux-3.17.1/include/uapi/linux/netfilter/nf_conntrack_tuple_common.h
+++ b/linux-3.17.1/include/uapi/linux/netfilter/nf_conntrack_tuple_common.h
@@ -28,6 +28,9 @@ union nf_conntrack_man_proto {
 	} dccp;
 	struct {
 		__be16 port;
+	} gmtp;
+	struct {
+		__be16 port;
 	} sctp;
 	struct {
 		__be16 key;	/* GRE key is 32bit, PPtP only uses 16bit */
diff --git a/linux-3.17.1/install.sh b/linux-3.17.1/install.sh
new file mode 100755
index 0000000..137fd53
--- /dev/null
+++ b/linux-3.17.1/install.sh
@@ -0,0 +1,5 @@
+#!/bin/bash
+cp arch/x86/boot/bzImage /boot/vmlinuz-3.17.1-min
+make modules_install
+lilo 
+#(alterar /etc/lilo.conf)
diff --git a/linux-3.17.1/net/Kconfig b/linux-3.17.1/net/Kconfig
index 4051fdf..e14eb8c 100644
--- a/linux-3.17.1/net/Kconfig
+++ b/linux-3.17.1/net/Kconfig
@@ -201,6 +201,7 @@ source "net/dccp/Kconfig"
 source "net/sctp/Kconfig"
 source "net/rds/Kconfig"
 source "net/tipc/Kconfig"
+source "net/gmtp/Kconfig"
 source "net/atm/Kconfig"
 source "net/l2tp/Kconfig"
 source "net/802/Kconfig"
diff --git a/linux-3.17.1/net/core/secure_seq.c b/linux-3.17.1/net/core/secure_seq.c
index ba71212..f23a88b 100644
--- a/linux-3.17.1/net/core/secure_seq.c
+++ b/linux-3.17.1/net/core/secure_seq.c
@@ -171,3 +171,22 @@ u64 secure_dccpv6_sequence_number(__be32 *saddr, __be32 *daddr,
 EXPORT_SYMBOL(secure_dccpv6_sequence_number);
 #endif
 #endif
+
+/*#if IS_ENABLED(CONFIG_IP_GMTP)*/
+__u32 secure_gmtp_sequence_number(__be32 saddr, __be32 daddr,
+				 __be16 sport, __be16 dport)
+{
+	u32 hash[MD5_DIGEST_WORDS];
+
+	net_secret_init();
+	hash[0] = (__force u32)saddr;
+	hash[1] = (__force u32)daddr;
+	hash[2] = ((__force u16)sport << 16) + (__force u16)dport;
+	hash[3] = net_secret[15];
+
+	md5_transform(hash, net_secret);
+
+	return seq_scale(hash[0]);
+}
+EXPORT_SYMBOL(secure_gmtp_sequence_number);
+/*#endif */
diff --git a/linux-3.17.1/net/core/sock.c b/linux-3.17.1/net/core/sock.c
index 9c3f823..f326b03 100644
--- a/linux-3.17.1/net/core/sock.c
+++ b/linux-3.17.1/net/core/sock.c
@@ -495,10 +495,12 @@ int sk_receive_skb(struct sock *sk, struct sk_buff *skb, const int nested)
 		atomic_inc(&sk->sk_drops);
 		goto discard_and_relse;
 	}
+
 	if (nested)
 		bh_lock_sock_nested(sk);
 	else
 		bh_lock_sock(sk);
+
 	if (!sock_owned_by_user(sk)) {
 		/*
 		 * trylock + unlock semantics:
diff --git a/linux-3.17.1/net/gmtp-intra/.gitignore b/linux-3.17.1/net/gmtp-intra/.gitignore
new file mode 100644
index 0000000..d027396
--- /dev/null
+++ b/linux-3.17.1/net/gmtp-intra/.gitignore
@@ -0,0 +1 @@
+/.settings/
diff --git a/linux-3.17.1/net/gmtp-intra/Makefile b/linux-3.17.1/net/gmtp-intra/Makefile
new file mode 100644
index 0000000..233b0ef
--- /dev/null
+++ b/linux-3.17.1/net/gmtp-intra/Makefile
@@ -0,0 +1,27 @@
+PWD := $(shell pwd)
+KERNEL:= /lib/modules/`uname -r`/build
+KBUILD_EXTRA_SYMBOLS := $(PWD)/Module.symvers
+
+obj-m += gmtp.o gmtp_intra.o
+
+gmtp-y = ../gmtp/gmtp.o
+gmtp_intra-y := gmtp-ucc.o mcc-intra.o hash-intra.o output.o input.o gmtp-intra.o
+
+all:
+	$(MAKE) -C $(KERNEL) M=$(PWD) modules
+	/sbin/modinfo gmtp_intra.ko
+	
+install:
+	@echo 'Installing gmtp_intra.ko...'
+	/sbin/insmod gmtp_intra.ko
+	@echo '-------------------------------'
+	/sbin/lsmod
+	
+uninstall:
+	@echo 'Uninstalling gmtp_intra...'
+	/sbin/rmmod -f gmtp_intra
+	@echo '-------------------------------'
+	/sbin/lsmod
+
+clean:
+	make -C $(KERNEL) M=$(PWD) clean
diff --git a/linux-3.17.1/net/gmtp-intra/gmtp-intra.c b/linux-3.17.1/net/gmtp-intra/gmtp-intra.c
new file mode 100644
index 0000000..2d2503e
--- /dev/null
+++ b/linux-3.17.1/net/gmtp-intra/gmtp-intra.c
@@ -0,0 +1,445 @@
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/netfilter.h>
+#include <linux/netfilter_ipv4.h>
+#include <linux/skbuff.h>
+#include <linux/ip.h>
+#include <linux/timer.h>
+#include <linux/inet.h>
+#include <linux/dirent.h>
+#include <linux/inetdevice.h>
+#include <linux/crypto.h>
+#include <linux/err.h>
+#include <linux/scatterlist.h>
+#include <linux/if.h>
+#include <linux/ioctl.h>
+
+#include <net/sock.h>
+#include <net/sch_generic.h>
+
+#include <uapi/linux/gen_stats.h>
+#include <uapi/linux/types.h>
+
+#include <uapi/linux/gmtp.h>
+#include <linux/gmtp.h>
+#include "../gmtp/gmtp.h"
+#include "gmtp-intra.h"
+ 
+#define SHA1_LENGTH    16
+#define GET_MAC_ADDRESS  0
+#define GET_IP_ADDRESS   1
+
+extern const char *gmtp_packet_name(const int);
+extern const char *gmtp_state_name(const int);
+extern void flowname_str(__u8* str, const __u8* flowname);
+
+static struct nf_hook_ops nfho_in;
+static struct nf_hook_ops nfho_out;
+
+struct gmtp_intra gmtp;
+ 
+int bytes_added(int sprintf_return)
+{
+    return (sprintf_return > 0)? sprintf_return : 0;
+}
+
+void flowname_strn(__u8* str, const __u8 *buffer, int length)
+{
+	
+    int i;
+	for(i = 0; i < length; ++i){
+		sprintf(&str[i*2], "%02x", buffer[i]);
+        //printk("testando = %02x\n", buffer[i]);
+    }
+}
+
+__u8 gmtp_interfaces_md5(unsigned char *buf)
+{
+    struct scatterlist sg;
+    struct crypto_hash *tfm;
+    struct hash_desc desc;
+    unsigned char output[SHA1_LENGTH];
+    //unsigned char buf[] = "README";
+    size_t buf_size = sizeof(buf) - 1;
+    int i;
+    
+    printk(KERN_INFO "sha1: %s\n\n\n\n\n", __FUNCTION__);
+      
+    printk(KERN_INFO "bUFFER = %s\n", buf);
+
+    tfm = crypto_alloc_hash("md5", 0, CRYPTO_ALG_ASYNC);
+    if (IS_ERR(tfm)) {
+        printk(KERN_ERR"allocation failed\n");
+        return 0;
+    }
+ 
+    desc.tfm = tfm;
+    desc.flags = 0;
+ 
+    crypto_hash_init(&desc);
+       
+    sg_init_one(&sg, buf, buf_size);
+    crypto_hash_update(&desc, &sg, buf_size);
+    crypto_hash_final(&desc, output);
+ 
+    printk(KERN_INFO"resultado ------------------------- %d \n",buf_size);
+
+    for (i = 0; i < SHA1_LENGTH; i++) {
+        printk(KERN_INFO "%x", output[i]);
+    }
+    printk(KERN_INFO "\n\n\n\n\n---------------\n");
+
+    __u8 md5[21];
+    flowname_strn(md5, output, SHA1_LENGTH);
+    printk("saida md5 = %s\n",md5);
+ 
+    crypto_free_hash(tfm);
+ 
+    return md5;
+}
+
+void gmtp_intra_relay_get_devices (int option)
+{
+    /*int  option = GET_IP_ADDRESS;*/
+    /*int  option = GET_MAC_ADDRESS;*/
+
+    printk(KERN_INFO"\n\n\n");
+    
+    struct socket *sock = NULL;
+    struct net_device *dev = NULL;
+
+    struct in_device *in_dev;
+    struct in_ifaddr *if_info;
+
+    struct net *net;
+    int i, j, retval, length = 0;
+    char mac_address[6];
+    char *ip_address;
+    char buffer[50];
+    unsigned int hex = 0XABC123FF;
+    __u8 *str[30];
+
+    retval = sock_create(AF_INET, SOCK_STREAM, 0, &sock);
+    net = sock_net (sock->sk);
+            
+            for(i = 2; (dev = dev_get_by_index_rcu(net,i)) != NULL; ++i){
+            
+                if(option == GET_MAC_ADDRESS){
+   
+                    memcpy(&mac_address, dev->dev_addr, 6);
+                    printk(KERN_DEBUG"SIZE of dev_addr = %d\n",
+                                        sizeof(dev->dev_addr));
+                    printk(KERN_DEBUG"Interface[%d] MAC = %x:%x:%x:%x:%x:%x\n",i,
+                              mac_address[0],mac_address[1],
+                              mac_address[2],mac_address[3], 
+                              mac_address[4],mac_address[5]);
+                    for(j = 0; j < 6; ++j){
+
+                        printk(KERN_DEBUG"testando boladao = %x \n",mac_address[j]);
+                                        
+                    }
+                    flowname_strn(&str,mac_address,6);
+                    printk(KERN_DEBUG"[%d]\ntestando string = %s \n",i,str);
+                    length += bytes_added(sprintf(buffer+length, str));
+
+                }
+
+                /** TODO Option == IP dá merda... */
+                if(option ==  GET_IP_ADDRESS){    
+                    
+                    in_dev = (struct in_device * )dev->ip_ptr;
+
+                    if(in_dev == NULL)
+                        printk(KERN_DEBUG"in_dev == NULL\n");
+
+                    if_info = in_dev->ifa_list;
+                    for(;if_info;if_info = if_info->ifa_next){
+                        if(if_info != NULL){
+                            printk(KERN_DEBUG"if_info->ifa_address=%pI4\n", &if_info->ifa_address);
+                            break;    
+                        }
+                    }   
+
+                }
+                if(length != 0)
+                    printk(KERN_DEBUG"Concatenado = %s \n\n",buffer);
+
+   
+            }
+
+    sock_release(sock);
+    return buffer;
+}
+/*{
+    printk(KERN_INFO"\n\n\n");
+    
+    struct socket *sock = NULL;
+    struct net_device *dev = NULL;
+
+    struct in_device *in_dev;
+    struct in_ifaddr *if_info;
+
+    struct net *net;
+    int i, retval;
+    char mac_address[6];
+    char *ip_address;
+    
+    retval = sock_create(AF_INET, SOCK_STREAM, 0, &sock);
+    net = sock_net (sock->sk);
+    
+            for(i = 2; (dev = dev_get_by_index_rcu(net,i)) != NULL; ++i){
+            
+                if(option == GET_MAC_ADDRESS){
+   
+                    memcpy(&mac_address, dev->dev_addr, 6);
+                    printk(KERN_DEBUG"size of dev_addr = %d\n",sizeof(dev->dev_addr));
+                    printk(KERN_DEBUG"Interface[%d] MAC = %x:%x:%x:%x:%x:%x\n",i,
+                              mac_address[0],mac_address[1],
+                              mac_address[2],mac_address[3], 
+                              mac_address[4],mac_address[5]);
+                }
+
+                if(option ==  GET_IP_ADDRESS){    
+                    
+                    in_dev = (struct in_device * )dev->ip_ptr;
+
+                    if(in_dev == NULL)
+                        printk("in_dev == NULL\n");
+
+                    if_info = in_dev->ifa_list;
+                    for(;if_info;if_info = if_info->ifa_next){
+                        if(if_info != NULL){
+                            printk("if_info->ifa_address=%032x\n",if_info->ifa_address);
+                            break;    
+                        }
+                    }   
+
+                }   
+            }
+    
+    sock_release(sock);
+
+}*/
+
+const __u8 *gmtp_intra_relay_id()
+{
+	gmtp_intra_relay_get_devices(GET_MAC_ADDRESS);
+
+    /*just to keep the same return of previous implementation*/
+	return "777777777777777777777";
+
+}
+__be32 gmtp_intra_relay_ip()
+{
+	gmtp_intra_relay_get_devices(GET_IP_ADDRESS);
+   
+    /*just to keep the same return of previous implementation*/
+	unsigned char *ip = "\xc0\xa8\x02\x01"; /* 192.168.2.1 */
+	return *(unsigned int *)ip;
+
+}
+
+__be32 get_mcst_v4_addr(void)
+{
+	__be32 mcst_addr;
+	unsigned char *base_channel = "\xe0\xc0\x00\x00"; /* 224.192.0.0 */
+	unsigned char *channel = kmalloc(4 * sizeof(unsigned char), GFP_KERNEL);
+
+	gmtp_print_function();
+
+	if(channel == NULL) {
+		gmtp_print_error("Cannot assign requested multicast address");
+		return -EADDRNOTAVAIL;
+	}
+
+	memcpy(channel, base_channel, 4 * sizeof(unsigned char));
+
+	channel[3] += gmtp.mcst[3]++;
+
+	/**
+	 * From: base_channel (224.192. 0 . 0 )
+	 * to:   max_channel  (239.255.255.255)
+	 *                     L0  L1  L2  L3
+	 */
+	if(gmtp.mcst[3] > 255) {  /* L3 starts with 1 */
+		gmtp.mcst[3] = 0;
+		gmtp.mcst[2]++;
+	}
+	if(gmtp.mcst[2] > 255) {
+		gmtp.mcst[2] = 0;
+		gmtp.mcst[1]++;
+	}
+	if(gmtp.mcst[1] > 63) { /* 255 - 192 */
+		gmtp.mcst[1] = 0;
+		gmtp.mcst[0]++;
+	}
+	if(gmtp.mcst[0] > 15) {  /* 239 - 224 */
+		gmtp_print_error("Cannot assign requested multicast address");
+		return -EADDRNOTAVAIL;
+	}
+	channel[2] += gmtp.mcst[2];
+	channel[1] += gmtp.mcst[1];
+	channel[0] += gmtp.mcst[0];
+
+	mcst_addr = *(unsigned int *)channel;
+	gmtp_print_debug("Channel addr: %pI4", &mcst_addr);
+	return mcst_addr;
+}
+EXPORT_SYMBOL_GPL(get_mcst_v4_addr);
+
+void gmtp_buffer_add(struct gmtp_flow_info *info, struct sk_buff *newsk)
+{
+	skb_queue_tail(info->buffer, skb_copy(newsk, GFP_ATOMIC));
+	info->buffer_size += newsk->len;
+}
+
+struct sk_buff *gmtp_buffer_dequeue(struct gmtp_flow_info *info)
+{
+	struct sk_buff *skb = skb_dequeue(info->buffer);
+	if(skb != NULL)
+		info->buffer_size -= skb->len;
+	return skb;
+}
+
+struct gmtp_flow_info *gmtp_intra_get_info(
+		struct gmtp_intra_hashtable *hashtable, const __u8 *media)
+{
+	struct gmtp_relay_entry *entry =
+			gmtp_intra_lookup_media(gmtp.hashtable, media);
+
+	if(entry != NULL)
+		return entry->info;
+
+	return NULL;
+}
+
+unsigned int hook_func_in(unsigned int hooknum, struct sk_buff *skb,
+		const struct net_device *in, const struct net_device *out,
+		int (*okfn)(struct sk_buff *))
+{
+	int ret = NF_ACCEPT;
+	struct iphdr *iph = ip_hdr(skb);
+
+	if(in == NULL)
+		goto exit;
+
+	if(iph->protocol == IPPROTO_GMTP) {
+
+		struct gmtp_hdr *gh = gmtp_hdr(skb);
+
+		if(gh->type != GMTP_PKT_DATA && gh->type != GMTP_PKT_FEEDBACK) {
+			gmtp_print_debug("GMTP packet: %s (%d)",
+					gmtp_packet_name(gh->type), gh->type);
+			print_packet(skb, true);
+			print_gmtp_packet(iph, gh);
+		}
+
+		switch(gh->type) {
+		case GMTP_PKT_REQUEST:
+			ret = gmtp_intra_request_rcv(skb);
+			break;
+		case GMTP_PKT_REGISTER_REPLY:
+			ret = gmtp_intra_register_reply_rcv(skb);
+			break;
+		case GMTP_PKT_ACK:
+			ret = gmtp_intra_ack_rcv(skb);
+			break;
+		case GMTP_PKT_DATA:
+			ret = gmtp_intra_data_rcv(skb);
+			break;
+		case GMTP_PKT_FEEDBACK:
+			ret = gmtp_intra_feedback_rcv(skb);
+			break;
+		case GMTP_PKT_CLOSE:
+			ret = gmtp_intra_close_rcv(skb);
+			break;
+		}
+
+	}
+
+exit:
+	return ret;
+}
+
+unsigned int hook_func_out(unsigned int hooknum, struct sk_buff *skb,
+		const struct net_device *in, const struct net_device *out,
+		int (*okfn)(struct sk_buff *))
+{
+	int ret = NF_ACCEPT;
+	struct iphdr *iph = ip_hdr(skb);
+	struct gmtp_hdr *gh;
+
+	if(out == NULL)
+		goto exit;
+
+	if(iph->protocol == IPPROTO_GMTP) {
+
+		gh = gmtp_hdr(skb);
+		if(gh->type != GMTP_PKT_DATA) {
+			gmtp_print_debug("GMTP packet: %s (%d)",
+					gmtp_packet_name(gh->type), gh->type);
+			print_packet(skb, false);
+			print_gmtp_packet(iph, gh);
+		}
+
+		switch(gh->type) {
+		case GMTP_PKT_DATA:
+			ret = gmtp_intra_data_out(skb);
+			break;
+		case GMTP_PKT_CLOSE:
+			ret = gmtp_intra_close_out(skb);
+			break;
+		}
+	}
+
+exit:
+	return ret;
+}
+
+int init_module()
+{
+	int ret = 0;
+	gmtp_pr_func();
+	gmtp_print_debug("Starting GMTP-Intra");
+
+	gmtp.total_rx = 1;
+	memset(&gmtp.mcst, 0, 4*sizeof(unsigned char));
+
+	gmtp.hashtable = gmtp_intra_create_hashtable(64);
+	if(gmtp.hashtable == NULL) {
+		gmtp_print_error("Cannot create hashtable...");
+		ret = -ENOMEM;
+		goto out;
+	}
+
+	nfho_in.hook = hook_func_in;
+	nfho_in.hooknum = NF_INET_PRE_ROUTING;
+	nfho_in.pf = PF_INET;
+	nfho_in.priority = NF_IP_PRI_FIRST;
+	nf_register_hook(&nfho_in);
+
+	nfho_out.hook = hook_func_out;
+	nfho_out.hooknum = NF_INET_POST_ROUTING;
+	nfho_out.pf = PF_INET;
+	nfho_out.priority = NF_IP_PRI_FIRST;
+	nf_register_hook(&nfho_out);
+
+out:
+	return ret;
+}
+
+void cleanup_module()
+{
+	gmtp_pr_func();
+	gmtp_print_debug("Finishing GMTP-Intra");
+
+	kfree_gmtp_intra_hashtable(gmtp.hashtable);
+
+	nf_unregister_hook(&nfho_in);
+	nf_unregister_hook(&nfho_out);
+}
+
+MODULE_LICENSE("GPL");
+MODULE_AUTHOR("Mário André Menezes <mariomenezescosta@gmail.com>");
+MODULE_AUTHOR("Wendell Silva Soares <wss@ic.ufal.br>");
+MODULE_DESCRIPTION("GMTP - Global Media Transmission Protocol");
diff --git a/linux-3.17.1/net/gmtp-intra/gmtp-intra.h b/linux-3.17.1/net/gmtp-intra/gmtp-intra.h
new file mode 100644
index 0000000..5217a44
--- /dev/null
+++ b/linux-3.17.1/net/gmtp-intra/gmtp-intra.h
@@ -0,0 +1,160 @@
+ /* gmtp-intra.h
+ *
+ *  Created on: 17/02/2015
+ *      Author: wendell
+ */
+
+#ifndef GMTP_INTRA_H_
+#define GMTP_INTRA_H_
+
+#include <linux/types.h>
+#include <linux/skbuff.h>
+#include <linux/spinlock.h>
+#include <uapi/linux/ip.h>
+
+#include <linux/gmtp.h>
+#include <uapi/linux/gmtp.h>
+#include "../gmtp/gmtp.h"
+
+#include "hash-intra.h"
+
+#define H_USER 1024
+
+/**
+ * TODO Negotiate buffer size with server
+ * struct gmtp_intra - GMTP-Intra state variables
+ *
+ * @total_bytes_rx: total data bytes received
+ * @total_rx: Current RX rate
+ * @mcst: control of granted multicast addresses
+ * @nclients: number of connected clients
+ *
+ * @hashtable: GMTP-Intra relay table
+ */
+struct gmtp_intra {
+	unsigned int 		total_bytes_rx;
+	unsigned int 		total_rx;
+	unsigned char		mcst[4];
+
+	struct gmtp_intra_hashtable *hashtable;
+};
+
+extern struct gmtp_intra gmtp;
+
+/** gmtp-intra.c */
+__be32 get_mcst_v4_addr(void);
+void gmtp_buffer_add(struct gmtp_flow_info *info, struct sk_buff *newsk);
+struct sk_buff *gmtp_buffer_dequeue(struct gmtp_flow_info *info);
+struct gmtp_flow_info *gmtp_intra_get_info(
+		struct gmtp_intra_hashtable *hashtable, const __u8 *media);
+
+/** input.c */
+int gmtp_intra_request_rcv(struct sk_buff *skb);
+int gmtp_intra_register_reply_rcv(struct sk_buff *skb);
+int gmtp_intra_ack_rcv(struct sk_buff *skb);
+int gmtp_intra_data_rcv(struct sk_buff *skb);
+int gmtp_intra_feedback_rcv(struct sk_buff *skb);
+int gmtp_intra_close_rcv(struct sk_buff *skb);
+
+void gmtp_intra_relay_get_devices (int option);
+const __u8 *gmtp_intra_relay_id (void);
+__be32 gmtp_intra_relay_ip (void);
+int bytes_added(int sprintf_return);
+void flowname_strn(__u8* str, const __u8 *buffer, int length);
+__u8 gmtp_interfaces_md5(unsigned char *buf);
+
+/** Output.c */
+void gmtp_intra_add_relayid(struct sk_buff *skb);
+struct gmtp_hdr *gmtp_intra_make_route_hdr(struct sk_buff *skb);
+struct gmtp_hdr *gmtp_intra_make_request_notify_hdr(struct sk_buff *skb,
+		struct gmtp_relay_entry *media_info, __be16 new_sport,
+		__be16 new_dport, __u8 error_code);
+int gmtp_intra_make_request_notify(struct sk_buff *skb, __be32 new_saddr,
+		__be16 new_sport, __be32 new_daddr, __be16 new_dport,
+		__u8 error_code);
+
+void gmtp_intra_build_and_send_pkt(struct sk_buff *skb_src, __be32 saddr,
+		__be32 daddr, struct gmtp_hdr *gh_ref, bool backward);
+void gmtp_intra_build_and_send_skb(struct sk_buff *skb);
+
+int gmtp_intra_data_out(struct sk_buff *skb);
+int gmtp_intra_close_out(struct sk_buff *skb);
+
+/** gmtp-ucc. */
+unsigned int gmtp_rtt_average(void);
+unsigned int gmtp_rx_rate(void);
+unsigned int gmtp_relay_queue_size(void);
+unsigned int gmtp_get_current_rx_rate(void);
+void gmtp_update_rx_rate(unsigned int h_user);
+
+/**
+ * A very ugly delayer, to GMTP-Intra...
+ *
+ * If we use schedule(), we get this error:  'BUG: scheduling while atomic'
+ *
+ * We cannot use schedule(), because hook functions are atomic,
+ * and sleeping in kernel code is not allowed in atomic context.
+ *
+ * Calling cond_resched(), kernel call schedule() where it's possible...
+ */
+static inline void gmtp_intra_wait_us(s64 delay)
+{
+	ktime_t timeout = ktime_add_us(ktime_get_real(), delay);
+	while(ktime_before(ktime_get_real(), timeout)) {
+		cond_resched(); /* Do nothing, just wait... */
+	}
+}
+
+
+
+/*
+ * Print IP packet basic information
+ */
+static inline void print_packet(struct sk_buff *skb, bool in)
+{
+	struct iphdr *iph = ip_hdr(skb);
+	const char *type = in ? "IN" : "OUT";
+	pr_info("%s (%s): Src=%pI4 | Dst=%pI4 | Proto: %d | Len: %d bytes\n",
+			type, skb->dev->name,
+			&iph->saddr, &iph->daddr,
+			iph->protocol,
+			ntohs(iph->tot_len));
+}
+
+/*
+ * Print GMTP packet basic information
+ */
+static inline void print_gmtp_packet(struct iphdr *iph, struct gmtp_hdr *gh)
+{
+	__u8 flowname[GMTP_FLOWNAME_STR_LEN];
+	flowname_str(flowname, gh->flowname);
+	pr_info("%s (%d) src=%pI4@%-5d dst=%pI4@%-5d seq=%u rtt=%u ms "
+			" tx=%u flow=%s\n",
+				gmtp_packet_name(gh->type),
+				gh->type,
+				&iph->saddr, ntohs(gh->sport),
+				&iph->daddr, ntohs(gh->dport),
+				gh->seq,
+				gh->server_rtt,
+				gh->transm_r,
+				flowname);
+}
+
+/*
+ * Print Data of GMTP-Data packets
+ */
+static inline void print_gmtp_data(struct sk_buff *skb, char* label)
+{
+	__u8* data = gmtp_data(skb);
+	__u32 data_len = gmtp_data_len(skb);
+
+	if(data_len > 0) {
+		char *lb = label != NULL ? label : "Data";
+		unsigned char *data_str = kmalloc(data_len+1, GFP_KERNEL);
+		memcpy(data_str, data, data_len);
+		data_str[data_len] = '\0';
+		pr_info("%s: %s\n", lb, data_str);
+	}
+}
+
+#endif /* GMTP_INTRA_H_ */
diff --git a/linux-3.17.1/net/gmtp-intra/gmtp-ucc.c b/linux-3.17.1/net/gmtp-intra/gmtp-ucc.c
new file mode 100644
index 0000000..ea42e92
--- /dev/null
+++ b/linux-3.17.1/net/gmtp-intra/gmtp-ucc.c
@@ -0,0 +1,97 @@
+/*
+ * gmtp-ucc.c
+ *
+ *  Created on: 08/03/2015
+ *      Author: wendell
+ */
+
+#include <linux/kernel.h>
+#include <linux/module.h>
+
+#include "gmtp-intra.h"
+
+#define ALPHA(X) (((X)*3)/10)  /* X*0.3 */
+#define BETA(X)  (((X)*6)/10)  /* X*0.6 */
+#define GHAMA(X) (((X)*10)/10) /* X*1.0 */
+#define THETA(X) (((X)*2)/100) /* X*0.02 */
+
+#define MOD(X)   ((X > 0) ? (X) : -(X))
+
+#define C 1250 /* bytes/ms => 10 Mbit/s */
+
+extern struct gmtp_intra gmtp;
+
+unsigned int gmtp_rtt_average()
+{
+	return 1;
+}
+
+unsigned int gmtp_rx_rate()
+{
+	return 0;
+}
+
+unsigned int gmtp_relay_queue_size()
+{
+	return gmtp.total_bytes_rx;
+}
+
+/**
+ * Get the last calculated TX
+ */
+unsigned int gmtp_get_current_rx_rate()
+{
+	return gmtp.total_rx;
+}
+EXPORT_SYMBOL_GPL(gmtp_get_current_rx_rate);
+
+/**
+ * Get TX rate, via RCP
+ */
+void gmtp_update_rx_rate(unsigned int  h_user)
+{
+	unsigned int r = 0;
+	unsigned int H, h, y, q;
+	unsigned int r_prev = gmtp_get_current_rx_rate();
+	int up, delta;
+
+	gmtp_pr_func();
+
+	gmtp_print_debug("r_prev: %d", r_prev);
+
+	h = gmtp_rtt_average();
+	y = gmtp_rx_rate();
+	q = gmtp_relay_queue_size();
+
+	gmtp_print_debug("h_user: %u", h_user);
+	gmtp_print_debug("h0: %u", h);
+	gmtp_print_debug("y(t): %u", y);
+	gmtp_print_debug("q(t): %u", q);
+
+	H = (h < h_user) ? h : h_user;
+
+	up = (H/h) * (ALPHA(GHAMA(C)-y) - BETA(q/h));
+
+	gmtp_print_debug("H/h0: %u", (H/h));
+	gmtp_print_debug("ALPHA(GHAMA(C)-y): %u", ALPHA(GHAMA(C)-y));
+	gmtp_print_debug("BETA(q/h): %u", BETA(q/h));
+	gmtp_print_debug("ALPHA(GHAMA(C)-y) - BETA(q/h): %d", ALPHA(GHAMA(C)-y) - BETA(q/h));
+
+	gmtp_print_debug("up: %d", up);
+
+	delta = ((int)(r_prev) * up)/GHAMA(C);
+
+	gmtp_print_debug("delta = ((r_prev * up)/GHAMA(C)): %d", delta);
+
+	/**
+	 * r = r_prev * (1 + up/GHAMA(C)) =>
+	 * r = r_prev + r_prev * up/GHAMA(C) =>
+	 * r = r_prev + delta
+	 */
+	r = (int)(r_prev) + delta;
+
+	gmtp_print_debug("new_r: %d", r);
+	gmtp.total_rx = r;
+}
+EXPORT_SYMBOL_GPL(gmtp_update_rx_rate);
+
diff --git a/linux-3.17.1/net/gmtp-intra/hash-intra.c b/linux-3.17.1/net/gmtp-intra/hash-intra.c
new file mode 100644
index 0000000..baa0919
--- /dev/null
+++ b/linux-3.17.1/net/gmtp-intra/hash-intra.c
@@ -0,0 +1,239 @@
+/*
+ * hash-intra.c
+ *
+ *  Created on: 27/02/2015
+ *      Author: wendell
+ */
+
+#include <linux/kernel.h>
+#include <linux/slab.h>
+#include <linux/string.h>
+#include <linux/list.h>
+
+#include "gmtp-intra.h"
+#include "hash-intra.h"
+
+struct gmtp_intra_hashtable *gmtp_intra_create_hashtable(unsigned int size)
+{
+	int i;
+	struct gmtp_intra_hashtable *ht;
+
+	gmtp_pr_func();
+	gmtp_pr_info("Size of gmtp_intra_hashtable = %d", size);
+
+	if(size < 1)
+		return NULL;
+
+	ht = kmalloc(sizeof(struct gmtp_intra_hashtable), GFP_KERNEL);
+	if(ht == NULL)
+		return NULL;
+
+	ht->table = kmalloc(sizeof(struct gmtp_relay_entry*) *size, GFP_KERNEL);
+	if(ht->table == NULL)
+		return NULL;
+
+	for(i = 0; i < size; ++i)
+		ht->table[i] = NULL;
+
+	ht->size = size;
+
+	return ht;
+}
+
+unsigned int gmtp_intra_hash(struct gmtp_intra_hashtable *hashtable,
+		const __u8 *flowname)
+{
+	unsigned int hashval;
+	int i;
+
+	if(hashtable == NULL)
+		return -EINVAL;
+
+	if(flowname == NULL)
+		return -ENOKEY;
+
+	hashval = 0;
+
+	for(i=0; i<GMTP_FLOWNAME_LEN; ++i)
+		hashval = flowname[i] + (hashval << 5) - hashval;
+
+	return hashval % hashtable->size;
+}
+
+struct gmtp_relay_entry *gmtp_intra_lookup_media(
+		struct gmtp_intra_hashtable *hashtable, const __u8 *media)
+{
+	struct gmtp_relay_entry *entry;
+	unsigned int hashval;
+
+	hashval = gmtp_intra_hash(hashtable, media);
+
+	/* Error */
+	if(hashval < 0)
+		return NULL;
+
+	for(entry = hashtable->table[hashval]; entry != NULL;
+			entry = entry->next)
+		if(memcmp(media, entry->flowname, GMTP_FLOWNAME_LEN) == 0)
+			return entry;
+
+	return NULL;
+}
+
+struct gmtp_flow_info *__gmtp_intra_build_info(void)
+{
+	struct gmtp_flow_info *info = kmalloc(sizeof(struct gmtp_flow_info),
+			GFP_KERNEL);
+	if(info == NULL)
+		goto out;
+
+	info->iseq = 0;
+	info->seq = 0;
+	info->nbytes = 0;
+	info->data_pkt_tx = 0;
+
+	info->clients = kmalloc(sizeof(struct gmtp_client), GFP_KERNEL);
+	INIT_LIST_HEAD(&info->clients->list);
+	info->nclients = 0;
+
+	info->buffer = kmalloc(sizeof(struct sk_buff_head), GFP_KERNEL);
+	skb_queue_head_init(info->buffer);
+	info->buffer_size = 0;
+	gmtp_set_buffer_limits(info, 1);
+	info->current_tx = 0; /* unlimited tx */
+
+out:
+	return info;
+}
+
+struct gmtp_flow_info *gmtp_intra_build_info(unsigned int bmin)
+{
+	struct gmtp_flow_info *info = __gmtp_intra_build_info();
+
+	if(info != NULL)
+		gmtp_set_buffer_limits(info, bmin);
+
+	return info;
+}
+
+int gmtp_intra_add_entry(struct gmtp_intra_hashtable *hashtable, __u8 *flowname,
+		__be32 server_addr, __be32 *relay, __be16 media_port,
+		__be32 channel_addr, __be16 channel_port)
+{
+	struct gmtp_relay_entry *new_entry;
+	struct gmtp_relay_entry *current_entry;
+	unsigned int hashval;
+
+	gmtp_print_function();
+
+	hashval = gmtp_intra_hash(hashtable, flowname);
+
+	/* Error */
+	if(hashval < 0)
+		return hashval;
+
+	new_entry = kmalloc(sizeof(struct gmtp_relay_entry), GFP_KERNEL);
+	if(new_entry == NULL)
+		return 1;
+
+	current_entry = gmtp_intra_lookup_media(hashtable, flowname);
+	if(current_entry != NULL)
+		return 2; /* TODO Media already being transmitted by other
+								server? */
+
+	new_entry->info = gmtp_intra_build_info(5);
+	if(new_entry->info == NULL)
+		return 1;
+
+	memcpy(new_entry->flowname, flowname, GMTP_FLOWNAME_LEN);
+	new_entry->server_addr = server_addr;
+	new_entry->relay = relay; /* FIXME Add list */
+	new_entry->media_port = media_port;
+	new_entry->channel_addr = channel_addr;
+	new_entry->channel_port = channel_port;
+	new_entry->state = GMTP_INTRA_WAITING_REGISTER_REPLY;
+	new_entry->next = hashtable->table[hashval];
+
+	hashtable->table[hashval] = new_entry;
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(gmtp_intra_add_entry);
+
+void gmtp_intra_del_clients(struct gmtp_relay_entry *entry)
+{
+	struct gmtp_client *client, *temp;
+	gmtp_pr_func();
+	list_for_each_entry_safe(client, temp,
+			&(entry->info->clients->list), list)
+	{
+		list_del(&client->list);
+		kfree(client);
+	}
+}
+
+struct gmtp_relay_entry *gmtp_intra_del_entry(
+		struct gmtp_intra_hashtable *hashtable, __u8 *media)
+{
+	struct gmtp_relay_entry *previous_entry;
+	struct gmtp_relay_entry *current_entry;
+	int hashval;
+
+	gmtp_print_function();
+
+	hashval = gmtp_intra_hash(hashtable, media);
+	if(hashval < 0)
+		return NULL;
+
+	previous_entry = NULL;
+	current_entry = hashtable->table[hashval];
+
+	while(current_entry != NULL
+			&& memcmp(media, current_entry->flowname,
+					GMTP_FLOWNAME_LEN) != 0) {
+		previous_entry = current_entry;
+		current_entry = current_entry->next;
+	}
+
+	if(current_entry == NULL) {
+		gmtp_print_debug("Media entry not found at %d", hashval);
+		return hashtable->table[hashval];
+	}
+
+	/* Remove the last entry of list */
+	if(previous_entry == NULL)
+		hashtable->table[hashval] = current_entry->next;
+	else  /* The list keeps another media with same hash value */
+		previous_entry->next = current_entry->next;
+
+	gmtp_intra_del_clients(current_entry);
+	skb_queue_purge(current_entry->info->buffer);
+	kfree(current_entry->info);
+	kfree(current_entry);
+
+	gmtp_print_debug("Media entry removed successfully!");
+	return hashtable->table[hashval];
+}
+
+void kfree_gmtp_intra_hashtable(struct gmtp_intra_hashtable *hashtable)
+{
+	int i;
+	struct gmtp_relay_entry *list, *temp;
+
+	gmtp_print_function();
+
+	if(hashtable == NULL)
+		return;
+
+	for(i = 0; i < hashtable->size; ++i) {
+		list = hashtable->table[i];
+		while(list != NULL) {
+			temp = list;
+			list = list->next;
+			kfree(temp);
+		}
+	}
+
+	kfree(hashtable->table);
+	kfree(hashtable);
+}
diff --git a/linux-3.17.1/net/gmtp-intra/hash-intra.h b/linux-3.17.1/net/gmtp-intra/hash-intra.h
new file mode 100644
index 0000000..e4ef3a8
--- /dev/null
+++ b/linux-3.17.1/net/gmtp-intra/hash-intra.h
@@ -0,0 +1,111 @@
+/*
+ * hash-intra.h
+ *
+ *  Created on: 03/05/2015
+ *      Author: wendell
+ */
+
+#ifndef HASH_INTRA_H_
+#define HASH_INTRA_H_
+
+#define GMTP_HASH_SIZE  16
+
+/**
+ * struct gmtp_relay_entry: entry in GMTP-Intra Relay Table
+ *
+ * @flowname: Name of dataflow
+ * @server_addr: IP address of media server
+ * @relay: list of relays
+ * @media_port: port of media at server
+ * @channel_addr: IP address of media multicast channel
+ * @channel_port: Port of media multicast channel
+ * @state: state of media transmission
+ * @info: control information for media transmission
+ *
+ * @next: pointer to next gmtp_relay_entry
+ */
+struct gmtp_relay_entry {
+	__u8 flowname[GMTP_FLOWNAME_LEN];
+	__be32 server_addr;
+	__be32 *relay;
+	__be16 media_port;
+	__be32 channel_addr;
+	__be16 channel_port;
+	__u8 state :3;
+	struct gmtp_flow_info *info;
+
+	struct gmtp_relay_entry *next;
+};
+
+/**
+ * struct gmtp_flow_info - Control information for media transmission
+ *
+ * @iseq: initial sequence number of received packets
+ * @seq: sequence number of last received packet
+ * @nbytes: amount of received bytes
+ * @current_tx: Current max tx (via GMTP-MCC). 0 means unlimited.
+ * @last_rx_tstamp: time stamp of last received data packet
+ * @data_pkt_tx: number of data packets transmitted
+ * @buffer: buffer of GMTP-Data packets
+ * @buffer_size: size (in bytes) of GMTP-Data buffer.
+ * @buffer_len: number of packets in GMTP-Data buffer]
+ * @buffer_size: max number of packets in buffer
+ */
+struct gmtp_flow_info {
+	unsigned int 		iseq;
+	unsigned int 		seq;
+	unsigned int 		nbytes;
+
+	u64 			current_tx;
+	ktime_t 		last_rx_tstamp;
+	unsigned int 		data_pkt_tx;
+
+	struct gmtp_client	*clients;
+	unsigned int 		nclients;
+
+	struct sk_buff_head 	*buffer;
+	unsigned int 		buffer_size;
+	unsigned int 		buffer_min;
+	unsigned int 		buffer_max;  /* buffer_min * 3 */
+#define buffer_len 		buffer->qlen
+};
+
+static inline void gmtp_set_buffer_limits(struct gmtp_flow_info *info,
+		unsigned int buffer_min)
+{
+	info->buffer_min = buffer_min;
+	info->buffer_max = info->buffer_min * 3;
+}
+
+/**
+ * State of a flow
+ */
+enum {
+	GMTP_INTRA_WAITING_REGISTER_REPLY,
+	GMTP_INTRA_REGISTER_REPLY_RECEIVED,
+	GMTP_INTRA_TRANSMITTING,
+	GMTP_INTRA_CLOSE_RECEIVED,
+	GMTP_INTRA_CLOSED
+};
+
+/*
+ * struct gmtp_intra_hashtable: GMTP-Intra Relay Table
+ */
+struct gmtp_intra_hashtable {
+	int size;
+	struct gmtp_relay_entry **table;
+};
+
+/** hash.c */
+struct gmtp_intra_hashtable *gmtp_intra_create_hashtable(unsigned int size);
+struct gmtp_relay_entry *gmtp_intra_lookup_media(
+		struct gmtp_intra_hashtable *hashtable, const __u8 *media);
+int gmtp_intra_add_entry(struct gmtp_intra_hashtable *hashtable, __u8 *flowname,
+		__be32 server_addr, __be32 *relay, __be16 media_port,
+		__be32 channel_addr, __be16 channel_port);
+struct gmtp_relay_entry *gmtp_intra_del_entry(
+		struct gmtp_intra_hashtable *hashtable, __u8 *media);
+
+void kfree_gmtp_intra_hashtable(struct gmtp_intra_hashtable *hashtable);
+
+#endif /* HASH_INTRA_H_ */
diff --git a/linux-3.17.1/net/gmtp-intra/input.c b/linux-3.17.1/net/gmtp-intra/input.c
new file mode 100644
index 0000000..c1a3abd
--- /dev/null
+++ b/linux-3.17.1/net/gmtp-intra/input.c
@@ -0,0 +1,373 @@
+#include <net/ip.h>
+
+#include <uapi/linux/gmtp.h>
+#include <linux/gmtp.h>
+#include "../gmtp/gmtp.h"
+
+#include "gmtp-intra.h"
+#include "mcc-intra.h"
+
+/**
+ * Algorithm 1: registerRelay
+ *
+ * The node r (relay) executes this algorithm to send a register of
+ * participation to a  * given node s (server).
+ * If p (packet) is given, node c wants to receive the flow P, so notify s.
+ *
+ * begin
+ * P = p.flowname
+ * If P != NULL:
+ *    client = p.client (ip:port)
+ *    Check if P is already being received (via reception table)
+ *    // Add client to an waiting list
+ *    addClientWaitingFlow(c, P)
+ *    If multicast channel exists:
+ *        respondToClients(GMTPRequestReply(channel))
+ *        return 0
+ *    else:
+ *        Send request to server and wait registration reply.
+ *        When GMTP-Register-Reply is received, executes
+ *        gmtp_intra_register_reply_received
+ *        if state(P) != GMTP_INTRA_WAITING_REGISTER_REPLY:
+ *            state(P) = GMTP_INTRA_WAITING_REGISTER_REPLY
+ *            sendToServer(GMTP_PKT_REGISTER, P)
+ *        else:
+ *            // Ask client to wait registration reply for P
+ *            respondToClients(GMTPRequestReply(P, "waiting_registration"));
+ *        endif
+ *        return 0
+ *    endif
+ *    if state(P) != GMTP_INTRA_WAITING_REGISTER_REPLY:
+ *            state(P) = GMTP_INTRA_WAITING_REGISTER_REPLY
+ *            sendToServer(GMTP_PKT_REGISTER)
+ *    endif
+ * endif
+ * return 0
+ * end
+ */
+int gmtp_intra_request_rcv(struct sk_buff *skb)
+{
+	int ret = NF_ACCEPT;
+	struct iphdr *iph = ip_hdr(skb);
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct gmtp_hdr *gh_reqnotify;
+	struct gmtp_relay_entry *entry;
+
+	__u8 code = GMTP_REQNOTIFY_CODE_ERROR;
+	__u8 reporter = 0;
+
+	gmtp_pr_func();
+
+	entry = gmtp_intra_lookup_media(gmtp.hashtable, gh->flowname);
+	if(entry != NULL) {
+		gmtp_pr_info("Media found. Sending RequestNotify.");
+		reporter = new_reporter(entry);
+		switch(entry->state) {
+		case GMTP_INTRA_WAITING_REGISTER_REPLY:
+			code = reporter ?
+					GMTP_REQNOTIFY_CODE_WAIT_REPORTER :
+					GMTP_REQNOTIFY_CODE_WAIT;
+			break;
+		case GMTP_INTRA_REGISTER_REPLY_RECEIVED:
+		case GMTP_INTRA_TRANSMITTING:
+			code = reporter ?
+					GMTP_REQNOTIFY_CODE_OK_REPORTER:
+					GMTP_REQNOTIFY_CODE_OK;
+			ret = NF_DROP;
+			break;
+		default:
+			gmtp_pr_error("Inconsistent state: %d", entry->state);
+			ret = NF_DROP;
+			goto out;
+		}
+
+	} else {
+		__be32 mcst_addr = get_mcst_v4_addr();
+		int err = gmtp_intra_add_entry(gmtp.hashtable, gh->flowname,
+				iph->daddr,
+				NULL,
+				gh->sport,
+				mcst_addr,
+				gh->dport); /* Mcst port <- server port */
+
+		if(!err) {
+			entry = gmtp_intra_lookup_media(gmtp.hashtable,
+					gh->flowname);
+			reporter = new_reporter(entry);
+			code = reporter ?
+					GMTP_REQNOTIFY_CODE_WAIT_REPORTER :
+					GMTP_REQNOTIFY_CODE_WAIT;
+			gh->type = GMTP_PKT_REGISTER;
+		} else {
+			gmtp_pr_error("Failed to insert flow in table (%d)", err);
+			ret = NF_DROP;
+			goto out;
+		}
+	}
+
+	gmtp_list_add_client(++entry->info->nclients, iph->saddr, gh->sport,
+			reporter, &entry->info->clients->list);
+
+out:
+	gh_reqnotify = gmtp_intra_make_request_notify_hdr(skb, entry,
+			gh->dport, gh->sport, code);
+
+	if(gh_reqnotify != NULL)
+		gmtp_intra_build_and_send_pkt(skb, iph->daddr,
+				iph->saddr, gh_reqnotify, true);
+
+	return ret;
+}
+
+/**
+ * Algorithm 2:: onReceiveGMTPRegisterReply(p.type == GMTP-Register-Reply)
+ *
+ * The node r (relay) executes this algorithm when receives a packet of type
+ * GMTP-Register-Reply, as response for a registration of participation
+ * sent to a s(server) node.
+ *
+ * begin
+ * state(P) = GMTP_INTRA_REGISTER_REPLY_RECEIVED
+ * if (packet p is OK):
+ *     W = p.way
+ *     s = p.server (ip:port)
+ *     P = p.flowname
+ *     if P != NULL:
+ *         if s enabled security layer:
+ *             getAndStoreServerPublicKey(s)
+ *         endif
+ *         channel = createMulticastChannel(s, P)
+ *         Update flow reception table with channel
+ *         respondToClients(GMTPRequestReply(channel))
+ *         startRelay(channel);
+ *      endif
+ *      updateFlowReceptionTable(s)
+ *      Send ack to server (ack.w = W) //Send way back to server
+ * else
+ *      // s refused to accept the registration of participation.
+ *      errorCode = p.error
+ *      respondToClients(GMTPRequestReply(errorCode, P))
+ * endif
+ * end
+ */
+int gmtp_intra_register_reply_rcv(struct sk_buff *skb)
+{
+	int ret = NF_ACCEPT;
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct iphdr *iph = ip_hdr(skb);
+	struct gmtp_hdr *gh_rn;
+	struct gmtp_relay_entry *data;
+	/*unsigned int r;*/
+
+	gmtp_print_function();
+
+	/* Add relay information in REGISTER-REPLY packet) */
+	gmtp_intra_add_relayid(skb);
+
+	/* Update transmission rate (GMTP-UCC) */
+	/* gmtp_print_debug("UPDATING Tx Rate");
+	 gmtp_update_tx_rate(H_USER);
+	 r = gmtp_get_current_tx_rate();
+	 if(r < gh->transm_r)
+	 gh->transm_r = r;
+	 */
+
+	/*
+	 * FIXME
+	 * If RegisterReply is destined others, just let it go...
+	 */
+	data = gmtp_intra_lookup_media(gmtp.hashtable, gh->flowname);
+	pr_info("gmtp_lookup_media returned: %p\n", data);
+	if(data == NULL)
+		return NF_ACCEPT;
+
+	/** Send ack back to server */
+	gh_rn = gmtp_intra_make_route_hdr(skb);
+	if(gh_rn != NULL)
+		gmtp_intra_build_and_send_pkt(skb, iph->daddr, iph->saddr,
+				gh_rn, true);
+
+	data->state = GMTP_INTRA_REGISTER_REPLY_RECEIVED;
+
+	/*
+	 * FIXME
+	 * (1) Send ReqNotify to every waiting client.
+	 * (2) Clear waiting client list
+	 *
+	 * Here, the first client is a REPORTER
+	 */
+	ret = gmtp_intra_make_request_notify(skb,
+			iph->saddr, gh->sport,
+			iph->daddr, gh->dport,
+			GMTP_REQNOTIFY_CODE_OK_REPORTER);
+
+	return ret;
+}
+
+/* FIXME Treat acks from clients */
+int gmtp_intra_ack_rcv(struct sk_buff *skb)
+{
+	int ret = NF_DROP;
+
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct iphdr *iph = ip_hdr(skb);
+
+	gmtp_print_function();
+
+	gmtp_pr_info("%s (%d) src=%pI4@%-5d dst=%pI4@%-5d transm_r: %u",
+			gmtp_packet_name(gh->type), gh->type,
+			&iph->saddr, ntohs(gh->sport),
+			&iph->daddr, ntohs(gh->dport),
+			gh->transm_r);
+
+	return ret;
+}
+
+int gmtp_intra_feedback_rcv(struct sk_buff *skb)
+{
+	int ret = NF_DROP;
+
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct gmtp_relay_entry *entry;
+
+	entry = gmtp_intra_lookup_media(gmtp.hashtable, gh->flowname);
+	if(entry == NULL)
+		goto out;
+
+	/*{
+		struct iphdr *iph = ip_hdr(skb);
+		gmtp_pr_info("%s (%d) src=%pI4@%-5d dst=%pI4@%-5d transm_r: %u",
+				gmtp_packet_name(gh->type), gh->type,
+				&iph->saddr, ntohs(gh->sport), &iph->daddr,
+				ntohs(gh->dport), gh->transm_r);
+	}*/
+
+	/* Discard early feedbacks */
+	if((entry->info->data_pkt_tx/entry->info->buffer_min) < 100)
+		goto out;
+
+	if(gh->transm_r > 0)
+		entry->info->current_tx = (u64) gh->transm_r;
+
+out:
+	return ret;
+}
+
+/**
+ * Update GMTP-Intra statistics
+ */
+static inline void gmtp_update_stats(struct gmtp_flow_info *info,
+		struct sk_buff *skb, struct gmtp_hdr *gh)
+{
+	if(info->iseq == 0)
+		info->iseq = gh->seq;
+	if(gh->seq > info->seq)
+		info->seq = gh->seq;
+	info->nbytes += skb->len + ETH_HLEN;
+	gmtp.total_bytes_rx += skb->len + ETH_HLEN;
+}
+
+/**
+ * begin
+ * P = p.flowname
+ * If P != NULL:
+ *  in:
+ *     AddToBuffer(P)
+ *  out:
+ *     p.dest_address = get_multicast_channel(P)
+ *     p.port = get_multicast_port(P)
+ *     send(P)
+ */
+int gmtp_intra_data_rcv(struct sk_buff *skb)
+{
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct gmtp_relay_entry *entry;
+	struct gmtp_flow_info *info;
+
+	entry = gmtp_intra_lookup_media(gmtp.hashtable, gh->flowname);
+	if(entry == NULL) {
+		gmtp_pr_info("Failed to lookup media info in table...");
+		goto out;
+	}
+
+	info = entry->info;
+	if(entry->state == GMTP_INTRA_REGISTER_REPLY_RECEIVED)
+		entry->state = GMTP_INTRA_TRANSMITTING;
+
+	/* FIXME It frozes clients due to GMTP-MCC (loss forever...) */
+	/*pr_info("buffer_len: %u\n", info->buffer_len);
+	if(info->buffer_len >= info->buffer_max) {
+		pr_warning("Buffer overflow! Max: %u\n", info->buffer_max);
+		return NF_DROP;
+	}*/
+
+	if((gh->seq > info->seq) && entry->state == GMTP_INTRA_TRANSMITTING)
+		gmtp_buffer_add(info, skb);
+
+	gmtp_update_stats(info, skb, gh);
+
+out:
+	return NF_ACCEPT;
+}
+
+int gmtp_intra_close_rcv(struct sk_buff *skb)
+{
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct iphdr *iph = ip_hdr(skb);
+	struct gmtp_relay_entry *entry;
+	struct gmtp_flow_info *info;
+
+	struct gmtp_client *client, *temp;
+
+	entry = gmtp_intra_lookup_media(gmtp.hashtable, gh->flowname);
+	if(entry == NULL) {
+		gmtp_pr_info("Failed to lookup media info in table...");
+		return NF_ACCEPT;
+	}
+	info = entry->info;
+
+	/* Close received from server.
+	 * Copy and buffer it for each client
+	 * We will send it later...
+	 */
+	if(iph->saddr == entry->server_addr) {
+		if(entry->state == GMTP_INTRA_TRANSMITTING) {
+			entry->state = GMTP_INTRA_CLOSE_RECEIVED;
+			list_for_each_entry(client, &info->clients->list, list)
+			{
+				struct sk_buff *copy = skb_copy(skb, gfp_any());
+				if(copy != NULL) {
+					struct iphdr *iph_copy = ip_hdr(copy);
+					struct gmtp_hdr *gh_copy =
+							gmtp_hdr(copy);
+
+					iph_copy->daddr = client->addr;
+					ip_send_check(iph_copy);
+					gh_copy->dport = client->port;
+
+					gmtp_buffer_add(info, copy);
+				}
+			}
+		}
+		return NF_ACCEPT;
+	}
+
+	/*
+	 * TODO Close received from client
+	 */
+	list_for_each_entry_safe(client, temp, &info->clients->list, list)
+	{
+		if(iph->saddr == client->addr && gh->sport == client->port) {
+			info->nclients--;
+			list_del(&client->list);
+			kfree(client);
+		}
+	}
+
+	if(info->nclients == 0)
+		gmtp_intra_del_entry(gmtp.hashtable, entry->flowname);
+
+	/* FIXME Broken pipe error when  close is called by clients */
+	/*return NF_DROP;*/
+	return NF_ACCEPT;
+}
diff --git a/linux-3.17.1/net/gmtp-intra/mcc-intra.c b/linux-3.17.1/net/gmtp-intra/mcc-intra.c
new file mode 100644
index 0000000..967d645
--- /dev/null
+++ b/linux-3.17.1/net/gmtp-intra/mcc-intra.c
@@ -0,0 +1,50 @@
+/*
+ * mcc.h
+ *
+ *  Created on: 13/04/2015
+ *      Author: wendell
+ */
+
+#include "gmtp-intra.h"
+#include "mcc-intra.h"
+
+void gmtp_intra_mcc_delay(struct gmtp_flow_info *info, struct sk_buff *skb,
+		u64 server_tx)
+{
+	u64 delay;
+	s64 elapsed, delay2;
+	u64 tx = info->current_tx; /*30000;*/
+	unsigned int len = skb->len + ETH_HLEN;
+
+	if(tx == 0 || tx >= server_tx) {
+		/*pr_info("tx: %lld >= %lld || 0\n", tx, server_tx);*/
+		goto out;
+	}
+
+	delay = DIV_ROUND_CLOSEST(len * USEC_PER_SEC, tx);
+	elapsed = ktime_us_delta(skb->tstamp, info->last_rx_tstamp);
+	delay2 = delay - elapsed;
+
+	/*pr_info("delay = (1000000 * %u)/%llu = %llu us\n", len, tx, delay);
+	pr_info("elapsed = %lld\n", elapsed);
+	pr_info("delay2 = %lld\n", delay2);*/
+
+	/* if delay2 <= 0, pass way... */
+	if(delay2 > 0)
+		gmtp_intra_wait_us(delay2);
+
+out:
+	info->last_rx_tstamp = skb->tstamp;
+}
+
+/*static struct timer_list my_timer;
+void my_timer_callback(unsigned long data)
+{
+	pr_info("GMTP-INTRA TIMER CALLBACK (%ld).\n", jiffies);
+	mod_timer(&my_timer, jiffies + msecs_to_jiffies(1000));
+}*/
+/* setup your timer to call my_timer_callback */
+/*setup_timer(&my_timer, my_timer_callback, 0);*/
+/* setup timer interval to 1000 msecs */
+/*mod_timer(&my_timer, jiffies + msecs_to_jiffies(1000));*/
+/*del_timer_sync(&my_timer);*/
diff --git a/linux-3.17.1/net/gmtp-intra/mcc-intra.h b/linux-3.17.1/net/gmtp-intra/mcc-intra.h
new file mode 100644
index 0000000..5ae4e8a
--- /dev/null
+++ b/linux-3.17.1/net/gmtp-intra/mcc-intra.h
@@ -0,0 +1,24 @@
+/*
+ * mcc.h
+ *
+ *  Created on: 13/04/2015
+ *      Author: wendell
+ */
+
+#ifndef MCC_INTRA_H_
+#define MCC_INTRA_H_
+
+#include <linux/gmtp.h>
+#include "gmtp-intra.h"
+
+#define GMTP_REPORTER_PROPORTION 6
+
+static inline int new_reporter(struct gmtp_relay_entry *entry)
+{
+	return (entry->info->nclients % GMTP_REPORTER_PROPORTION) == 0 ? 1 : 0;
+}
+
+void gmtp_intra_mcc_delay(struct gmtp_flow_info *info, struct sk_buff *skb,
+		u64 server_tx);
+
+#endif /* MCC_INTRA_H_ */
diff --git a/linux-3.17.1/net/gmtp-intra/output.c b/linux-3.17.1/net/gmtp-intra/output.c
new file mode 100644
index 0000000..85edcd6
--- /dev/null
+++ b/linux-3.17.1/net/gmtp-intra/output.c
@@ -0,0 +1,431 @@
+/*
+ * output.c
+ *
+ *  Created on: 27/02/2015
+ *      Author: wendell
+ */
+
+#include <linux/phy.h>
+#include <linux/etherdevice.h>
+#include <net/ip.h>
+
+#include <uapi/linux/gmtp.h>
+#include <linux/gmtp.h>
+#include "../gmtp/gmtp.h"
+
+#include "gmtp-intra.h"
+#include "mcc-intra.h"
+
+void gmtp_intra_add_relayid(struct sk_buff *skb)
+{
+	struct gmtp_hdr_register_reply *gh_rply = gmtp_hdr_register_reply(skb);
+	struct gmtp_relay relay;
+
+	gmtp_print_function();
+
+	memcpy(relay.relay_id, gmtp_intra_relay_id(), GMTP_RELAY_ID_LEN);
+	relay.relay_ip =  gmtp_intra_relay_ip();
+
+	gh_rply->relay_list[gh_rply->nrelays] = relay;
+	++gh_rply->nrelays;
+}
+
+struct gmtp_hdr *gmtp_intra_make_route_hdr(struct sk_buff *skb)
+{
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	__u8 *transport_header;
+
+	struct gmtp_hdr *gh_cpy;
+	struct gmtp_hdr_route *gh_rn;
+	struct gmtp_hdr_register_reply *gh_reply;
+
+	int gmtp_hdr_len = sizeof(struct gmtp_hdr) +
+			sizeof(struct gmtp_hdr_route);
+
+	gmtp_print_function();
+
+	transport_header = kmalloc(gmtp_hdr_len, gfp_any());
+	memset(transport_header, 0, gmtp_hdr_len);
+
+	gh_cpy = (struct gmtp_hdr *) transport_header;
+	memcpy(gh_cpy, gh, sizeof(struct gmtp_hdr));
+
+	gh_cpy->version = GMTP_VERSION;
+	gh_cpy->type = GMTP_PKT_ROUTE_NOTIFY;
+	gh_cpy->hdrlen = gmtp_hdr_len;
+	gh_cpy->dport = gh->sport;
+	gh_cpy->sport = gh->dport;
+
+	gh_rn = (struct gmtp_hdr_route *)(transport_header
+			+ sizeof(struct gmtp_hdr));
+	gh_reply = gmtp_hdr_register_reply(skb);
+	memcpy(gh_rn, gh_reply,	sizeof(*gh_reply));
+
+	return gh_cpy;
+}
+
+struct gmtp_hdr *gmtp_intra_make_request_notify_hdr(struct sk_buff *skb,
+		struct gmtp_relay_entry *entry, __be16 new_sport,
+		__be16 new_dport, __u8 code)
+{
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	__u8 *transport_header;
+
+	struct gmtp_hdr *gh_cpy;
+	struct gmtp_hdr_reqnotify *gh_rnotify;
+
+	int gmtp_hdr_len = sizeof(struct gmtp_hdr)
+			+ sizeof(struct gmtp_hdr_reqnotify);
+
+	gmtp_print_function();
+
+	transport_header = kmalloc(gmtp_hdr_len, gfp_any());
+	memset(transport_header, 0, gmtp_hdr_len);
+
+	gh_cpy = (struct gmtp_hdr *)transport_header;
+	memcpy(gh_cpy, gh, sizeof(struct gmtp_hdr));
+
+	gh_cpy->version = GMTP_VERSION;
+	gh_cpy->type = GMTP_PKT_REQUESTNOTIFY;
+	gh_cpy->hdrlen = gmtp_hdr_len;
+	gh_cpy->sport = new_sport;
+	gh_cpy->dport = new_dport;
+
+	gh_rnotify = (struct gmtp_hdr_reqnotify*)(transport_header
+			+ sizeof(struct gmtp_hdr));
+
+	gh_rnotify->error_code = code;
+
+	if(entry != NULL && code != GMTP_REQNOTIFY_CODE_ERROR) {
+		gh_rnotify->mcst_addr = entry->channel_addr;
+		gh_rnotify->mcst_port = entry->channel_port;
+
+		gmtp_print_debug("ReqNotify => Channel: %pI4@%-5d | Code: %d",
+				&gh_rnotify->mcst_addr,
+				ntohs(gh_rnotify->mcst_port),
+				gh_rnotify->error_code);
+	} else {
+		gmtp_print_debug("ReqNotify => Channel: NULL | Code: %d",
+				gh_rnotify->error_code);
+	}
+
+	return gh_cpy;
+}
+
+/**
+ * Algorithm 6: respondToClients(p.type = GMTP-RequestNotify)
+ *
+ * A r(relay) node executes this Algorithm to respond to clients waiting for
+ * receiving a flow P.
+ *
+ * destAddress = getCtrlChannel(); // 238.255.255.250:1900
+ * p.dest_address = destAddress
+ * P = p.flowname
+ * errorCode = p.error_code
+ * if errorCode != NULL:
+ *      removeClientsWaitingForFlow(P)
+ *      sendPkt(p);
+ * endif
+ * channel = p.channel
+ * if(channel != NULL):
+ *     //Node r is already receiving P
+ *     mediaDescription =  getMediaDescription(P);
+ *     p.data = mediaDescription
+ *     sendPkt(p)
+ *     C = getClientsWaitingForFlow(P)
+ *     waitAck(C)
+ * else:
+ *     p.waiting_registration = true
+ *     sendPkt(p)
+ * endif
+ * return 0
+ * end
+ */
+int gmtp_intra_make_request_notify(struct sk_buff *skb, __be32 new_saddr,
+		__be16 new_sport, __be32 new_daddr, __be16 new_dport,
+		__u8 code)
+{
+	int ret = NF_ACCEPT;
+
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct iphdr *iph = ip_hdr(skb);
+	struct gmtp_hdr_reqnotify *gh_rnotify;
+	struct gmtp_relay_entry *entry;
+	unsigned int skb_len = skb->len;
+	int gmtp_hdr_len = sizeof(struct gmtp_hdr)
+			+ sizeof(struct gmtp_hdr_reqnotify);
+
+	gmtp_pr_func();
+
+	entry = gmtp_intra_lookup_media(gmtp.hashtable, gh->flowname);
+	if(entry == NULL) {
+		gmtp_print_warning("Failed to lookup media info in table...");
+		goto fail;
+	}
+
+	/** Delete REQUEST or REGISTER-REPLY specific header */
+	gmtp_print_debug("Deleting specific headers...");
+	skb_trim(skb, (skb_len - gmtp_packet_hdr_variable_len(gh->type)));
+
+	gh->version = GMTP_VERSION;
+	gh->type = GMTP_PKT_REQUESTNOTIFY;
+	gh->hdrlen = gmtp_hdr_len;
+	gh->sport = new_sport;
+	gh->dport = new_dport;
+
+	gh_rnotify = (struct gmtp_hdr_reqnotify*)
+			skb_put(skb, sizeof(struct gmtp_hdr_reqnotify));
+
+	if(gh_rnotify == NULL)
+		goto fail;
+
+	if(entry != NULL && code != GMTP_REQNOTIFY_CODE_ERROR) {
+		gh_rnotify->error_code = code;
+		gh_rnotify->mcst_addr = entry->channel_addr;
+		gh_rnotify->mcst_port = entry->channel_port;
+
+		gmtp_print_debug("ReqNotify => Channel: %pI4@%-5d | Code: %d",
+				&gh_rnotify->mcst_addr,
+				ntohs(gh_rnotify->mcst_port),
+				gh_rnotify->error_code);
+	} else {
+		gmtp_print_debug("ReqNotify => Channel: NULL | Code: %d",
+				gh_rnotify->error_code);
+	}
+
+	iph->saddr = new_saddr;
+	iph->daddr = new_daddr;
+	iph->tot_len = htons(skb->len);
+	ip_send_check(iph);
+
+	return ret;
+
+fail:
+	ret = NF_DROP;
+	return ret;
+}
+
+/*
+ * Add an ip header to a skbuff and send it out.
+ * Based on netpoll_send_udp(...) (netpoll.c)
+ */
+struct sk_buff *gmtp_intra_build_pkt(struct sk_buff *skb_src, __be32 saddr,
+		__be32 daddr, struct gmtp_hdr *gh_ref, bool backward)
+{
+	struct net_device *dev = skb_src->dev;
+	struct ethhdr *eth_src = eth_hdr(skb_src);
+
+	struct sk_buff *skb = alloc_skb(gh_ref->hdrlen, gfp_any());
+	struct ethhdr *eth;
+	struct iphdr *iph;
+	struct gmtp_hdr *gh;
+	int total_len, ip_len, gmtp_len, data_len = 0;
+
+	if(eth_src == NULL) {
+		gmtp_print_warning("eth_src is NULL!");
+		return NULL;
+	}
+
+	if (skb == NULL) {
+		gmtp_print_warning("skb is null");
+		return NULL;
+	}
+
+	if(gh_ref->type == GMTP_PKT_DATA)
+		data_len = gmtp_data_len(skb_src);
+
+	gmtp_len = gh_ref->hdrlen + data_len;
+	ip_len = gmtp_len + sizeof(*iph);
+	total_len = ip_len + LL_RESERVED_SPACE(dev);
+
+	skb_reserve(skb, total_len);
+
+	/* Build GMTP data */
+	if(data_len > 0) {
+		unsigned char *data = skb_push(skb, data_len);
+		memcpy(data, gmtp_data(skb_src), data_len);
+	}
+
+	/* Build GMTP header */
+	skb_push(skb, gh_ref->hdrlen);
+	skb_reset_transport_header(skb);
+	gh = gmtp_hdr(skb);
+	memcpy(gh, gh_ref, gh_ref->hdrlen);
+
+	/* Build the IP header. */
+	skb_push(skb, sizeof(struct iphdr));
+	skb_reset_network_header(skb);
+	iph = ip_hdr(skb);
+
+	/* iph->version = 4; iph->ihl = 5; */
+	put_unaligned(0x45, (unsigned char *)iph);
+	iph->tos      = 0;
+	iph->frag_off = 0;
+	iph->ttl      = 64;
+	iph->protocol = IPPROTO_GMTP;
+	put_unaligned(saddr, &(iph->saddr));
+	put_unaligned(daddr, &(iph->daddr));
+	put_unaligned(htons(skb->len), &(iph->tot_len));
+	ip_send_check(iph);
+
+	eth = (struct ethhdr *) skb_push(skb, ETH_HLEN);
+	skb_reset_mac_header(skb);
+	skb->protocol = eth->h_proto = htons(ETH_P_IP);
+
+	ether_addr_copy(eth->h_source, dev->dev_addr);
+	if(backward)
+		ether_addr_copy(eth->h_dest, eth_src->h_source);
+	else
+		ether_addr_copy(eth->h_dest, eth_src->h_dest);
+
+	skb->dev = dev;
+
+	return skb;
+}
+
+void gmtp_intra_send_pkt(struct sk_buff *skb)
+{
+	int err = dev_queue_xmit(skb);
+	if(err)
+		gmtp_pr_error("Error %d trying send packet (%p)", err, skb);
+}
+
+/*
+ * Add an ip header to a skbuff and send it out.
+ * Based on netpoll_send_udp(...) (netpoll.c)
+ */
+void gmtp_intra_build_and_send_pkt(struct sk_buff *skb_src, __be32 saddr,
+		__be32 daddr, struct gmtp_hdr *gh_ref, bool backward)
+{
+	struct sk_buff *skb = gmtp_intra_build_pkt(skb_src, saddr, daddr,
+			gh_ref, backward);
+
+	if(skb != NULL)
+		gmtp_intra_send_pkt(skb);
+}
+
+void gmtp_intra_build_and_send_skb(struct sk_buff *skb)
+{
+	struct iphdr *iph = ip_hdr(skb);
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+
+	gmtp_intra_build_and_send_pkt(skb, iph->saddr, iph->daddr, gh, 0);
+}
+
+void gmtp_copy_hdr(struct sk_buff *skb, struct sk_buff *src_skb)
+{
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct gmtp_hdr *gh_src = gmtp_hdr(src_skb);
+
+	if(gh->type == gh_src->type)
+		memcpy(gh, gh_src, gh_src->hdrlen);
+}
+
+void gmtp_copy_data(struct sk_buff *skb, struct sk_buff *src_skb)
+{
+	__u8* data = gmtp_data(skb);
+	__u32 data_len = gmtp_data_len(skb);
+
+	__u8* data_src = gmtp_data(src_skb);
+	__u32 data_src_len = gmtp_data_len(src_skb);
+
+	int diff = (int)data_len - (int)data_src_len;
+
+	if(diff > 0)
+		skb_trim(skb, diff);
+	else if(diff < 0)
+		skb_put(skb, -diff);
+
+	memcpy(data, data_src, data_src_len);
+}
+
+/**
+ * begin
+ * P = p.flowname
+ * If P != NULL:
+ *     p.dest_address = get_multicast_channel(P)
+ *     p.port = get_multicast_port(P)
+ *     send(P)
+ */
+int gmtp_intra_data_out(struct sk_buff *skb)
+{
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct iphdr *iph = ip_hdr(skb);
+	struct gmtp_relay_entry *entry;
+	struct gmtp_flow_info *info;
+
+	entry = gmtp_intra_lookup_media(gmtp.hashtable, gh->flowname);
+	if(entry == NULL) {
+		gmtp_pr_info("Failed to lookup media info in table...");
+		goto out;
+	}
+
+	info = entry->info;
+	if(entry->state == GMTP_INTRA_TRANSMITTING) {
+		if(info->buffer_len > info->buffer_min) {
+			struct sk_buff *buffered = gmtp_buffer_dequeue(info);
+			if(buffered != NULL) {
+				info->data_pkt_tx++;
+				gmtp_copy_hdr(skb, buffered);
+				gmtp_copy_data(skb, buffered);
+			}
+		} else
+			return NF_DROP;
+	}
+
+	iph->daddr = entry->channel_addr;
+	ip_send_check(iph);
+	gh->dport = entry->channel_port;
+
+	/** TODO We really trust in declared tx rate from server ? */
+	gmtp_intra_mcc_delay(info, skb, (u64) gh->transm_r);
+
+out:
+	return NF_ACCEPT;
+}
+
+/*
+ * FIXME Send close to multicast (or foreach client) and delete entry later...
+ * Treat close from servers
+ */
+int gmtp_intra_close_out(struct sk_buff *skb)
+{
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct gmtp_relay_entry *entry;
+
+	gmtp_pr_func();
+
+	/**
+	 * If destiny is not me, just let it go!
+	 */
+	entry = gmtp_intra_lookup_media(gmtp.hashtable, gh->flowname);
+	if(entry == NULL)
+		return NF_ACCEPT;
+
+	switch(entry->state) {
+	case GMTP_INTRA_TRANSMITTING:
+		return NF_ACCEPT;
+	case GMTP_INTRA_CLOSED:
+		pr_info("CLOSED\n");
+		gmtp_intra_del_entry(gmtp.hashtable, gh->flowname);
+		return NF_ACCEPT;
+	case GMTP_INTRA_CLOSE_RECEIVED:
+		pr_info("CLOSE_RECEIVED\n");
+		entry->state = GMTP_INTRA_CLOSED;
+		break;
+	}
+
+	while(entry->info->buffer_len > 0) {
+		struct sk_buff *buffered = gmtp_buffer_dequeue(entry->info);
+		if(buffered == NULL) {
+			gmtp_pr_error("Buffered is NULL...");
+			return NF_ACCEPT;
+		}
+		buffered->dev = skb->dev;
+		gmtp_intra_build_and_send_skb(buffered);
+	}
+
+	entry->state = GMTP_INTRA_CLOSED;
+
+	return NF_STOLEN;
+}
diff --git a/linux-3.17.1/net/gmtp/.gitignore b/linux-3.17.1/net/gmtp/.gitignore
new file mode 100644
index 0000000..d027396
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/.gitignore
@@ -0,0 +1 @@
+/.settings/
diff --git a/linux-3.17.1/net/gmtp/Kconfig b/linux-3.17.1/net/gmtp/Kconfig
new file mode 100644
index 0000000..68ef54b
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/Kconfig
@@ -0,0 +1,17 @@
+menuconfig GMTP
+	tristate "The GMTP Protocol"
+	depends on INET
+	---help---
+      Some text about it here ..
+	  If in doubt, say N.
+if GMTP
+
+menu "GMTP Kernel Hacking"
+config GMTP_PRI
+	tristate "GMTP-Pri"
+	default y
+	---help---
+      Some text about it here..
+endmenu
+endif # GMTP
+
diff --git a/linux-3.17.1/net/gmtp/Makefile b/linux-3.17.1/net/gmtp/Makefile
new file mode 100644
index 0000000..b163ffc
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/Makefile
@@ -0,0 +1,36 @@
+PWD := $(shell pwd)
+KERNEL:= /lib/modules/`uname -r`/build
+
+KBUILD_EXTRA_SYMBOLS := $(PWD)/Module.symvers
+
+obj-m += gmtp.o gmtp_ipv4.o
+
+gmtp-y += hash.o input.o minisocks.o output.o sockopt.o proto.o timer.o
+gmtp-y +=  mcc/mcc_proto.o mcc/mcc_input.o mcc/mcc_equation.o mcc/packet_history.o mcc/loss_interval.o 
+gmtp_ipv4-y := ipv4.o
+
+all:
+	make -C $(KERNEL) M=$(PWD) modules
+	/sbin/modinfo gmtp.ko
+	@echo '-------------------------------'
+	/sbin/modinfo gmtp_ipv4.ko
+
+install:
+	@echo 'Installing gmtp.ko...'
+	/sbin/insmod gmtp.ko
+	@echo 'Installing gmtp_ipv4.ko...'
+	/sbin/insmod gmtp_ipv4.ko
+	@echo '-------------------------------'
+	/sbin/lsmod
+	
+uninstall:
+	@echo 'Uninstalling gmtp_ipv4.ko...'
+	/sbin/rmmod -f gmtp_ipv4
+	@echo 'Uninstalling gmtp.ko...'
+	/sbin/rmmod -f gmtp
+	@echo '-------------------------------'
+	/sbin/lsmod
+
+clean:
+	make -C $(KERNEL) M=$(PWD) clean
+	#rm -rf *.o *.ko
diff --git a/linux-3.17.1/net/gmtp/doc/gmtp.doxygen b/linux-3.17.1/net/gmtp/doc/gmtp.doxygen
new file mode 100644
index 0000000..57b328a
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/gmtp.doxygen
@@ -0,0 +1,1792 @@
+# Doxyfile 1.8.1.1
+
+# This file describes the settings to be used by the documentation system
+# doxygen (www.doxygen.org) for a project.
+#
+# All text after a hash (#) is considered a comment and will be ignored.
+# The format is:
+#       TAG = value [value, ...]
+# For lists items can also be appended using:
+#       TAG += value [value, ...]
+# Values that contain spaces should be placed between quotes (" ").
+
+#---------------------------------------------------------------------------
+# Project related configuration options
+#---------------------------------------------------------------------------
+
+# This tag specifies the encoding used for all characters in the config file
+# that follow. The default is UTF-8 which is also the encoding used for all
+# text before the first occurrence of this tag. Doxygen uses libiconv (or the
+# iconv built into libc) for the transcoding. See
+# http://www.gnu.org/software/libiconv for the list of possible encodings.
+
+DOXYFILE_ENCODING      = UTF-8
+
+# The PROJECT_NAME tag is a single word (or sequence of words) that should
+# identify the project. Note that if you do not use Doxywizard you need
+# to put quotes around the project name if it contains spaces.
+
+PROJECT_NAME           = "gmtp"
+
+# The PROJECT_NUMBER tag can be used to enter a project or revision number.
+# This could be handy for archiving the generated documentation or
+# if some version control system is used.
+
+PROJECT_NUMBER         =
+
+# Using the PROJECT_BRIEF tag one can provide an optional one line description
+# for a project that appears at the top of each page and should give viewer
+# a quick idea about the purpose of the project. Keep the description short.
+
+PROJECT_BRIEF          =
+
+# With the PROJECT_LOGO tag one can specify an logo or icon that is
+# included in the documentation. The maximum height of the logo should not
+# exceed 55 pixels and the maximum width should not exceed 200 pixels.
+# Doxygen will copy the logo to the output directory.
+
+PROJECT_LOGO           =
+
+# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute)
+# base path where the generated documentation will be put.
+# If a relative path is entered, it will be relative to the location
+# where doxygen was started. If left blank the current directory will be used.
+
+OUTPUT_DIRECTORY       =
+
+# If the CREATE_SUBDIRS tag is set to YES, then doxygen will create
+# 4096 sub-directories (in 2 levels) under the output directory of each output
+# format and will distribute the generated files over these directories.
+# Enabling this option can be useful when feeding doxygen a huge amount of
+# source files, where putting all generated files in the same directory would
+# otherwise cause performance problems for the file system.
+
+CREATE_SUBDIRS         = NO
+
+# The OUTPUT_LANGUAGE tag is used to specify the language in which all
+# documentation generated by doxygen is written. Doxygen will use this
+# information to generate all constant output in the proper language.
+# The default language is English, other supported languages are:
+# Afrikaans, Arabic, Brazilian, Catalan, Chinese, Chinese-Traditional,
+# Croatian, Czech, Danish, Dutch, Esperanto, Farsi, Finnish, French, German,
+# Greek, Hungarian, Italian, Japanese, Japanese-en (Japanese with English
+# messages), Korean, Korean-en, Lithuanian, Norwegian, Macedonian, Persian,
+# Polish, Portuguese, Romanian, Russian, Serbian, Serbian-Cyrillic, Slovak,
+# Slovene, Spanish, Swedish, Ukrainian, and Vietnamese.
+
+OUTPUT_LANGUAGE        = English
+
+# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will
+# include brief member descriptions after the members that are listed in
+# the file and class documentation (similar to JavaDoc).
+# Set to NO to disable this.
+
+BRIEF_MEMBER_DESC      = YES
+
+# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend
+# the brief description of a member or function before the detailed description.
+# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the
+# brief descriptions will be completely suppressed.
+
+REPEAT_BRIEF           = YES
+
+# This tag implements a quasi-intelligent brief description abbreviator
+# that is used to form the text in various listings. Each string
+# in this list, if found as the leading text of the brief description, will be
+# stripped from the text and the result after processing the whole list, is
+# used as the annotated text. Otherwise, the brief description is used as-is.
+# If left blank, the following values are used ("$name" is automatically
+# replaced with the name of the entity): "The $name class" "The $name widget"
+# "The $name file" "is" "provides" "specifies" "contains"
+# "represents" "a" "an" "the"
+
+ABBREVIATE_BRIEF       =
+
+# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then
+# Doxygen will generate a detailed section even if there is only a brief
+# description.
+
+ALWAYS_DETAILED_SEC    = NO
+
+# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all
+# inherited members of a class in the documentation of that class as if those
+# members were ordinary class members. Constructors, destructors and assignment
+# operators of the base classes will not be shown.
+
+INLINE_INHERITED_MEMB  = NO
+
+# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full
+# path before files name in the file list and in the header files. If set
+# to NO the shortest path that makes the file name unique will be used.
+
+FULL_PATH_NAMES        = NO
+
+# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag
+# can be used to strip a user-defined part of the path. Stripping is
+# only done if one of the specified strings matches the left-hand part of
+# the path. The tag can be used to show relative paths in the file list.
+# If left blank the directory from which doxygen is run is used as the
+# path to strip.
+
+STRIP_FROM_PATH        = 
+
+# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of
+# the path mentioned in the documentation of a class, which tells
+# the reader which header file to include in order to use a class.
+# If left blank only the name of the header file containing the class
+# definition is used. Otherwise one should specify the include paths that
+# are normally passed to the compiler using the -I flag.
+
+STRIP_FROM_INC_PATH    = 
+
+# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter
+# (but less readable) file names. This can be useful if your file system
+# doesn't support long names like on DOS, Mac, or CD-ROM.
+
+SHORT_NAMES            = NO
+
+# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen
+# will interpret the first line (until the first dot) of a JavaDoc-style
+# comment as the brief description. If set to NO, the JavaDoc
+# comments will behave just like regular Qt-style comments
+# (thus requiring an explicit @brief command for a brief description.)
+
+JAVADOC_AUTOBRIEF      = NO
+
+# If the QT_AUTOBRIEF tag is set to YES then Doxygen will
+# interpret the first line (until the first dot) of a Qt-style
+# comment as the brief description. If set to NO, the comments
+# will behave just like regular Qt-style comments (thus requiring
+# an explicit \brief command for a brief description.)
+
+QT_AUTOBRIEF           = NO
+
+# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen
+# treat a multi-line C++ special comment block (i.e. a block of //! or ///
+# comments) as a brief description. This used to be the default behaviour.
+# The new default is to treat a multi-line C++ comment block as a detailed
+# description. Set this tag to YES if you prefer the old behaviour instead.
+
+MULTILINE_CPP_IS_BRIEF = NO
+
+# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented
+# member inherits the documentation from any documented member that it
+# re-implements.
+
+INHERIT_DOCS           = YES
+
+# If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce
+# a new page for each member. If set to NO, the documentation of a member will
+# be part of the file/class/namespace that contains it.
+
+SEPARATE_MEMBER_PAGES  = NO
+
+# The TAB_SIZE tag can be used to set the number of spaces in a tab.
+# Doxygen uses this value to replace tabs by spaces in code fragments.
+
+TAB_SIZE               = 8
+
+# This tag can be used to specify a number of aliases that acts
+# as commands in the documentation. An alias has the form "name=value".
+# For example adding "sideeffect=\par Side Effects:\n" will allow you to
+# put the command \sideeffect (or @sideeffect) in the documentation, which
+# will result in a user-defined paragraph with heading "Side Effects:".
+# You can put \n's in the value part of an alias to insert newlines.
+
+ALIASES                =
+
+# This tag can be used to specify a number of word-keyword mappings (TCL only).
+# A mapping has the form "name=value". For example adding
+# "class=itcl::class" will allow you to use the command class in the
+# itcl::class meaning.
+
+TCL_SUBST              =
+
+# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C
+# sources only. Doxygen will then generate output that is more tailored for C.
+# For instance, some of the names that are used will be different. The list
+# of all members will be omitted, etc.
+
+OPTIMIZE_OUTPUT_FOR_C  = YES
+
+# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java
+# sources only. Doxygen will then generate output that is more tailored for
+# Java. For instance, namespaces will be presented as packages, qualified
+# scopes will look different, etc.
+
+OPTIMIZE_OUTPUT_JAVA   = NO
+
+# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran
+# sources only. Doxygen will then generate output that is more tailored for
+# Fortran.
+
+OPTIMIZE_FOR_FORTRAN   = NO
+
+# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL
+# sources. Doxygen will then generate output that is tailored for
+# VHDL.
+
+OPTIMIZE_OUTPUT_VHDL   = NO
+
+# Doxygen selects the parser to use depending on the extension of the files it
+# parses. With this tag you can assign which parser to use for a given extension.
+# Doxygen has a built-in mapping, but you can override or extend it using this
+# tag. The format is ext=language, where ext is a file extension, and language
+# is one of the parsers supported by doxygen: IDL, Java, Javascript, CSharp, C,
+# C++, D, PHP, Objective-C, Python, Fortran, VHDL, C, C++. For instance to make
+# doxygen treat .inc files as Fortran files (default is PHP), and .f files as C
+# (default is Fortran), use: inc=Fortran f=C. Note that for custom extensions
+# you also need to set FILE_PATTERNS otherwise the files are not read by doxygen.
+
+EXTENSION_MAPPING      =
+
+# If MARKDOWN_SUPPORT is enabled (the default) then doxygen pre-processes all
+# comments according to the Markdown format, which allows for more readable
+# documentation. See http://daringfireball.net/projects/markdown/ for details.
+# The output of markdown processing is further processed by doxygen, so you
+# can mix doxygen, HTML, and XML commands with Markdown formatting.
+# Disable only in case of backward compatibilities issues.
+
+MARKDOWN_SUPPORT       = YES
+
+# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want
+# to include (a tag file for) the STL sources as input, then you should
+# set this tag to YES in order to let doxygen match functions declarations and
+# definitions whose arguments contain STL classes (e.g. func(std::string); v.s.
+# func(std::string) {}). This also makes the inheritance and collaboration
+# diagrams that involve STL classes more complete and accurate.
+
+BUILTIN_STL_SUPPORT    = NO
+
+# If you use Microsoft's C++/CLI language, you should set this option to YES to
+# enable parsing support.
+
+CPP_CLI_SUPPORT        = NO
+
+# Set the SIP_SUPPORT tag to YES if your project consists of sip sources only.
+# Doxygen will parse them like normal C++ but will assume all classes use public
+# instead of private inheritance when no explicit protection keyword is present.
+
+SIP_SUPPORT            = NO
+
+# For Microsoft's IDL there are propget and propput attributes to indicate getter
+# and setter methods for a property. Setting this option to YES (the default)
+# will make doxygen replace the get and set methods by a property in the
+# documentation. This will only work if the methods are indeed getting or
+# setting a simple type. If this is not the case, or you want to show the
+# methods anyway, you should set this option to NO.
+
+IDL_PROPERTY_SUPPORT   = YES
+
+# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC
+# tag is set to YES, then doxygen will reuse the documentation of the first
+# member in the group (if any) for the other members of the group. By default
+# all members of a group must be documented explicitly.
+
+DISTRIBUTE_GROUP_DOC   = NO
+
+# Set the SUBGROUPING tag to YES (the default) to allow class member groups of
+# the same type (for instance a group of public functions) to be put as a
+# subgroup of that type (e.g. under the Public Functions section). Set it to
+# NO to prevent subgrouping. Alternatively, this can be done per class using
+# the \nosubgrouping command.
+
+SUBGROUPING            = YES
+
+# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and
+# unions are shown inside the group in which they are included (e.g. using
+# @ingroup) instead of on a separate page (for HTML and Man pages) or
+# section (for LaTeX and RTF).
+
+INLINE_GROUPED_CLASSES = NO
+
+# When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and
+# unions with only public data fields will be shown inline in the documentation
+# of the scope in which they are defined (i.e. file, namespace, or group
+# documentation), provided this scope is documented. If set to NO (the default),
+# structs, classes, and unions are shown on a separate page (for HTML and Man
+# pages) or section (for LaTeX and RTF).
+
+INLINE_SIMPLE_STRUCTS  = YES
+
+# When TYPEDEF_HIDES_STRUCT is enabled, a typedef of a struct, union, or enum
+# is documented as struct, union, or enum with the name of the typedef. So
+# typedef struct TypeS {} TypeT, will appear in the documentation as a struct
+# with name TypeT. When disabled the typedef will appear as a member of a file,
+# namespace, or class. And the struct will be named TypeS. This can typically
+# be useful for C code in case the coding convention dictates that all compound
+# types are typedef'ed and only the typedef is referenced, never the tag name.
+
+TYPEDEF_HIDES_STRUCT   = NO
+
+# The SYMBOL_CACHE_SIZE determines the size of the internal cache use to
+# determine which symbols to keep in memory and which to flush to disk.
+# When the cache is full, less often used symbols will be written to disk.
+# For small to medium size projects (<1000 input files) the default value is
+# probably good enough. For larger projects a too small cache size can cause
+# doxygen to be busy swapping symbols to and from disk most of the time
+# causing a significant performance penalty.
+# If the system has enough physical memory increasing the cache will improve the
+# performance by keeping more symbols in memory. Note that the value works on
+# a logarithmic scale so increasing the size by one will roughly double the
+# memory usage. The cache size is given by this formula:
+# 2^(16+SYMBOL_CACHE_SIZE). The valid range is 0..9, the default is 0,
+# corresponding to a cache size of 2^16 = 65536 symbols.
+
+SYMBOL_CACHE_SIZE      = 0
+
+# Similar to the SYMBOL_CACHE_SIZE the size of the symbol lookup cache can be
+# set using LOOKUP_CACHE_SIZE. This cache is used to resolve symbols given
+# their name and scope. Since this can be an expensive process and often the
+# same symbol appear multiple times in the code, doxygen keeps a cache of
+# pre-resolved symbols. If the cache is too small doxygen will become slower.
+# If the cache is too large, memory is wasted. The cache size is given by this
+# formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range is 0..9, the default is 0,
+# corresponding to a cache size of 2^16 = 65536 symbols.
+
+LOOKUP_CACHE_SIZE      = 0
+
+#---------------------------------------------------------------------------
+# Build related configuration options
+#---------------------------------------------------------------------------
+
+# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in
+# documentation are documented, even if no documentation was available.
+# Private class members and static file members will be hidden unless
+# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES
+
+EXTRACT_ALL            = YES
+
+# If the EXTRACT_PRIVATE tag is set to YES all private members of a class
+# will be included in the documentation.
+
+EXTRACT_PRIVATE        = NO
+
+# If the EXTRACT_PACKAGE tag is set to YES all members with package or internal scope will be included in the documentation.
+
+EXTRACT_PACKAGE        = NO
+
+# If the EXTRACT_STATIC tag is set to YES all static members of a file
+# will be included in the documentation.
+
+EXTRACT_STATIC         = NO
+
+# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs)
+# defined locally in source files will be included in the documentation.
+# If set to NO only classes defined in header files are included.
+
+EXTRACT_LOCAL_CLASSES  = YES
+
+# This flag is only useful for Objective-C code. When set to YES local
+# methods, which are defined in the implementation section but not in
+# the interface are included in the documentation.
+# If set to NO (the default) only methods in the interface are included.
+
+EXTRACT_LOCAL_METHODS  = NO
+
+# If this flag is set to YES, the members of anonymous namespaces will be
+# extracted and appear in the documentation as a namespace called
+# 'anonymous_namespace{file}', where file will be replaced with the base
+# name of the file that contains the anonymous namespace. By default
+# anonymous namespaces are hidden.
+
+EXTRACT_ANON_NSPACES   = NO
+
+# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all
+# undocumented members of documented classes, files or namespaces.
+# If set to NO (the default) these members will be included in the
+# various overviews, but no documentation section is generated.
+# This option has no effect if EXTRACT_ALL is enabled.
+
+HIDE_UNDOC_MEMBERS     = NO
+
+# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all
+# undocumented classes that are normally visible in the class hierarchy.
+# If set to NO (the default) these classes will be included in the various
+# overviews. This option has no effect if EXTRACT_ALL is enabled.
+
+HIDE_UNDOC_CLASSES     = NO
+
+# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all
+# friend (class|struct|union) declarations.
+# If set to NO (the default) these declarations will be included in the
+# documentation.
+
+HIDE_FRIEND_COMPOUNDS  = NO
+
+# If the HIDE_IN_BODY_DOCS tag is set to YES, Doxygen will hide any
+# documentation blocks found inside the body of a function.
+# If set to NO (the default) these blocks will be appended to the
+# function's detailed documentation block.
+
+HIDE_IN_BODY_DOCS      = NO
+
+# The INTERNAL_DOCS tag determines if documentation
+# that is typed after a \internal command is included. If the tag is set
+# to NO (the default) then the documentation will be excluded.
+# Set it to YES to include the internal documentation.
+
+INTERNAL_DOCS          = NO
+
+# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate
+# file names in lower-case letters. If set to YES upper-case letters are also
+# allowed. This is useful if you have classes or files whose names only differ
+# in case and if your file system supports case sensitive file names. Windows
+# and Mac users are advised to set this option to NO.
+
+CASE_SENSE_NAMES       = YES
+
+# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen
+# will show members with their full class and namespace scopes in the
+# documentation. If set to YES the scope will be hidden.
+
+HIDE_SCOPE_NAMES       = NO
+
+# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen
+# will put a list of the files that are included by a file in the documentation
+# of that file.
+
+SHOW_INCLUDE_FILES     = YES
+
+# If the FORCE_LOCAL_INCLUDES tag is set to YES then Doxygen
+# will list include files with double quotes in the documentation
+# rather than with sharp brackets.
+
+FORCE_LOCAL_INCLUDES   = NO
+
+# If the INLINE_INFO tag is set to YES (the default) then a tag [inline]
+# is inserted in the documentation for inline members.
+
+INLINE_INFO            = YES
+
+# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen
+# will sort the (detailed) documentation of file and class members
+# alphabetically by member name. If set to NO the members will appear in
+# declaration order.
+
+SORT_MEMBER_DOCS       = YES
+
+# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the
+# brief documentation of file, namespace and class members alphabetically
+# by member name. If set to NO (the default) the members will appear in
+# declaration order.
+
+SORT_BRIEF_DOCS        = NO
+
+# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen
+# will sort the (brief and detailed) documentation of class members so that
+# constructors and destructors are listed first. If set to NO (the default)
+# the constructors will appear in the respective orders defined by
+# SORT_MEMBER_DOCS and SORT_BRIEF_DOCS.
+# This tag will be ignored for brief docs if SORT_BRIEF_DOCS is set to NO
+# and ignored for detailed docs if SORT_MEMBER_DOCS is set to NO.
+
+SORT_MEMBERS_CTORS_1ST = NO
+
+# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the
+# hierarchy of group names into alphabetical order. If set to NO (the default)
+# the group names will appear in their defined order.
+
+SORT_GROUP_NAMES       = NO
+
+# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be
+# sorted by fully-qualified names, including namespaces. If set to
+# NO (the default), the class list will be sorted only by class name,
+# not including the namespace part.
+# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.
+# Note: This option applies only to the class list, not to the
+# alphabetical list.
+
+SORT_BY_SCOPE_NAME     = NO
+
+# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to
+# do proper type resolution of all parameters of a function it will reject a
+# match between the prototype and the implementation of a member function even
+# if there is only one candidate or it is obvious which candidate to choose
+# by doing a simple string match. By disabling STRICT_PROTO_MATCHING doxygen
+# will still accept a match between prototype and implementation in such cases.
+
+STRICT_PROTO_MATCHING  = NO
+
+# The GENERATE_TODOLIST tag can be used to enable (YES) or
+# disable (NO) the todo list. This list is created by putting \todo
+# commands in the documentation.
+
+GENERATE_TODOLIST      = YES
+
+# The GENERATE_TESTLIST tag can be used to enable (YES) or
+# disable (NO) the test list. This list is created by putting \test
+# commands in the documentation.
+
+GENERATE_TESTLIST      = YES
+
+# The GENERATE_BUGLIST tag can be used to enable (YES) or
+# disable (NO) the bug list. This list is created by putting \bug
+# commands in the documentation.
+
+GENERATE_BUGLIST       = YES
+
+# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or
+# disable (NO) the deprecated list. This list is created by putting
+# \deprecated commands in the documentation.
+
+GENERATE_DEPRECATEDLIST= YES
+
+# The ENABLED_SECTIONS tag can be used to enable conditional
+# documentation sections, marked by \if sectionname ... \endif.
+
+ENABLED_SECTIONS       =
+
+# The MAX_INITIALIZER_LINES tag determines the maximum number of lines
+# the initial value of a variable or macro consists of for it to appear in
+# the documentation. If the initializer consists of more lines than specified
+# here it will be hidden. Use a value of 0 to hide initializers completely.
+# The appearance of the initializer of individual variables and macros in the
+# documentation can be controlled using \showinitializer or \hideinitializer
+# command in the documentation regardless of this setting.
+
+MAX_INITIALIZER_LINES  = 30
+
+# Set the SHOW_USED_FILES tag to NO to disable the list of files generated
+# at the bottom of the documentation of classes and structs. If set to YES the
+# list will mention the files that were used to generate the documentation.
+
+SHOW_USED_FILES        = YES
+
+# Set the SHOW_FILES tag to NO to disable the generation of the Files page.
+# This will remove the Files entry from the Quick Index and from the
+# Folder Tree View (if specified). The default is YES.
+
+SHOW_FILES             = YES
+
+# Set the SHOW_NAMESPACES tag to NO to disable the generation of the
+# Namespaces page.
+# This will remove the Namespaces entry from the Quick Index
+# and from the Folder Tree View (if specified). The default is YES.
+
+SHOW_NAMESPACES        = YES
+
+# The FILE_VERSION_FILTER tag can be used to specify a program or script that
+# doxygen should invoke to get the current version for each file (typically from
+# the version control system). Doxygen will invoke the program by executing (via
+# popen()) the command <command> <input-file>, where <command> is the value of
+# the FILE_VERSION_FILTER tag, and <input-file> is the name of an input file
+# provided by doxygen. Whatever the program writes to standard output
+# is used as the file version. See the manual for examples.
+
+FILE_VERSION_FILTER    =
+
+# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed
+# by doxygen. The layout file controls the global structure of the generated
+# output files in an output format independent way. To create the layout file
+# that represents doxygen's defaults, run doxygen with the -l option.
+# You can optionally specify a file name after the option, if omitted
+# DoxygenLayout.xml will be used as the name of the layout file.
+
+LAYOUT_FILE            =
+
+# The CITE_BIB_FILES tag can be used to specify one or more bib files
+# containing the references data. This must be a list of .bib files. The
+# .bib extension is automatically appended if omitted. Using this command
+# requires the bibtex tool to be installed. See also
+# http://en.wikipedia.org/wiki/BibTeX for more info. For LaTeX the style
+# of the bibliography can be controlled using LATEX_BIB_STYLE. To use this
+# feature you need bibtex and perl available in the search path.
+
+CITE_BIB_FILES         =
+
+#---------------------------------------------------------------------------
+# configuration options related to warning and progress messages
+#---------------------------------------------------------------------------
+
+# The QUIET tag can be used to turn on/off the messages that are generated
+# by doxygen. Possible values are YES and NO. If left blank NO is used.
+
+QUIET                  = NO
+
+# The WARNINGS tag can be used to turn on/off the warning messages that are
+# generated by doxygen. Possible values are YES and NO. If left blank
+# NO is used.
+
+WARNINGS               = YES
+
+# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings
+# for undocumented members. If EXTRACT_ALL is set to YES then this flag will
+# automatically be disabled.
+
+WARN_IF_UNDOCUMENTED   = YES
+
+# If WARN_IF_DOC_ERROR is set to YES, doxygen will generate warnings for
+# potential errors in the documentation, such as not documenting some
+# parameters in a documented function, or documenting parameters that
+# don't exist or using markup commands wrongly.
+
+WARN_IF_DOC_ERROR      = YES
+
+# The WARN_NO_PARAMDOC option can be enabled to get warnings for
+# functions that are documented, but have no documentation for their parameters
+# or return value. If set to NO (the default) doxygen will only warn about
+# wrong or incomplete parameter documentation, but not about the absence of
+# documentation.
+
+WARN_NO_PARAMDOC       = NO
+
+# The WARN_FORMAT tag determines the format of the warning messages that
+# doxygen can produce. The string should contain the $file, $line, and $text
+# tags, which will be replaced by the file and line number from which the
+# warning originated and the warning text. Optionally the format may contain
+# $version, which will be replaced by the version of the file (if it could
+# be obtained via FILE_VERSION_FILTER)
+
+WARN_FORMAT            = "$file:$line: $text"
+
+# The WARN_LOGFILE tag can be used to specify a file to which warning
+# and error messages should be written. If left blank the output is written
+# to stderr.
+
+WARN_LOGFILE           =
+
+#---------------------------------------------------------------------------
+# configuration options related to the input files
+#---------------------------------------------------------------------------
+
+# The INPUT tag can be used to specify the files and/or directories that contain
+# documented source files. You may enter file names like "myfile.cpp" or
+# directories like "/usr/src/myproject". Separate the files or directories
+# with spaces.
+
+INPUT                  = ..
+
+# This tag can be used to specify the character encoding of the source files
+# that doxygen parses. Internally doxygen uses the UTF-8 encoding, which is
+# also the default input encoding. Doxygen uses libiconv (or the iconv built
+# into libc) for the transcoding. See http://www.gnu.org/software/libiconv for
+# the list of possible encodings.
+
+INPUT_ENCODING         = UTF-8
+
+# If the value of the INPUT tag contains directories, you can use the
+# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp
+# and *.h) to filter out the source-files in the directories. If left
+# blank the following patterns are tested:
+# *.c *.cc *.cxx *.cpp *.c++ *.d *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh
+# *.hxx *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm *.dox *.py
+# *.f90 *.f *.for *.vhd *.vhdl
+
+FILE_PATTERNS          = *.c *.h
+
+# The RECURSIVE tag can be used to turn specify whether or not subdirectories
+# should be searched for input files as well. Possible values are YES and NO.
+# If left blank NO is used.
+
+RECURSIVE              = NO
+
+# The EXCLUDE tag can be used to specify files and/or directories that should be
+# excluded from the INPUT source files. This way you can easily exclude a
+# subdirectory from a directory tree whose root is specified with the INPUT tag.
+# Note that relative paths are relative to the directory from which doxygen is
+# run.
+
+EXCLUDE                =
+
+# The EXCLUDE_SYMLINKS tag can be used to select whether or not files or
+# directories that are symbolic links (a Unix file system feature) are excluded
+# from the input.
+
+EXCLUDE_SYMLINKS       = NO
+
+# If the value of the INPUT tag contains directories, you can use the
+# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude
+# certain files from those directories. Note that the wildcards are matched
+# against the file with absolute path, so to exclude all test directories
+# for example use the pattern */test/*
+
+EXCLUDE_PATTERNS       =
+
+# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names
+# (namespaces, classes, functions, etc.) that should be excluded from the
+# output. The symbol name can be a fully qualified name, a word, or if the
+# wildcard * is used, a substring. Examples: ANamespace, AClass,
+# AClass::ANamespace, ANamespace::*Test
+
+EXCLUDE_SYMBOLS        =
+
+# The EXAMPLE_PATH tag can be used to specify one or more files or
+# directories that contain example code fragments that are included (see
+# the \include command).
+
+EXAMPLE_PATH           =
+
+# If the value of the EXAMPLE_PATH tag contains directories, you can use the
+# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp
+# and *.h) to filter out the source-files in the directories. If left
+# blank all files are included.
+
+EXAMPLE_PATTERNS       =
+
+# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be
+# searched for input files to be used with the \include or \dontinclude
+# commands irrespective of the value of the RECURSIVE tag.
+# Possible values are YES and NO. If left blank NO is used.
+
+EXAMPLE_RECURSIVE      = NO
+
+# The IMAGE_PATH tag can be used to specify one or more files or
+# directories that contain image that are included in the documentation (see
+# the \image command).
+
+IMAGE_PATH             =
+
+# The INPUT_FILTER tag can be used to specify a program that doxygen should
+# invoke to filter for each input file. Doxygen will invoke the filter program
+# by executing (via popen()) the command <filter> <input-file>, where <filter>
+# is the value of the INPUT_FILTER tag, and <input-file> is the name of an
+# input file. Doxygen will then use the output that the filter program writes
+# to standard output.
+# If FILTER_PATTERNS is specified, this tag will be
+# ignored.
+
+INPUT_FILTER           =
+
+# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern
+# basis.
+# Doxygen will compare the file name with each pattern and apply the
+# filter if there is a match.
+# The filters are a list of the form:
+# pattern=filter (like *.cpp=my_cpp_filter). See INPUT_FILTER for further
+# info on how filters are used. If FILTER_PATTERNS is empty or if
+# non of the patterns match the file name, INPUT_FILTER is applied.
+
+FILTER_PATTERNS        =
+
+# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using
+# INPUT_FILTER) will be used to filter the input files when producing source
+# files to browse (i.e. when SOURCE_BROWSER is set to YES).
+
+FILTER_SOURCE_FILES    = NO
+
+# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file
+# pattern. A pattern will override the setting for FILTER_PATTERN (if any)
+# and it is also possible to disable source filtering for a specific pattern
+# using *.ext= (so without naming a filter). This option only has effect when
+# FILTER_SOURCE_FILES is enabled.
+
+FILTER_SOURCE_PATTERNS =
+
+#---------------------------------------------------------------------------
+# configuration options related to source browsing
+#---------------------------------------------------------------------------
+
+# If the SOURCE_BROWSER tag is set to YES then a list of source files will
+# be generated. Documented entities will be cross-referenced with these sources.
+# Note: To get rid of all source code in the generated output, make sure also
+# VERBATIM_HEADERS is set to NO.
+
+SOURCE_BROWSER         = NO
+
+# Setting the INLINE_SOURCES tag to YES will include the body
+# of functions and classes directly in the documentation.
+
+INLINE_SOURCES         = NO
+
+# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct
+# doxygen to hide any special comment blocks from generated source code
+# fragments. Normal C, C++ and Fortran comments will always remain visible.
+
+STRIP_CODE_COMMENTS    = YES
+
+# If the REFERENCED_BY_RELATION tag is set to YES
+# then for each documented function all documented
+# functions referencing it will be listed.
+
+REFERENCED_BY_RELATION = NO
+
+# If the REFERENCES_RELATION tag is set to YES
+# then for each documented function all documented entities
+# called/used by that function will be listed.
+
+REFERENCES_RELATION    = NO
+
+# If the REFERENCES_LINK_SOURCE tag is set to YES (the default)
+# and SOURCE_BROWSER tag is set to YES, then the hyperlinks from
+# functions in REFERENCES_RELATION and REFERENCED_BY_RELATION lists will
+# link to the source code.
+# Otherwise they will link to the documentation.
+
+REFERENCES_LINK_SOURCE = YES
+
+# If the USE_HTAGS tag is set to YES then the references to source code
+# will point to the HTML generated by the htags(1) tool instead of doxygen
+# built-in source browser. The htags tool is part of GNU's global source
+# tagging system (see http://www.gnu.org/software/global/global.html). You
+# will need version 4.8.6 or higher.
+
+USE_HTAGS              = NO
+
+# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen
+# will generate a verbatim copy of the header file for each class for
+# which an include is specified. Set to NO to disable this.
+
+VERBATIM_HEADERS       = YES
+
+#---------------------------------------------------------------------------
+# configuration options related to the alphabetical class index
+#---------------------------------------------------------------------------
+
+# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index
+# of all compounds will be generated. Enable this if the project
+# contains a lot of classes, structs, unions or interfaces.
+
+ALPHABETICAL_INDEX     = YES
+
+# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then
+# the COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns
+# in which this list will be split (can be a number in the range [1..20])
+
+COLS_IN_ALPHA_INDEX    = 5
+
+# In case all classes in a project start with a common prefix, all
+# classes will be put under the same header in the alphabetical index.
+# The IGNORE_PREFIX tag can be used to specify one or more prefixes that
+# should be ignored while generating the index headers.
+
+IGNORE_PREFIX          =
+
+#---------------------------------------------------------------------------
+# configuration options related to the HTML output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_HTML tag is set to YES (the default) Doxygen will
+# generate HTML output.
+
+GENERATE_HTML          = YES
+
+# The HTML_OUTPUT tag is used to specify where the HTML docs will be put.
+# If a relative path is entered the value of OUTPUT_DIRECTORY will be
+# put in front of it. If left blank `html' will be used as the default path.
+
+HTML_OUTPUT            = html
+
+# The HTML_FILE_EXTENSION tag can be used to specify the file extension for
+# each generated HTML page (for example: .htm,.php,.asp). If it is left blank
+# doxygen will generate files with .html extension.
+
+HTML_FILE_EXTENSION    = .html
+
+# The HTML_HEADER tag can be used to specify a personal HTML header for
+# each generated HTML page. If it is left blank doxygen will generate a
+# standard header. Note that when using a custom header you are responsible
+#  for the proper inclusion of any scripts and style sheets that doxygen
+# needs, which is dependent on the configuration options used.
+# It is advised to generate a default header using "doxygen -w html
+# header.html footer.html stylesheet.css YourConfigFile" and then modify
+# that header. Note that the header is subject to change so you typically
+# have to redo this when upgrading to a newer version of doxygen or when
+# changing the value of configuration settings such as GENERATE_TREEVIEW!
+
+HTML_HEADER            =
+
+# The HTML_FOOTER tag can be used to specify a personal HTML footer for
+# each generated HTML page. If it is left blank doxygen will generate a
+# standard footer.
+
+HTML_FOOTER            =
+
+# The HTML_STYLESHEET tag can be used to specify a user-defined cascading
+# style sheet that is used by each HTML page. It can be used to
+# fine-tune the look of the HTML output. If the tag is left blank doxygen
+# will generate a default style sheet. Note that doxygen will try to copy
+# the style sheet file to the HTML output directory, so don't put your own
+# style sheet in the HTML output directory as well, or it will be erased!
+
+HTML_STYLESHEET        =
+
+# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or
+# other source files which should be copied to the HTML output directory. Note
+# that these files will be copied to the base HTML output directory. Use the
+# $relpath$ marker in the HTML_HEADER and/or HTML_FOOTER files to load these
+# files. In the HTML_STYLESHEET file, use the file name only. Also note that
+# the files will be copied as-is; there are no commands or markers available.
+
+HTML_EXTRA_FILES       =
+
+# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output.
+# Doxygen will adjust the colors in the style sheet and background images
+# according to this color. Hue is specified as an angle on a colorwheel,
+# see http://en.wikipedia.org/wiki/Hue for more information.
+# For instance the value 0 represents red, 60 is yellow, 120 is green,
+# 180 is cyan, 240 is blue, 300 purple, and 360 is red again.
+# The allowed range is 0 to 359.
+
+HTML_COLORSTYLE_HUE    = 220
+
+# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of
+# the colors in the HTML output. For a value of 0 the output will use
+# grayscales only. A value of 255 will produce the most vivid colors.
+
+HTML_COLORSTYLE_SAT    = 100
+
+# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to
+# the luminance component of the colors in the HTML output. Values below
+# 100 gradually make the output lighter, whereas values above 100 make
+# the output darker. The value divided by 100 is the actual gamma applied,
+# so 80 represents a gamma of 0.8, The value 220 represents a gamma of 2.2,
+# and 100 does not change the gamma.
+
+HTML_COLORSTYLE_GAMMA  = 80
+
+# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML
+# page will contain the date and time when the page was generated. Setting
+# this to NO can help when comparing the output of multiple runs.
+
+HTML_TIMESTAMP         = YES
+
+# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML
+# documentation will contain sections that can be hidden and shown after the
+# page has loaded.
+
+HTML_DYNAMIC_SECTIONS  = NO
+
+# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of
+# entries shown in the various tree structured indices initially; the user
+# can expand and collapse entries dynamically later on. Doxygen will expand
+# the tree to such a level that at most the specified number of entries are
+# visible (unless a fully collapsed tree already exceeds this amount).
+# So setting the number of entries 1 will produce a full collapsed tree by
+# default. 0 is a special value representing an infinite number of entries
+# and will result in a full expanded tree by default.
+
+HTML_INDEX_NUM_ENTRIES = 100
+
+# If the GENERATE_DOCSET tag is set to YES, additional index files
+# will be generated that can be used as input for Apple's Xcode 3
+# integrated development environment, introduced with OSX 10.5 (Leopard).
+# To create a documentation set, doxygen will generate a Makefile in the
+# HTML output directory. Running make will produce the docset in that
+# directory and running "make install" will install the docset in
+# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find
+# it at startup.
+# See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html
+# for more information.
+
+GENERATE_DOCSET        = NO
+
+# When GENERATE_DOCSET tag is set to YES, this tag determines the name of the
+# feed. A documentation feed provides an umbrella under which multiple
+# documentation sets from a single provider (such as a company or product suite)
+# can be grouped.
+
+DOCSET_FEEDNAME        = "Doxygen generated docs"
+
+# When GENERATE_DOCSET tag is set to YES, this tag specifies a string that
+# should uniquely identify the documentation set bundle. This should be a
+# reverse domain-name style string, e.g. com.mycompany.MyDocSet. Doxygen
+# will append .docset to the name.
+
+DOCSET_BUNDLE_ID       = org.doxygen.Project
+
+# When GENERATE_PUBLISHER_ID tag specifies a string that should uniquely identify
+# the documentation publisher. This should be a reverse domain-name style
+# string, e.g. com.mycompany.MyDocSet.documentation.
+
+DOCSET_PUBLISHER_ID    = org.doxygen.Publisher
+
+# The GENERATE_PUBLISHER_NAME tag identifies the documentation publisher.
+
+DOCSET_PUBLISHER_NAME  = Publisher
+
+# If the GENERATE_HTMLHELP tag is set to YES, additional index files
+# will be generated that can be used as input for tools like the
+# Microsoft HTML help workshop to generate a compiled HTML help file (.chm)
+# of the generated HTML documentation.
+
+GENERATE_HTMLHELP      = NO
+
+# If the GENERATE_HTMLHELP tag is set to YES, the CHM_FILE tag can
+# be used to specify the file name of the resulting .chm file. You
+# can add a path in front of the file if the result should not be
+# written to the html output directory.
+
+CHM_FILE               =
+
+# If the GENERATE_HTMLHELP tag is set to YES, the HHC_LOCATION tag can
+# be used to specify the location (absolute path including file name) of
+# the HTML help compiler (hhc.exe). If non-empty doxygen will try to run
+# the HTML help compiler on the generated index.hhp.
+
+HHC_LOCATION           =
+
+# If the GENERATE_HTMLHELP tag is set to YES, the GENERATE_CHI flag
+# controls if a separate .chi index file is generated (YES) or that
+# it should be included in the master .chm file (NO).
+
+GENERATE_CHI           = NO
+
+# If the GENERATE_HTMLHELP tag is set to YES, the CHM_INDEX_ENCODING
+# is used to encode HtmlHelp index (hhk), content (hhc) and project file
+# content.
+
+CHM_INDEX_ENCODING     =
+
+# If the GENERATE_HTMLHELP tag is set to YES, the BINARY_TOC flag
+# controls whether a binary table of contents is generated (YES) or a
+# normal table of contents (NO) in the .chm file.
+
+BINARY_TOC             = NO
+
+# The TOC_EXPAND flag can be set to YES to add extra items for group members
+# to the contents of the HTML help documentation and to the tree view.
+
+TOC_EXPAND             = NO
+
+# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and
+# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated
+# that can be used as input for Qt's qhelpgenerator to generate a
+# Qt Compressed Help (.qch) of the generated HTML documentation.
+
+GENERATE_QHP           = NO
+
+# If the QHG_LOCATION tag is specified, the QCH_FILE tag can
+# be used to specify the file name of the resulting .qch file.
+# The path specified is relative to the HTML output folder.
+
+QCH_FILE               =
+
+# The QHP_NAMESPACE tag specifies the namespace to use when generating
+# Qt Help Project output. For more information please see
+# http://doc.trolltech.com/qthelpproject.html#namespace
+
+QHP_NAMESPACE          = org.doxygen.Project
+
+# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating
+# Qt Help Project output. For more information please see
+# http://doc.trolltech.com/qthelpproject.html#virtual-folders
+
+QHP_VIRTUAL_FOLDER     = doc
+
+# If QHP_CUST_FILTER_NAME is set, it specifies the name of a custom filter to
+# add. For more information please see
+# http://doc.trolltech.com/qthelpproject.html#custom-filters
+
+QHP_CUST_FILTER_NAME   =
+
+# The QHP_CUST_FILT_ATTRS tag specifies the list of the attributes of the
+# custom filter to add. For more information please see
+# <a href="http://doc.trolltech.com/qthelpproject.html#custom-filters">
+# Qt Help Project / Custom Filters</a>.
+
+QHP_CUST_FILTER_ATTRS  =
+
+# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this
+# project's
+# filter section matches.
+# <a href="http://doc.trolltech.com/qthelpproject.html#filter-attributes">
+# Qt Help Project / Filter Attributes</a>.
+
+QHP_SECT_FILTER_ATTRS  =
+
+# If the GENERATE_QHP tag is set to YES, the QHG_LOCATION tag can
+# be used to specify the location of Qt's qhelpgenerator.
+# If non-empty doxygen will try to run qhelpgenerator on the generated
+# .qhp file.
+
+QHG_LOCATION           =
+
+# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files
+#  will be generated, which together with the HTML files, form an Eclipse help
+# plugin. To install this plugin and make it available under the help contents
+# menu in Eclipse, the contents of the directory containing the HTML and XML
+# files needs to be copied into the plugins directory of eclipse. The name of
+# the directory within the plugins directory should be the same as
+# the ECLIPSE_DOC_ID value. After copying Eclipse needs to be restarted before
+# the help appears.
+
+GENERATE_ECLIPSEHELP   = NO
+
+# A unique identifier for the eclipse help plugin. When installing the plugin
+# the directory name containing the HTML and XML files should also have
+# this name.
+
+ECLIPSE_DOC_ID         = org.doxygen.Project
+
+# The DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs)
+# at top of each HTML page. The value NO (the default) enables the index and
+# the value YES disables it. Since the tabs have the same information as the
+# navigation tree you can set this option to NO if you already set
+# GENERATE_TREEVIEW to YES.
+
+DISABLE_INDEX          = NO
+
+# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index
+# structure should be generated to display hierarchical information.
+# If the tag value is set to YES, a side panel will be generated
+# containing a tree-like index structure (just like the one that
+# is generated for HTML Help). For this to work a browser that supports
+# JavaScript, DHTML, CSS and frames is required (i.e. any modern browser).
+# Windows users are probably better off using the HTML help feature.
+# Since the tree basically has the same information as the tab index you
+# could consider to set DISABLE_INDEX to NO when enabling this option.
+
+GENERATE_TREEVIEW      = NO
+
+# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values
+# (range [0,1..20]) that doxygen will group on one line in the generated HTML
+# documentation. Note that a value of 0 will completely suppress the enum
+# values from appearing in the overview section.
+
+ENUM_VALUES_PER_LINE   = 4
+
+# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be
+# used to set the initial width (in pixels) of the frame in which the tree
+# is shown.
+
+TREEVIEW_WIDTH         = 250
+
+# When the EXT_LINKS_IN_WINDOW option is set to YES doxygen will open
+# links to external symbols imported via tag files in a separate window.
+
+EXT_LINKS_IN_WINDOW    = NO
+
+# Use this tag to change the font size of Latex formulas included
+# as images in the HTML documentation. The default is 10. Note that
+# when you change the font size after a successful doxygen run you need
+# to manually remove any form_*.png images from the HTML output directory
+# to force them to be regenerated.
+
+FORMULA_FONTSIZE       = 10
+
+# Use the FORMULA_TRANPARENT tag to determine whether or not the images
+# generated for formulas are transparent PNGs. Transparent PNGs are
+# not supported properly for IE 6.0, but are supported on all modern browsers.
+# Note that when changing this option you need to delete any form_*.png files
+# in the HTML output before the changes have effect.
+
+FORMULA_TRANSPARENT    = YES
+
+# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax
+# (see http://www.mathjax.org) which uses client side Javascript for the
+# rendering instead of using prerendered bitmaps. Use this if you do not
+# have LaTeX installed or if you want to formulas look prettier in the HTML
+# output. When enabled you may also need to install MathJax separately and
+# configure the path to it using the MATHJAX_RELPATH option.
+
+USE_MATHJAX            = NO
+
+# When MathJax is enabled you need to specify the location relative to the
+# HTML output directory using the MATHJAX_RELPATH option. The destination
+# directory should contain the MathJax.js script. For instance, if the mathjax
+# directory is located at the same level as the HTML output directory, then
+# MATHJAX_RELPATH should be ../mathjax. The default value points to
+# the MathJax Content Delivery Network so you can quickly see the result without
+# installing MathJax.
+# However, it is strongly recommended to install a local
+# copy of MathJax from http://www.mathjax.org before deployment.
+
+MATHJAX_RELPATH        = http://cdn.mathjax.org/mathjax/latest
+
+# The MATHJAX_EXTENSIONS tag can be used to specify one or MathJax extension
+# names that should be enabled during MathJax rendering.
+
+MATHJAX_EXTENSIONS     =
+
+# When the SEARCHENGINE tag is enabled doxygen will generate a search box
+# for the HTML output. The underlying search engine uses javascript
+# and DHTML and should work on any modern browser. Note that when using
+# HTML help (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets
+# (GENERATE_DOCSET) there is already a search function so this one should
+# typically be disabled. For large projects the javascript based search engine
+# can be slow, then enabling SERVER_BASED_SEARCH may provide a better solution.
+
+SEARCHENGINE           = YES
+
+# When the SERVER_BASED_SEARCH tag is enabled the search engine will be
+# implemented using a PHP enabled web server instead of at the web client
+# using Javascript. Doxygen will generate the search PHP script and index
+# file to put on the web server. The advantage of the server
+# based approach is that it scales better to large projects and allows
+# full text search. The disadvantages are that it is more difficult to setup
+# and does not have live searching capabilities.
+
+SERVER_BASED_SEARCH    = NO
+
+#---------------------------------------------------------------------------
+# configuration options related to the LaTeX output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will
+# generate Latex output.
+
+GENERATE_LATEX         = YES
+
+# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put.
+# If a relative path is entered the value of OUTPUT_DIRECTORY will be
+# put in front of it. If left blank `latex' will be used as the default path.
+
+LATEX_OUTPUT           = latex
+
+# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be
+# invoked. If left blank `latex' will be used as the default command name.
+# Note that when enabling USE_PDFLATEX this option is only used for
+# generating bitmaps for formulas in the HTML output, but not in the
+# Makefile that is written to the output directory.
+
+LATEX_CMD_NAME         = latex
+
+# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to
+# generate index for LaTeX. If left blank `makeindex' will be used as the
+# default command name.
+
+MAKEINDEX_CMD_NAME     = makeindex
+
+# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact
+# LaTeX documents. This may be useful for small projects and may help to
+# save some trees in general.
+
+COMPACT_LATEX          = NO
+
+# The PAPER_TYPE tag can be used to set the paper type that is used
+# by the printer. Possible values are: a4, letter, legal and
+# executive. If left blank a4wide will be used.
+
+PAPER_TYPE             = a4
+
+# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX
+# packages that should be included in the LaTeX output.
+
+EXTRA_PACKAGES         =
+
+# The LATEX_HEADER tag can be used to specify a personal LaTeX header for
+# the generated latex document. The header should contain everything until
+# the first chapter. If it is left blank doxygen will generate a
+# standard header. Notice: only use this tag if you know what you are doing!
+
+LATEX_HEADER           =
+
+# The LATEX_FOOTER tag can be used to specify a personal LaTeX footer for
+# the generated latex document. The footer should contain everything after
+# the last chapter. If it is left blank doxygen will generate a
+# standard footer. Notice: only use this tag if you know what you are doing!
+
+LATEX_FOOTER           =
+
+# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated
+# is prepared for conversion to pdf (using ps2pdf). The pdf file will
+# contain links (just like the HTML output) instead of page references
+# This makes the output suitable for online browsing using a pdf viewer.
+
+PDF_HYPERLINKS         = YES
+
+# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of
+# plain latex in the generated Makefile. Set this option to YES to get a
+# higher quality PDF documentation.
+
+USE_PDFLATEX           = YES
+
+# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\batchmode.
+# command to the generated LaTeX files. This will instruct LaTeX to keep
+# running if errors occur, instead of asking the user for help.
+# This option is also used when generating formulas in HTML.
+
+LATEX_BATCHMODE        = NO
+
+# If LATEX_HIDE_INDICES is set to YES then doxygen will not
+# include the index chapters (such as File Index, Compound Index, etc.)
+# in the output.
+
+LATEX_HIDE_INDICES     = NO
+
+# If LATEX_SOURCE_CODE is set to YES then doxygen will include
+# source code with syntax highlighting in the LaTeX output.
+# Note that which sources are shown also depends on other settings
+# such as SOURCE_BROWSER.
+
+LATEX_SOURCE_CODE      = NO
+
+# The LATEX_BIB_STYLE tag can be used to specify the style to use for the
+# bibliography, e.g. plainnat, or ieeetr. The default style is "plain". See
+# http://en.wikipedia.org/wiki/BibTeX for more info.
+
+LATEX_BIB_STYLE        = plain
+
+#---------------------------------------------------------------------------
+# configuration options related to the RTF output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output
+# The RTF output is optimized for Word 97 and may not look very pretty with
+# other RTF readers or editors.
+
+GENERATE_RTF           = NO
+
+# The RTF_OUTPUT tag is used to specify where the RTF docs will be put.
+# If a relative path is entered the value of OUTPUT_DIRECTORY will be
+# put in front of it. If left blank `rtf' will be used as the default path.
+
+RTF_OUTPUT             = rtf
+
+# If the COMPACT_RTF tag is set to YES Doxygen generates more compact
+# RTF documents. This may be useful for small projects and may help to
+# save some trees in general.
+
+COMPACT_RTF            = NO
+
+# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated
+# will contain hyperlink fields. The RTF file will
+# contain links (just like the HTML output) instead of page references.
+# This makes the output suitable for online browsing using WORD or other
+# programs which support those fields.
+# Note: wordpad (write) and others do not support links.
+
+RTF_HYPERLINKS         = NO
+
+# Load style sheet definitions from file. Syntax is similar to doxygen's
+# config file, i.e. a series of assignments. You only have to provide
+# replacements, missing definitions are set to their default value.
+
+RTF_STYLESHEET_FILE    =
+
+# Set optional variables used in the generation of an rtf document.
+# Syntax is similar to doxygen's config file.
+
+RTF_EXTENSIONS_FILE    =
+
+#---------------------------------------------------------------------------
+# configuration options related to the man page output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_MAN tag is set to YES (the default) Doxygen will
+# generate man pages
+
+GENERATE_MAN           = NO
+
+# The MAN_OUTPUT tag is used to specify where the man pages will be put.
+# If a relative path is entered the value of OUTPUT_DIRECTORY will be
+# put in front of it. If left blank `man' will be used as the default path.
+
+MAN_OUTPUT             = man
+
+# The MAN_EXTENSION tag determines the extension that is added to
+# the generated man pages (default is the subroutine's section .3)
+
+MAN_EXTENSION          = .3
+
+# If the MAN_LINKS tag is set to YES and Doxygen generates man output,
+# then it will generate one additional man file for each entity
+# documented in the real man page(s). These additional files
+# only source the real man page, but without them the man command
+# would be unable to find the correct page. The default is NO.
+
+MAN_LINKS              = NO
+
+#---------------------------------------------------------------------------
+# configuration options related to the XML output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_XML tag is set to YES Doxygen will
+# generate an XML file that captures the structure of
+# the code including all documentation.
+
+GENERATE_XML           = NO
+
+# The XML_OUTPUT tag is used to specify where the XML pages will be put.
+# If a relative path is entered the value of OUTPUT_DIRECTORY will be
+# put in front of it. If left blank `xml' will be used as the default path.
+
+XML_OUTPUT             = xml
+
+# The XML_SCHEMA tag can be used to specify an XML schema,
+# which can be used by a validating XML parser to check the
+# syntax of the XML files.
+
+XML_SCHEMA             =
+
+# The XML_DTD tag can be used to specify an XML DTD,
+# which can be used by a validating XML parser to check the
+# syntax of the XML files.
+
+XML_DTD                =
+
+# If the XML_PROGRAMLISTING tag is set to YES Doxygen will
+# dump the program listings (including syntax highlighting
+# and cross-referencing information) to the XML output. Note that
+# enabling this will significantly increase the size of the XML output.
+
+XML_PROGRAMLISTING     = YES
+
+#---------------------------------------------------------------------------
+# configuration options for the AutoGen Definitions output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_AUTOGEN_DEF tag is set to YES Doxygen will
+# generate an AutoGen Definitions (see autogen.sf.net) file
+# that captures the structure of the code including all
+# documentation. Note that this feature is still experimental
+# and incomplete at the moment.
+
+GENERATE_AUTOGEN_DEF   = NO
+
+#---------------------------------------------------------------------------
+# configuration options related to the Perl module output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_PERLMOD tag is set to YES Doxygen will
+# generate a Perl module file that captures the structure of
+# the code including all documentation. Note that this
+# feature is still experimental and incomplete at the
+# moment.
+
+GENERATE_PERLMOD       = NO
+
+# If the PERLMOD_LATEX tag is set to YES Doxygen will generate
+# the necessary Makefile rules, Perl scripts and LaTeX code to be able
+# to generate PDF and DVI output from the Perl module output.
+
+PERLMOD_LATEX          = NO
+
+# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be
+# nicely formatted so it can be parsed by a human reader.
+# This is useful
+# if you want to understand what is going on.
+# On the other hand, if this
+# tag is set to NO the size of the Perl module output will be much smaller
+# and Perl will parse it just the same.
+
+PERLMOD_PRETTY         = YES
+
+# The names of the make variables in the generated doxyrules.make file
+# are prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX.
+# This is useful so different doxyrules.make files included by the same
+# Makefile don't overwrite each other's variables.
+
+PERLMOD_MAKEVAR_PREFIX =
+
+#---------------------------------------------------------------------------
+# Configuration options related to the preprocessor
+#---------------------------------------------------------------------------
+
+# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will
+# evaluate all C-preprocessor directives found in the sources and include
+# files.
+
+ENABLE_PREPROCESSING   = YES
+
+# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro
+# names in the source code. If set to NO (the default) only conditional
+# compilation will be performed. Macro expansion can be done in a controlled
+# way by setting EXPAND_ONLY_PREDEF to YES.
+
+MACRO_EXPANSION        = NO
+
+# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES
+# then the macro expansion is limited to the macros specified with the
+# PREDEFINED and EXPAND_AS_DEFINED tags.
+
+EXPAND_ONLY_PREDEF     = NO
+
+# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files
+# pointed to by INCLUDE_PATH will be searched when a #include is found.
+
+SEARCH_INCLUDES        = YES
+
+# The INCLUDE_PATH tag can be used to specify one or more directories that
+# contain include files that are not input files but should be processed by
+# the preprocessor.
+
+INCLUDE_PATH           =
+
+# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard
+# patterns (like *.h and *.hpp) to filter out the header-files in the
+# directories. If left blank, the patterns specified with FILE_PATTERNS will
+# be used.
+
+INCLUDE_FILE_PATTERNS  =
+
+# The PREDEFINED tag can be used to specify one or more macro names that
+# are defined before the preprocessor is started (similar to the -D option of
+# gcc). The argument of the tag is a list of macros of the form: name
+# or name=definition (no spaces). If the definition and the = are
+# omitted =1 is assumed. To prevent a macro definition from being
+# undefined via #undef or recursively expanded use the := operator
+# instead of the = operator.
+
+PREDEFINED             =
+
+# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then
+# this tag can be used to specify a list of macro names that should be expanded.
+# The macro definition that is found in the sources will be used.
+# Use the PREDEFINED tag if you want to use a different macro definition that
+# overrules the definition found in the source code.
+
+EXPAND_AS_DEFINED      =
+
+# If the SKIP_FUNCTION_MACROS tag is set to YES (the default) then
+# doxygen's preprocessor will remove all references to function-like macros
+# that are alone on a line, have an all uppercase name, and do not end with a
+# semicolon, because these will confuse the parser if not removed.
+
+SKIP_FUNCTION_MACROS   = YES
+
+#---------------------------------------------------------------------------
+# Configuration::additions related to external references
+#---------------------------------------------------------------------------
+
+# The TAGFILES option can be used to specify one or more tagfiles. For each
+# tag file the location of the external documentation should be added. The
+# format of a tag file without this location is as follows:
+#
+# TAGFILES = file1 file2 ...
+# Adding location for the tag files is done as follows:
+#
+# TAGFILES = file1=loc1 "file2 = loc2" ...
+# where "loc1" and "loc2" can be relative or absolute paths
+# or URLs. Note that each tag file must have a unique name (where the name does
+# NOT include the path). If a tag file is not located in the directory in which
+# doxygen is run, you must also specify the path to the tagfile here.
+
+TAGFILES               =
+
+# When a file name is specified after GENERATE_TAGFILE, doxygen will create
+# a tag file that is based on the input files it reads.
+
+GENERATE_TAGFILE       =
+
+# If the ALLEXTERNALS tag is set to YES all external classes will be listed
+# in the class index. If set to NO only the inherited external classes
+# will be listed.
+
+ALLEXTERNALS           = NO
+
+# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed
+# in the modules index. If set to NO, only the current project's groups will
+# be listed.
+
+EXTERNAL_GROUPS        = YES
+
+# The PERL_PATH should be the absolute path and name of the perl script
+# interpreter (i.e. the result of `which perl').
+
+PERL_PATH              = /usr/bin/perl
+
+#---------------------------------------------------------------------------
+# Configuration options related to the dot tool
+#---------------------------------------------------------------------------
+
+# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will
+# generate a inheritance diagram (in HTML, RTF and LaTeX) for classes with base
+# or super classes. Setting the tag to NO turns the diagrams off. Note that
+# this option also works with HAVE_DOT disabled, but it is recommended to
+# install and use dot, since it yields more powerful graphs.
+
+CLASS_DIAGRAMS         = YES
+
+# You can define message sequence charts within doxygen comments using the \msc
+# command. Doxygen will then run the mscgen tool (see
+# http://www.mcternan.me.uk/mscgen/) to produce the chart and insert it in the
+# documentation. The MSCGEN_PATH tag allows you to specify the directory where
+# the mscgen tool resides. If left empty the tool is assumed to be found in the
+# default search path.
+
+MSCGEN_PATH            =
+
+# If set to YES, the inheritance and collaboration graphs will hide
+# inheritance and usage relations if the target is undocumented
+# or is not a class.
+
+HIDE_UNDOC_RELATIONS   = YES
+
+# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is
+# available from the path. This tool is part of Graphviz, a graph visualization
+# toolkit from AT&T and Lucent Bell Labs. The other options in this section
+# have no effect if this option is set to NO (the default)
+
+HAVE_DOT               = YES
+
+# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is
+# allowed to run in parallel. When set to 0 (the default) doxygen will
+# base this on the number of processors available in the system. You can set it
+# explicitly to a value larger than 0 to get control over the balance
+# between CPU load and processing speed.
+
+DOT_NUM_THREADS        = 0
+
+# By default doxygen will use the Helvetica font for all dot files that
+# doxygen generates. When you want a differently looking font you can specify
+# the font name using DOT_FONTNAME. You need to make sure dot is able to find
+# the font, which can be done by putting it in a standard location or by setting
+# the DOTFONTPATH environment variable or by setting DOT_FONTPATH to the
+# directory containing the font.
+
+DOT_FONTNAME           = Helvetica
+
+# The DOT_FONTSIZE tag can be used to set the size of the font of dot graphs.
+# The default size is 10pt.
+
+DOT_FONTSIZE           = 10
+
+# By default doxygen will tell dot to use the Helvetica font.
+# If you specify a different font using DOT_FONTNAME you can use DOT_FONTPATH to
+# set the path where dot can find it.
+
+DOT_FONTPATH           =
+
+# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen
+# will generate a graph for each documented class showing the direct and
+# indirect inheritance relations. Setting this tag to YES will force the
+# CLASS_DIAGRAMS tag to NO.
+
+CLASS_GRAPH            = YES
+
+# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen
+# will generate a graph for each documented class showing the direct and
+# indirect implementation dependencies (inheritance, containment, and
+# class references variables) of the class with other documented classes.
+
+COLLABORATION_GRAPH    = YES
+
+# If the GROUP_GRAPHS and HAVE_DOT tags are set to YES then doxygen
+# will generate a graph for groups, showing the direct groups dependencies
+
+GROUP_GRAPHS           = YES
+
+# If the UML_LOOK tag is set to YES doxygen will generate inheritance and
+# collaboration diagrams in a style similar to the OMG's Unified Modeling
+# Language.
+
+UML_LOOK               = NO
+
+# If the UML_LOOK tag is enabled, the fields and methods are shown inside
+# the class node. If there are many fields or methods and many nodes the
+# graph may become too big to be useful. The UML_LIMIT_NUM_FIELDS
+# threshold limits the number of items for each type to make the size more
+# managable. Set this to 0 for no limit. Note that the threshold may be
+# exceeded by 50% before the limit is enforced.
+
+UML_LIMIT_NUM_FIELDS   = 10
+
+# If set to YES, the inheritance and collaboration graphs will show the
+# relations between templates and their instances.
+
+TEMPLATE_RELATIONS     = NO
+
+# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and HAVE_DOT
+# tags are set to YES then doxygen will generate a graph for each documented
+# file showing the direct and indirect include dependencies of the file with
+# other documented files.
+
+INCLUDE_GRAPH          = YES
+
+# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDED_BY_GRAPH, and
+# HAVE_DOT tags are set to YES then doxygen will generate a graph for each
+# documented header file showing the documented files that directly or
+# indirectly include this file.
+
+INCLUDED_BY_GRAPH      = YES
+
+# If the CALL_GRAPH and HAVE_DOT options are set to YES then
+# doxygen will generate a call dependency graph for every global function
+# or class method. Note that enabling this option will significantly increase
+# the time of a run. So in most cases it will be better to enable call graphs
+# for selected functions only using the \callgraph command.
+
+CALL_GRAPH             = YES
+
+# If the CALLER_GRAPH and HAVE_DOT tags are set to YES then
+# doxygen will generate a caller dependency graph for every global function
+# or class method. Note that enabling this option will significantly increase
+# the time of a run. So in most cases it will be better to enable caller
+# graphs for selected functions only using the \callergraph command.
+
+CALLER_GRAPH           = YES
+
+# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen
+# will generate a graphical hierarchy of all classes instead of a textual one.
+
+GRAPHICAL_HIERARCHY    = YES
+
+# If the DIRECTORY_GRAPH and HAVE_DOT tags are set to YES
+# then doxygen will show the dependencies a directory has on other directories
+# in a graphical way. The dependency relations are determined by the #include
+# relations between the files in the directories.
+
+DIRECTORY_GRAPH        = YES
+
+# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images
+# generated by dot. Possible values are svg, png, jpg, or gif.
+# If left blank png will be used. If you choose svg you need to set
+# HTML_FILE_EXTENSION to xhtml in order to make the SVG files
+# visible in IE 9+ (other browsers do not have this requirement).
+
+DOT_IMAGE_FORMAT       = svg
+
+# If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to
+# enable generation of interactive SVG images that allow zooming and panning.
+# Note that this requires a modern browser other than Internet Explorer.
+# Tested and working are Firefox, Chrome, Safari, and Opera. For IE 9+ you
+# need to set HTML_FILE_EXTENSION to xhtml in order to make the SVG files
+# visible. Older versions of IE do not have SVG support.
+
+INTERACTIVE_SVG        = NO
+
+# The tag DOT_PATH can be used to specify the path where the dot tool can be
+# found. If left blank, it is assumed the dot tool can be found in the path.
+
+DOT_PATH               =
+
+# The DOTFILE_DIRS tag can be used to specify one or more directories that
+# contain dot files that are included in the documentation (see the
+# \dotfile command).
+
+DOTFILE_DIRS           =
+
+# The MSCFILE_DIRS tag can be used to specify one or more directories that
+# contain msc files that are included in the documentation (see the
+# \mscfile command).
+
+MSCFILE_DIRS           =
+
+# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of
+# nodes that will be shown in the graph. If the number of nodes in a graph
+# becomes larger than this value, doxygen will truncate the graph, which is
+# visualized by representing a node as a red box. Note that doxygen if the
+# number of direct children of the root node in a graph is already larger than
+# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note
+# that the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.
+
+DOT_GRAPH_MAX_NODES    = 50
+
+# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the
+# graphs generated by dot. A depth value of 3 means that only nodes reachable
+# from the root by following a path via at most 3 edges will be shown. Nodes
+# that lay further from the root node will be omitted. Note that setting this
+# option to 1 or 2 may greatly reduce the computation time needed for large
+# code bases. Also note that the size of a graph can be further restricted by
+# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.
+
+MAX_DOT_GRAPH_DEPTH    = 0
+
+# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent
+# background. This is disabled by default, because dot on Windows does not
+# seem to support this out of the box. Warning: Depending on the platform used,
+# enabling this option may lead to badly anti-aliased labels on the edges of
+# a graph (i.e. they become hard to read).
+
+DOT_TRANSPARENT        = NO
+
+# Set the DOT_MULTI_TARGETS tag to YES allow dot to generate multiple output
+# files in one run (i.e. multiple -o and -T options on the command line). This
+# makes dot run faster, but since only newer versions of dot (>1.8.10)
+# support this, this feature is disabled by default.
+
+DOT_MULTI_TARGETS      = NO
+
+# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will
+# generate a legend page explaining the meaning of the various boxes and
+# arrows in the dot generated graphs.
+
+GENERATE_LEGEND        = YES
+
+# If the DOT_CLEANUP tag is set to YES (the default) Doxygen will
+# remove the intermediate dot files that are used to generate
+# the various graphs.
+
+DOT_CLEANUP            = YES
diff --git a/linux-3.17.1/net/gmtp/doc/gmtp_initialization_diagram.txt b/linux-3.17.1/net/gmtp/doc/gmtp_initialization_diagram.txt
new file mode 100644
index 0000000..9d31b05
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/gmtp_initialization_diagram.txt
@@ -0,0 +1,146 @@
++-------------+
+|  gmtp_init  |
++------+------+
+       |
+       v
++----------------------+
+|  gmtp_init_hashinfo  |
++------+---------------+
+       |
+       v
++----------------+
+|  gmtp_v4_init  |
++------+---------+
+       |                 +---------------------+
+       v               +>|  gmtp_v4_init_sock  |
++------------------+   | +---------------------+
+|  proto_register  +---+                      
++------+-----------+
+       |           
+       v
++---------------------+
+|  inet_add_protocol  |
++------+--------------+
+       |
+       v
++-------------------------+
+|  inet_register_protosw  |
++------+------------------+
+       |                         +--------------------+
+       v                      +->|  gmtp_v4_init_net  |
++--------------------------+  |  +--------------------+
+|  register_pernet_subsys  +--+  +----------------+
++--------------------------+  +->|  gmtp_connect  |
+                                 +----------------+
+
+       
++---------------------+                      +-----------------------+
+|       CLIENT        |                      |        SERVER         |
++----------+----------+                      +-----------+-----------+
+           |                                             |
+           v                                             v
++---------------------+                      +---------------------+
+|  gmtp_v4_init_sock  |                      |  gmtp_v4_init_sock  |
++----------+----------+                      +-----------+---------+
+           |                                             |
+           v                                             v
++-------------------+                        +------------------+
+|  gmtp_init_sock   |                        |  gmtp_init_sock  |----+
++----------+--------+                        +------+-----------+    |
+           |                                        |                v
+           v                                        |         +------+-------+
++-------------------+                               |         |  inet_bind   |
+|  gmtp_v4_connect  |                               |         +--------------+
++----------+--------+                               v
+           |                                 +--------------------+
+           v                                 |  inet_gmtp_listen  |
++----------------+                           +---+----------------+
+|  gmtp_connect  |                               |   
++-+--------+-----+                               +->state = GMTP_LISTEN
+  |        |                                 
+  |        v     +->state = GMTP_REQUESTING                                        
+  | +------------+-----+                                                           
+  | |  gmtp_set_state  |                                                           
+  v +------------------+                                                           
++---------------------+                                                            
+|  gmtp_transmit_skb   |                                                           
++--------+-------------+                                                           
+         |                                                                         
+         v                                                                         
++----------------------------+                                                     
+|  icsk_af_ops->queue=xmit   +------+        +---------------+                     
++----------------------------+      +------->|  gmtp_v4_rcv  | --> gmtp_v4_do_rcv  
+                                             +--------+------+         |           
+                                                      v                |           
+                                             +--------+----------+ <---+           
+                                             |  gmtp_v4_hnd_req  |                 
+                                             +--------+----------+                 
+                                                      |                            
+                                                      v                            
+                                             +-------------------------+           
+                                             |  gmtp_rcv_state_process |           
+                                             +----+-+------------------+           
+                                                  | |                              
++----------------+                                | +->state = GMTP_LISTEN         
+|  gmtp_v4_rcv   |<-----------------+             v                                
++-------+--------+                  |        +-----------------------------+       
+        |                           |        |  inet_csk(sk)               |       
+        v                           |        |      icsk_af_conn_request   |       
++-----------------+                 |        +----+------------------------+       
+|  sk_receive_skb |                 |             |                                
++-------+---------+                 |             v                                
+        |                           |        +-------------------------+           
+        v                           |        |  gmtp_v4_conn_request   |          
++------------------+                |        +----+------------------+-+           
+|  sk_backlog_rcv  |                |             |                  |             
++-------+----------+                |             v                  |             
+        |                           |        +--------------------+  |        
+        v                           |        |  gmtp_reqsk_init   |  |        
++-------------------+               |        +--------------------+  |        
+|  gmtp_v4_do_rcv   |               |                                |             
++-------+-----------+               |                                v            
+        |                           |        +--------------------------+      
+        v                           |        |  gmtp_v4_send_response   |      
++---------------------------+       |        +----+---------------------+      
+|  gmtp_v4_ctl_send_reset   |       |             |                            
++-------+-------------------+       |             v                            
+        |                           |        +-----------------------+         
+        v                           +--------|  gmtp_make_response   |         
++------------------+                         +-----------+-----------+         
+|  gmtp_cont_skb   |                                     |                     
++-------+----------+                                     v                     
+        |                                    +--------------------------+      
+        v                                    +  ip_build_and_send_pkt   |      
++------------------------+                   +--------------------------+      
+|  gmtp_ctl_make_reset   |                                                     
++-------+----------------+                                                     
+        |                                                                      
+        v                                                                      
++------------------------+                                                     
+|  gmtp_invalid_packet   |                                                     
++-------+----------------+                                                     
+        |                                                                      
+        v                                                                      
++--------------------------------+                                             
+|  no_gmtp_packet(gmtp_v4_rcv)   |                                             
++-------+------------------------+                                             
+        |                                                                      
+        v                                                                      
++----------------------------+                                                 
+|  discard_it(gmtp_v4_rcv)   |                                                 
++----------------------------+                                                 
+                                                                               
+                                                                               
+                                   
+                                   
+                                   
+                                   
+                                   
+                                   
+                                   
+                                   
++-----------------------------+    
+|                             |    
++-----------------------------+    
+                                   
+                                   
diff --git a/linux-3.17.1/net/gmtp/doc/html/annotated.html b/linux-3.17.1/net/gmtp/doc/html/annotated.html
new file mode 100644
index 0000000..a507119
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/annotated.html
@@ -0,0 +1,101 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: Data Structures</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li class="current"><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li class="current"><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li><a href="classes.html"><span>Data&#160;Structure&#160;Index</span></a></li>
+      <li><a href="functions.html"><span>Data&#160;Fields</span></a></li>
+    </ul>
+  </div>
+</div><!-- top -->
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+<div class="header">
+  <div class="headertitle">
+<div class="title">Data Structures</div>  </div>
+</div><!--header-->
+<div class="contents">
+<div class="textblock">Here are the data structures with brief descriptions:</div><div class="directory">
+<table class="directory">
+<tr id="row_0_" class="even"><td class="entry"><img src="ftv2node.png" alt="o" width="16" height="22" /><img src="ftv2cl.png" alt="C" width="24" height="22" /><a class="el" href="gmtp_8h.html#structgmtp__skb__cb" target="_self">gmtp_skb_cb</a></td><td class="desc"></td></tr>
+<tr id="row_1_"><td class="entry"><img src="ftv2node.png" alt="o" width="16" height="22" /><img src="ftv2cl.png" alt="C" width="24" height="22" /><a class="el" href="namespace_3globalScope_4.html#classpra__testar" target="_self">pra_testar</a></td><td class="desc"></td></tr>
+<tr id="row_2_" class="even"><td class="entry"><img src="ftv2lastnode.png" alt="\" width="16" height="22" /><img src="ftv2cl.png" alt="C" width="24" height="22" /><a class="el" href="namespace_3globalScope_4.html#protocolThis-p" target="_self">&lt;This&gt;</a></td><td class="desc"></td></tr>
+</table>
+</div><!-- directory -->
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/bc_s.png b/linux-3.17.1/net/gmtp/doc/html/bc_s.png
new file mode 100644
index 0000000..25e3beb
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/bc_s.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/bdwn.png b/linux-3.17.1/net/gmtp/doc/html/bdwn.png
new file mode 100644
index 0000000..940a0b9
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/bdwn.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/classes.html b/linux-3.17.1/net/gmtp/doc/html/classes.html
new file mode 100644
index 0000000..2f9b59c
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/classes.html
@@ -0,0 +1,105 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: Data Structure Index</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li class="current"><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li class="current"><a href="classes.html"><span>Data&#160;Structure&#160;Index</span></a></li>
+      <li><a href="functions.html"><span>Data&#160;Fields</span></a></li>
+    </ul>
+  </div>
+</div><!-- top -->
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+<div class="header">
+  <div class="headertitle">
+<div class="title">Data Structure Index</div>  </div>
+</div><!--header-->
+<div class="contents">
+<div class="qindex"><a class="qindex" href="#letter_G">G</a>&#160;|&#160;<a class="qindex" href="#letter_P">P</a>&#160;|&#160;<a class="qindex" href="#letter_T">T</a></div>
+<table style="margin: 10px; white-space: nowrap;" align="center" width="95%" border="0" cellspacing="0" cellpadding="0">
+<tr><td rowspan="2" valign="bottom"><a name="letter_G"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;G&#160;&#160;</div></td></tr></table>
+</td><td rowspan="2" valign="bottom"><a name="letter_P"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;P&#160;&#160;</div></td></tr></table>
+</td><td rowspan="2" valign="bottom"><a name="letter_T"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;T&#160;&#160;</div></td></tr></table>
+</td><td></td></tr>
+<tr><td></td></tr>
+<tr><td valign="top"><a class="el" href="gmtp_8h.html#structgmtp__skb__cb">gmtp_skb_cb</a>&#160;&#160;&#160;</td><td valign="top"><a class="el" href="namespace_3globalScope_4.html#classpra__testar">pra_testar</a>&#160;&#160;&#160;</td><td valign="top"><a class="el" href="namespace_3globalScope_4.html#protocolThis-p">This</a>&#160;&#160;&#160;</td><td></td></tr>
+<tr><td></td><td></td><td></td><td></td></tr>
+</table>
+<div class="qindex"><a class="qindex" href="#letter_G">G</a>&#160;|&#160;<a class="qindex" href="#letter_P">P</a>&#160;|&#160;<a class="qindex" href="#letter_T">T</a></div>
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/closed.png b/linux-3.17.1/net/gmtp/doc/html/closed.png
new file mode 100644
index 0000000..98cc2c9
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/closed.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/doxygen.css b/linux-3.17.1/net/gmtp/doc/html/doxygen.css
new file mode 100644
index 0000000..8589450
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/doxygen.css
@@ -0,0 +1,1156 @@
+/* The standard CSS for doxygen */
+
+body, table, div, p, dl {
+	font-family: Lucida Grande, Verdana, Geneva, Arial, sans-serif;
+	font-size: 13px;
+	line-height: 1.3;
+}
+
+/* @group Heading Levels */
+
+h1 {
+	font-size: 150%;
+}
+
+.title {
+	font-size: 150%;
+	font-weight: bold;
+	margin: 10px 2px;
+}
+
+h2 {
+	font-size: 120%;
+}
+
+h3 {
+	font-size: 100%;
+}
+
+h1, h2, h3, h4, h5, h6 {
+	-webkit-transition: text-shadow 0.5s linear;
+	-moz-transition: text-shadow 0.5s linear;
+	-ms-transition: text-shadow 0.5s linear;
+	-o-transition: text-shadow 0.5s linear;
+	transition: text-shadow 0.5s linear;
+	margin-right: 15px;
+}
+
+h1.glow, h2.glow, h3.glow, h4.glow, h5.glow, h6.glow {
+	text-shadow: 0 0 15px cyan;
+}
+
+dt {
+	font-weight: bold;
+}
+
+div.multicol {
+	-moz-column-gap: 1em;
+	-webkit-column-gap: 1em;
+	-moz-column-count: 3;
+	-webkit-column-count: 3;
+}
+
+p.startli, p.startdd, p.starttd {
+	margin-top: 2px;
+}
+
+p.endli {
+	margin-bottom: 0px;
+}
+
+p.enddd {
+	margin-bottom: 4px;
+}
+
+p.endtd {
+	margin-bottom: 2px;
+}
+
+/* @end */
+
+caption {
+	font-weight: bold;
+}
+
+span.legend {
+        font-size: 70%;
+        text-align: center;
+}
+
+h3.version {
+        font-size: 90%;
+        text-align: center;
+}
+
+div.qindex, div.navtab{
+	background-color: #EBEFF6;
+	border: 1px solid #A3B4D7;
+	text-align: center;
+}
+
+div.qindex, div.navpath {
+	width: 100%;
+	line-height: 140%;
+}
+
+div.navtab {
+	margin-right: 15px;
+}
+
+/* @group Link Styling */
+
+a {
+	color: #3D578C;
+	font-weight: normal;
+	text-decoration: none;
+}
+
+.contents a:visited {
+	color: #4665A2;
+}
+
+a:hover {
+	text-decoration: underline;
+}
+
+a.qindex {
+	font-weight: bold;
+}
+
+a.qindexHL {
+	font-weight: bold;
+	background-color: #9CAFD4;
+	color: #ffffff;
+	border: 1px double #869DCA;
+}
+
+.contents a.qindexHL:visited {
+        color: #ffffff;
+}
+
+a.el {
+	font-weight: bold;
+}
+
+a.elRef {
+}
+
+a.code, a.code:visited {
+	color: #4665A2; 
+}
+
+a.codeRef, a.codeRef:visited {
+	color: #4665A2; 
+}
+
+/* @end */
+
+dl.el {
+	margin-left: -1cm;
+}
+
+pre.fragment {
+        border: 1px solid #C4CFE5;
+        background-color: #FBFCFD;
+        padding: 4px 6px;
+        margin: 4px 8px 4px 2px;
+        overflow: auto;
+        word-wrap: break-word;
+        font-size:  9pt;
+        line-height: 125%;
+        font-family: monospace, fixed;
+        font-size: 105%;
+}
+
+div.fragment {
+        padding: 4px;
+        margin: 4px;
+	background-color: #FBFCFD;
+	border: 1px solid #C4CFE5;
+}
+
+div.line {
+	font-family: monospace, fixed;
+        font-size: 13px;
+	min-height: 13px;
+	line-height: 1.0;
+	text-wrap: unrestricted;
+	white-space: -moz-pre-wrap; /* Moz */
+	white-space: -pre-wrap;     /* Opera 4-6 */
+	white-space: -o-pre-wrap;   /* Opera 7 */
+	white-space: pre-wrap;      /* CSS3  */
+	word-wrap: break-word;      /* IE 5.5+ */
+	text-indent: -53px;
+	padding-left: 53px;
+	padding-bottom: 0px;
+	margin: 0px;
+	-webkit-transition-property: background-color, box-shadow;
+	-webkit-transition-duration: 0.5s;
+	-moz-transition-property: background-color, box-shadow;
+	-moz-transition-duration: 0.5s;
+	-ms-transition-property: background-color, box-shadow;
+	-ms-transition-duration: 0.5s;
+	-o-transition-property: background-color, box-shadow;
+	-o-transition-duration: 0.5s;
+	transition-property: background-color, box-shadow;
+	transition-duration: 0.5s;
+}
+
+div.line.glow {
+	background-color: cyan;
+	box-shadow: 0 0 10px cyan;
+}
+
+
+span.lineno {
+	padding-right: 4px;
+	text-align: right;
+	border-right: 2px solid #0F0;
+	background-color: #E8E8E8;
+        white-space: pre;
+}
+span.lineno a {
+	background-color: #D8D8D8;
+}
+
+span.lineno a:hover {
+	background-color: #C8C8C8;
+}
+
+div.ah {
+	background-color: black;
+	font-weight: bold;
+	color: #ffffff;
+	margin-bottom: 3px;
+	margin-top: 3px;
+	padding: 0.2em;
+	border: solid thin #333;
+	border-radius: 0.5em;
+	-webkit-border-radius: .5em;
+	-moz-border-radius: .5em;
+	box-shadow: 2px 2px 3px #999;
+	-webkit-box-shadow: 2px 2px 3px #999;
+	-moz-box-shadow: rgba(0, 0, 0, 0.15) 2px 2px 2px;
+	background-image: -webkit-gradient(linear, left top, left bottom, from(#eee), to(#000),color-stop(0.3, #444));
+	background-image: -moz-linear-gradient(center top, #eee 0%, #444 40%, #000);
+}
+
+div.groupHeader {
+	margin-left: 16px;
+	margin-top: 12px;
+	font-weight: bold;
+}
+
+div.groupText {
+	margin-left: 16px;
+	font-style: italic;
+}
+
+body {
+	background-color: white;
+	color: black;
+        margin: 0;
+}
+
+div.contents {
+	margin-top: 10px;
+	margin-left: 12px;
+	margin-right: 8px;
+}
+
+td.indexkey {
+	background-color: #EBEFF6;
+	font-weight: bold;
+	border: 1px solid #C4CFE5;
+	margin: 2px 0px 2px 0;
+	padding: 2px 10px;
+        white-space: nowrap;
+        vertical-align: top;
+}
+
+td.indexvalue {
+	background-color: #EBEFF6;
+	border: 1px solid #C4CFE5;
+	padding: 2px 10px;
+	margin: 2px 0px;
+}
+
+tr.memlist {
+	background-color: #EEF1F7;
+}
+
+p.formulaDsp {
+	text-align: center;
+}
+
+img.formulaDsp {
+	
+}
+
+img.formulaInl {
+	vertical-align: middle;
+}
+
+div.center {
+	text-align: center;
+        margin-top: 0px;
+        margin-bottom: 0px;
+        padding: 0px;
+}
+
+div.center img {
+	border: 0px;
+}
+
+address.footer {
+	text-align: right;
+	padding-right: 12px;
+}
+
+img.footer {
+	border: 0px;
+	vertical-align: middle;
+}
+
+/* @group Code Colorization */
+
+span.keyword {
+	color: #008000
+}
+
+span.keywordtype {
+	color: #604020
+}
+
+span.keywordflow {
+	color: #e08000
+}
+
+span.comment {
+	color: #800000
+}
+
+span.preprocessor {
+	color: #806020
+}
+
+span.stringliteral {
+	color: #002080
+}
+
+span.charliteral {
+	color: #008080
+}
+
+span.vhdldigit { 
+	color: #ff00ff 
+}
+
+span.vhdlchar { 
+	color: #000000 
+}
+
+span.vhdlkeyword { 
+	color: #700070 
+}
+
+span.vhdllogic { 
+	color: #ff0000 
+}
+
+blockquote {
+        background-color: #F7F8FB;
+        border-left: 2px solid #9CAFD4;
+        margin: 0 24px 0 4px;
+        padding: 0 12px 0 16px;
+}
+
+/* @end */
+
+/*
+.search {
+	color: #003399;
+	font-weight: bold;
+}
+
+form.search {
+	margin-bottom: 0px;
+	margin-top: 0px;
+}
+
+input.search {
+	font-size: 75%;
+	color: #000080;
+	font-weight: normal;
+	background-color: #e8eef2;
+}
+*/
+
+td.tiny {
+	font-size: 75%;
+}
+
+.dirtab {
+	padding: 4px;
+	border-collapse: collapse;
+	border: 1px solid #A3B4D7;
+}
+
+th.dirtab {
+	background: #EBEFF6;
+	font-weight: bold;
+}
+
+hr {
+	height: 0px;
+	border: none;
+	border-top: 1px solid #4A6AAA;
+}
+
+hr.footer {
+	height: 1px;
+}
+
+/* @group Member Descriptions */
+
+table.memberdecls {
+	border-spacing: 0px;
+	padding: 0px;
+}
+
+.memberdecls td {
+	-webkit-transition-property: background-color, box-shadow;
+	-webkit-transition-duration: 0.5s;
+	-moz-transition-property: background-color, box-shadow;
+	-moz-transition-duration: 0.5s;
+	-ms-transition-property: background-color, box-shadow;
+	-ms-transition-duration: 0.5s;
+	-o-transition-property: background-color, box-shadow;
+	-o-transition-duration: 0.5s;
+	transition-property: background-color, box-shadow;
+	transition-duration: 0.5s;
+}
+
+.memberdecls td.glow {
+	background-color: cyan;
+	box-shadow: 0 0 15px cyan;
+}
+
+.mdescLeft, .mdescRight,
+.memItemLeft, .memItemRight,
+.memTemplItemLeft, .memTemplItemRight, .memTemplParams {
+	background-color: #F9FAFC;
+	border: none;
+	margin: 4px;
+	padding: 1px 0 0 8px;
+}
+
+.mdescLeft, .mdescRight {
+	padding: 0px 8px 4px 8px;
+	color: #555;
+}
+
+.memItemLeft, .memItemRight, .memTemplParams {
+	border-top: 1px solid #C4CFE5;
+}
+
+.memItemLeft, .memTemplItemLeft {
+        white-space: nowrap;
+}
+
+.memItemRight {
+	width: 100%;
+}
+
+.memTemplParams {
+	color: #4665A2;
+        white-space: nowrap;
+}
+
+/* @end */
+
+/* @group Member Details */
+
+/* Styles for detailed member documentation */
+
+.memtemplate {
+	font-size: 80%;
+	color: #4665A2;
+	font-weight: normal;
+	margin-left: 9px;
+}
+
+.memnav {
+	background-color: #EBEFF6;
+	border: 1px solid #A3B4D7;
+	text-align: center;
+	margin: 2px;
+	margin-right: 15px;
+	padding: 2px;
+}
+
+.mempage {
+	width: 100%;
+}
+
+.memitem {
+	padding: 0;
+	margin-bottom: 10px;
+	margin-right: 5px;
+        -webkit-transition: box-shadow 0.5s linear;
+        -moz-transition: box-shadow 0.5s linear;
+        -ms-transition: box-shadow 0.5s linear;
+        -o-transition: box-shadow 0.5s linear;
+        transition: box-shadow 0.5s linear;
+        display: table !important;
+        width: 100%;
+}
+
+.memitem.glow {
+         box-shadow: 0 0 15px cyan;
+}
+
+.memname {
+        font-weight: bold;
+        margin-left: 6px;
+}
+
+.memname td {
+	vertical-align: bottom;
+}
+
+.memproto, dl.reflist dt {
+        border-top: 1px solid #A8B8D9;
+        border-left: 1px solid #A8B8D9;
+        border-right: 1px solid #A8B8D9;
+        padding: 6px 0px 6px 0px;
+        color: #253555;
+        font-weight: bold;
+        text-shadow: 0px 1px 1px rgba(255, 255, 255, 0.9);
+        background-image:url('nav_f.png');
+        background-repeat:repeat-x;
+        background-color: #E2E8F2;
+        /* opera specific markup */
+        box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.15);
+        border-top-right-radius: 4px;
+        border-top-left-radius: 4px;
+        /* firefox specific markup */
+        -moz-box-shadow: rgba(0, 0, 0, 0.15) 5px 5px 5px;
+        -moz-border-radius-topright: 4px;
+        -moz-border-radius-topleft: 4px;
+        /* webkit specific markup */
+        -webkit-box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.15);
+        -webkit-border-top-right-radius: 4px;
+        -webkit-border-top-left-radius: 4px;
+
+}
+
+.memdoc, dl.reflist dd {
+        border-bottom: 1px solid #A8B8D9;      
+        border-left: 1px solid #A8B8D9;      
+        border-right: 1px solid #A8B8D9; 
+        padding: 6px 10px 2px 10px;
+        background-color: #FBFCFD;
+        border-top-width: 0;
+        background-image:url('nav_g.png');
+        background-repeat:repeat-x;
+        background-color: #FFFFFF;
+        /* opera specific markup */
+        border-bottom-left-radius: 4px;
+        border-bottom-right-radius: 4px;
+        box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.15);
+        /* firefox specific markup */
+        -moz-border-radius-bottomleft: 4px;
+        -moz-border-radius-bottomright: 4px;
+        -moz-box-shadow: rgba(0, 0, 0, 0.15) 5px 5px 5px;
+        /* webkit specific markup */
+        -webkit-border-bottom-left-radius: 4px;
+        -webkit-border-bottom-right-radius: 4px;
+        -webkit-box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.15);
+}
+
+dl.reflist dt {
+        padding: 5px;
+}
+
+dl.reflist dd {
+        margin: 0px 0px 10px 0px;
+        padding: 5px;
+}
+
+.paramkey {
+	text-align: right;
+}
+
+.paramtype {
+	white-space: nowrap;
+}
+
+.paramname {
+	color: #602020;
+	white-space: nowrap;
+}
+.paramname em {
+	font-style: normal;
+}
+.paramname code {
+        line-height: 14px;
+}
+
+.params, .retval, .exception, .tparams {
+        margin-left: 0px;
+        padding-left: 0px;
+}       
+
+.params .paramname, .retval .paramname {
+        font-weight: bold;
+        vertical-align: top;
+}
+        
+.params .paramtype {
+        font-style: italic;
+        vertical-align: top;
+}       
+        
+.params .paramdir {
+        font-family: "courier new",courier,monospace;
+        vertical-align: top;
+}
+
+table.mlabels {
+	border-spacing: 0px;
+}
+
+td.mlabels-left {
+	width: 100%;
+	padding: 0px;
+}
+
+td.mlabels-right {
+	vertical-align: bottom;
+	padding: 0px;
+	white-space: nowrap;
+}
+
+span.mlabels {
+        margin-left: 8px;
+}
+
+span.mlabel {
+        background-color: #728DC1;
+        border-top:1px solid #5373B4;
+        border-left:1px solid #5373B4;
+        border-right:1px solid #C4CFE5;
+        border-bottom:1px solid #C4CFE5;
+	text-shadow: none;
+        color: white;
+        margin-right: 4px;
+        padding: 2px 3px;
+        border-radius: 3px;
+        font-size: 7pt;
+	white-space: nowrap;
+}
+
+
+
+/* @end */
+
+/* these are for tree view when not used as main index */
+
+div.directory {
+        margin: 10px 0px;
+        border-top: 1px solid #A8B8D9;
+        border-bottom: 1px solid #A8B8D9;
+        width: 100%;
+}
+
+.directory table {
+        border-collapse:collapse;
+}
+
+.directory td {
+        margin: 0px;
+        padding: 0px;
+	vertical-align: top;
+}
+
+.directory td.entry {
+        white-space: nowrap;
+        padding-right: 6px;
+}
+
+.directory td.entry a {
+        outline:none;
+}
+
+.directory td.entry a img {
+        border: none;
+}
+
+.directory td.desc {
+        width: 100%;
+        padding-left: 6px;
+	padding-right: 6px;
+	border-left: 1px solid rgba(0,0,0,0.05);
+}
+
+.directory tr.even {
+	padding-left: 6px;
+	background-color: #F7F8FB;
+}
+
+.directory img {
+	vertical-align: -30%;
+}
+
+.directory .levels {
+        white-space: nowrap;
+        width: 100%;
+        text-align: right;
+        font-size: 9pt;
+}
+
+.directory .levels span {
+        cursor: pointer;
+        padding-left: 2px;
+        padding-right: 2px;
+	color: #3D578C;
+}
+
+div.dynheader {
+        margin-top: 8px;
+	-webkit-touch-callout: none;
+	-webkit-user-select: none;
+	-khtml-user-select: none;
+	-moz-user-select: none;
+	-ms-user-select: none;
+	user-select: none;
+}
+
+address {
+	font-style: normal;
+	color: #2A3D61;
+}
+
+table.doxtable {
+	border-collapse:collapse;
+        margin-top: 4px;
+        margin-bottom: 4px;
+}
+
+table.doxtable td, table.doxtable th {
+	border: 1px solid #2D4068;
+	padding: 3px 7px 2px;
+}
+
+table.doxtable th {
+	background-color: #374F7F;
+	color: #FFFFFF;
+	font-size: 110%;
+	padding-bottom: 4px;
+	padding-top: 5px;
+}
+
+table.fieldtable {
+        width: 100%;
+        margin-bottom: 10px;
+        border: 1px solid #A8B8D9;
+        border-spacing: 0px;
+        -moz-border-radius: 4px;
+        -webkit-border-radius: 4px;
+        border-radius: 4px;
+        -moz-box-shadow: rgba(0, 0, 0, 0.15) 2px 2px 2px;
+        -webkit-box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.15);
+        box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.15);
+}
+
+.fieldtable td, .fieldtable th {
+        padding: 3px 7px 2px;
+}
+
+.fieldtable td.fieldtype, .fieldtable td.fieldname {
+        white-space: nowrap;
+        border-right: 1px solid #A8B8D9;
+        border-bottom: 1px solid #A8B8D9;
+        vertical-align: top;
+}
+
+.fieldtable td.fielddoc {
+        border-bottom: 1px solid #A8B8D9;
+        width: 100%;
+}
+
+.fieldtable tr:last-child td {
+        border-bottom: none;
+}
+
+.fieldtable th {
+        background-image:url('nav_f.png');
+        background-repeat:repeat-x;
+        background-color: #E2E8F2;
+        font-size: 90%;
+        color: #253555;
+        padding-bottom: 4px;
+        padding-top: 5px;
+        text-align:left;
+        -moz-border-radius-topleft: 4px;
+        -moz-border-radius-topright: 4px;
+        -webkit-border-top-left-radius: 4px;
+        -webkit-border-top-right-radius: 4px;
+        border-top-left-radius: 4px;
+        border-top-right-radius: 4px;
+        border-bottom: 1px solid #A8B8D9;
+}
+
+
+.tabsearch {
+	top: 0px;
+	left: 10px;
+	height: 36px;
+	background-image: url('tab_b.png');
+	z-index: 101;
+	overflow: hidden;
+	font-size: 13px;
+}
+
+.navpath ul
+{
+	font-size: 11px;
+	background-image:url('tab_b.png');
+	background-repeat:repeat-x;
+	height:30px;
+	line-height:30px;
+	color:#8AA0CC;
+	border:solid 1px #C2CDE4;
+	overflow:hidden;
+	margin:0px;
+	padding:0px;
+}
+
+.navpath li
+{
+	list-style-type:none;
+	float:left;
+	padding-left:10px;
+	padding-right:15px;
+	background-image:url('bc_s.png');
+	background-repeat:no-repeat;
+	background-position:right;
+	color:#364D7C;
+}
+
+.navpath li.navelem a
+{
+	height:32px;
+	display:block;
+	text-decoration: none;
+	outline: none;
+}
+
+.navpath li.navelem a:hover
+{
+	color:#6884BD;
+}
+
+.navpath li.footer
+{
+        list-style-type:none;
+        float:right;
+        padding-left:10px;
+        padding-right:15px;
+        background-image:none;
+        background-repeat:no-repeat;
+        background-position:right;
+        color:#364D7C;
+        font-size: 8pt;
+}
+
+
+div.summary
+{
+	float: right;
+	font-size: 8pt;
+	padding-right: 5px;
+	width: 50%;
+	text-align: right;
+}       
+
+div.summary a
+{
+	white-space: nowrap;
+}
+
+div.ingroups
+{
+	font-size: 8pt;
+	width: 50%;
+	text-align: left;
+}
+
+div.ingroups a
+{
+	white-space: nowrap;
+}
+
+div.header
+{
+        background-image:url('nav_h.png');
+        background-repeat:repeat-x;
+	background-color: #F9FAFC;
+	margin:  0px;
+	border-bottom: 1px solid #C4CFE5;
+}
+
+div.headertitle
+{
+	padding: 5px 5px 5px 7px;
+}
+
+dl
+{
+        padding: 0 0 0 10px;
+}
+
+/* dl.note, dl.warning, dl.attention, dl.pre, dl.post, dl.invariant, dl.deprecated, dl.todo, dl.test, dl.bug */
+dl.section
+{
+	margin-left: 0px;
+	padding-left: 0px;
+}
+
+dl.note
+{
+        margin-left:-7px;
+        padding-left: 3px;
+        border-left:4px solid;
+        border-color: #D0C000;
+}
+
+dl.warning, dl.attention
+{
+        margin-left:-7px;
+        padding-left: 3px;
+        border-left:4px solid;
+        border-color: #FF0000;
+}
+
+dl.pre, dl.post, dl.invariant
+{
+        margin-left:-7px;
+        padding-left: 3px;
+        border-left:4px solid;
+        border-color: #00D000;
+}
+
+dl.deprecated
+{
+        margin-left:-7px;
+        padding-left: 3px;
+        border-left:4px solid;
+        border-color: #505050;
+}
+
+dl.todo
+{
+        margin-left:-7px;
+        padding-left: 3px;
+        border-left:4px solid;
+        border-color: #00C0E0;
+}
+
+dl.test
+{
+        margin-left:-7px;
+        padding-left: 3px;
+        border-left:4px solid;
+        border-color: #3030E0;
+}
+
+dl.bug
+{
+        margin-left:-7px;
+        padding-left: 3px;
+        border-left:4px solid;
+        border-color: #C08050;
+}
+
+dl.section dd {
+	margin-bottom: 6px;
+}
+
+
+#projectlogo
+{
+	text-align: center;
+	vertical-align: bottom;
+	border-collapse: separate;
+}
+ 
+#projectlogo img
+{ 
+	border: 0px none;
+}
+ 
+#projectname
+{
+	font: 300% Tahoma, Arial,sans-serif;
+	margin: 0px;
+	padding: 2px 0px;
+}
+    
+#projectbrief
+{
+	font: 120% Tahoma, Arial,sans-serif;
+	margin: 0px;
+	padding: 0px;
+}
+
+#projectnumber
+{
+	font: 50% Tahoma, Arial,sans-serif;
+	margin: 0px;
+	padding: 0px;
+}
+
+#titlearea
+{
+	padding: 0px;
+	margin: 0px;
+	width: 100%;
+	border-bottom: 1px solid #5373B4;
+}
+
+.image
+{
+        text-align: center;
+}
+
+.dotgraph
+{
+        text-align: center;
+}
+
+.mscgraph
+{
+        text-align: center;
+}
+
+.caption
+{
+	font-weight: bold;
+}
+
+div.zoom
+{
+	border: 1px solid #90A5CE;
+}
+
+dl.citelist {
+        margin-bottom:50px;
+}
+
+dl.citelist dt {
+        color:#334975;
+        float:left;
+        font-weight:bold;
+        margin-right:10px;
+        padding:5px;
+}
+
+dl.citelist dd {
+        margin:2px 0;
+        padding:5px 0;
+}
+
+div.toc {
+        padding: 14px 25px;
+        background-color: #F4F6FA;
+        border: 1px solid #D8DFEE;
+        border-radius: 7px 7px 7px 7px;
+        float: right;
+        height: auto;
+        margin: 0 20px 10px 10px;
+        width: 200px;
+}
+
+div.toc li {
+        background: url("bdwn.png") no-repeat scroll 0 5px transparent;
+        font: 10px/1.2 Verdana,DejaVu Sans,Geneva,sans-serif;
+        margin-top: 5px;
+        padding-left: 10px;
+        padding-top: 2px;
+}
+
+div.toc h3 {
+        font: bold 12px/1.2 Arial,FreeSans,sans-serif;
+	color: #4665A2;
+        border-bottom: 0 none;
+        margin: 0;
+}
+
+div.toc ul {
+        list-style: none outside none;
+        border: medium none;
+        padding: 0px;
+}       
+
+div.toc li.level1 {
+        margin-left: 0px;
+}
+
+div.toc li.level2 {
+        margin-left: 15px;
+}
+
+div.toc li.level3 {
+        margin-left: 30px;
+}
+
+div.toc li.level4 {
+        margin-left: 45px;
+}
+
+.inherit_header {
+        font-weight: bold;
+        color: gray;
+        cursor: pointer;
+	-webkit-touch-callout: none;
+	-webkit-user-select: none;
+	-khtml-user-select: none;
+	-moz-user-select: none;
+	-ms-user-select: none;
+	user-select: none;
+}
+
+.inherit_header td {
+        padding: 6px 0px 2px 5px;
+}
+
+.inherit {
+        display: none;
+}
+
+tr.heading h2 {
+        margin-top: 12px;
+        margin-bottom: 4px;
+}
+
+@media print
+{
+  #top { display: none; }
+  #side-nav { display: none; }
+  #nav-path { display: none; }
+  body { overflow:visible; }
+  h1, h2, h3, h4, h5, h6 { page-break-after: avoid; }
+  .summary { display: none; }
+  .memitem { page-break-inside: avoid; }
+  #doc-content
+  {
+    margin-left:0 !important;
+    height:auto !important;
+    width:auto !important;
+    overflow:inherit;
+    display:inline;
+  }
+}
+
diff --git a/linux-3.17.1/net/gmtp/doc/html/doxygen.png b/linux-3.17.1/net/gmtp/doc/html/doxygen.png
new file mode 100644
index 0000000..3ff17d8
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/doxygen.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/dynsections.js b/linux-3.17.1/net/gmtp/doc/html/dynsections.js
new file mode 100644
index 0000000..116542f
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/dynsections.js
@@ -0,0 +1,78 @@
+function toggleVisibility(linkObj)
+{
+ var base = $(linkObj).attr('id');
+ var summary = $('#'+base+'-summary');
+ var content = $('#'+base+'-content');
+ var trigger = $('#'+base+'-trigger');
+ var src=$(trigger).attr('src');
+ if (content.is(':visible')===true) {
+   content.hide();
+   summary.show();
+   $(linkObj).addClass('closed').removeClass('opened');
+   $(trigger).attr('src',src.substring(0,src.length-8)+'closed.png');
+ } else {
+   content.show();
+   summary.hide();
+   $(linkObj).removeClass('closed').addClass('opened');
+   $(trigger).attr('src',src.substring(0,src.length-10)+'open.png');
+ } 
+ return false;
+}
+
+function updateStripes()
+{
+  $('table.directory tr').
+       removeClass('even').filter(':visible:even').addClass('even');
+}
+function toggleLevel(level)
+{
+  $('table.directory tr').each(function(){ 
+    var l = this.id.split('_').length-1;
+    var i = $('#img'+this.id.substring(3));
+    var a = $('#arr'+this.id.substring(3));
+    if (l<level+1) {
+      i.attr('src','ftv2folderopen.png');
+      a.attr('src','ftv2mnode.png');
+      $(this).show();
+    } else if (l==level+1) {
+      i.attr('src','ftv2folderclosed.png');
+      a.attr('src','ftv2pnode.png');
+      $(this).show();
+    } else {
+      $(this).hide();
+    }
+  });
+  updateStripes();
+}
+function toggleFolder(id) 
+{
+  var n = $('[id^=row_'+id+']');
+  var i = $('[id^=img_'+id+']');
+  var a = $('[id^=arr_'+id+']');
+  var c = n.slice(1);
+  if (c.filter(':first').is(':visible')===true) {
+    i.attr('src','ftv2folderclosed.png');
+    a.attr('src','ftv2pnode.png');
+    c.hide();
+  } else {
+    i.attr('src','ftv2folderopen.png');
+    a.attr('src','ftv2mnode.png');
+    c.show();
+  }
+  updateStripes();
+}
+
+function toggleInherit(id)
+{
+  var rows = $('tr.inherit.'+id);
+  var img = $('tr.inherit_header.'+id+' img');
+  var src = $(img).attr('src');
+  if (rows.filter(':first').is(':visible')===true) {
+    rows.css('display','none');
+    $(img).attr('src',src.substring(0,src.length-8)+'closed.png');
+  } else {
+    rows.css('display','table-row'); // using show() causes jump in firefox
+    $(img).attr('src',src.substring(0,src.length-10)+'open.png');
+  }
+}
+
diff --git a/linux-3.17.1/net/gmtp/doc/html/files.html b/linux-3.17.1/net/gmtp/doc/html/files.html
new file mode 100644
index 0000000..f660e5e
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/files.html
@@ -0,0 +1,104 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: File List</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li class="current"><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li class="current"><a href="files.html"><span>File&#160;List</span></a></li>
+      <li><a href="globals.html"><span>Globals</span></a></li>
+    </ul>
+  </div>
+</div><!-- top -->
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+<div class="header">
+  <div class="headertitle">
+<div class="title">File List</div>  </div>
+</div><!--header-->
+<div class="contents">
+<div class="textblock">Here is a list of all files with brief descriptions:</div><div class="directory">
+<table class="directory">
+<tr id="row_0_" class="even"><td class="entry"><img src="ftv2node.png" alt="o" width="16" height="22" /><a href="gmtp_8h_source.html"><img src="ftv2doc.png" alt="*" width="24" height="22" /></a><a class="el" href="gmtp_8h.html" target="_self">gmtp.h</a></td><td class="desc"></td></tr>
+<tr id="row_1_"><td class="entry"><img src="ftv2node.png" alt="o" width="16" height="22" /><img src="ftv2doc.png" alt="*" width="24" height="22" /><a class="el" href="gmtp_8mod_8c.html" target="_self">gmtp.mod.c</a></td><td class="desc"></td></tr>
+<tr id="row_2_" class="even"><td class="entry"><img src="ftv2node.png" alt="o" width="16" height="22" /><img src="ftv2doc.png" alt="*" width="24" height="22" /><a class="el" href="gmtp__ipv4_8mod_8c.html" target="_self">gmtp_ipv4.mod.c</a></td><td class="desc"></td></tr>
+<tr id="row_3_"><td class="entry"><img src="ftv2node.png" alt="o" width="16" height="22" /><img src="ftv2doc.png" alt="*" width="24" height="22" /><a class="el" href="input_8c.html" target="_self">input.c</a></td><td class="desc"></td></tr>
+<tr id="row_4_" class="even"><td class="entry"><img src="ftv2node.png" alt="o" width="16" height="22" /><img src="ftv2doc.png" alt="*" width="24" height="22" /><a class="el" href="ipv4_8c.html" target="_self">ipv4.c</a></td><td class="desc"></td></tr>
+<tr id="row_5_"><td class="entry"><img src="ftv2node.png" alt="o" width="16" height="22" /><img src="ftv2doc.png" alt="*" width="24" height="22" /><a class="el" href="output_8c.html" target="_self">output.c</a></td><td class="desc"></td></tr>
+<tr id="row_6_" class="even"><td class="entry"><img src="ftv2lastnode.png" alt="\" width="16" height="22" /><img src="ftv2doc.png" alt="*" width="24" height="22" /><a class="el" href="proto_8c.html" target="_self">proto.c</a></td><td class="desc"></td></tr>
+</table>
+</div><!-- directory -->
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2blank.png b/linux-3.17.1/net/gmtp/doc/html/ftv2blank.png
new file mode 100644
index 0000000..63c605b
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2blank.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2cl.png b/linux-3.17.1/net/gmtp/doc/html/ftv2cl.png
new file mode 100644
index 0000000..132f657
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2cl.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2doc.png b/linux-3.17.1/net/gmtp/doc/html/ftv2doc.png
new file mode 100644
index 0000000..17edabf
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2doc.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2folderclosed.png b/linux-3.17.1/net/gmtp/doc/html/ftv2folderclosed.png
new file mode 100644
index 0000000..bb8ab35
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2folderclosed.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2folderopen.png b/linux-3.17.1/net/gmtp/doc/html/ftv2folderopen.png
new file mode 100644
index 0000000..d6c7f67
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2folderopen.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2lastnode.png b/linux-3.17.1/net/gmtp/doc/html/ftv2lastnode.png
new file mode 100644
index 0000000..63c605b
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2lastnode.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2link.png b/linux-3.17.1/net/gmtp/doc/html/ftv2link.png
new file mode 100644
index 0000000..17edabf
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2link.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2mlastnode.png b/linux-3.17.1/net/gmtp/doc/html/ftv2mlastnode.png
new file mode 100644
index 0000000..0b63f6d
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2mlastnode.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2mnode.png b/linux-3.17.1/net/gmtp/doc/html/ftv2mnode.png
new file mode 100644
index 0000000..0b63f6d
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2mnode.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2mo.png b/linux-3.17.1/net/gmtp/doc/html/ftv2mo.png
new file mode 100644
index 0000000..4bfb80f
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2mo.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2node.png b/linux-3.17.1/net/gmtp/doc/html/ftv2node.png
new file mode 100644
index 0000000..63c605b
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2node.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2ns.png b/linux-3.17.1/net/gmtp/doc/html/ftv2ns.png
new file mode 100644
index 0000000..72e3d71
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2ns.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2plastnode.png b/linux-3.17.1/net/gmtp/doc/html/ftv2plastnode.png
new file mode 100644
index 0000000..c6ee22f
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2plastnode.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2pnode.png b/linux-3.17.1/net/gmtp/doc/html/ftv2pnode.png
new file mode 100644
index 0000000..c6ee22f
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2pnode.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2splitbar.png b/linux-3.17.1/net/gmtp/doc/html/ftv2splitbar.png
new file mode 100644
index 0000000..fe895f2
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2splitbar.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/ftv2vertline.png b/linux-3.17.1/net/gmtp/doc/html/ftv2vertline.png
new file mode 100644
index 0000000..63c605b
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/ftv2vertline.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/functions.html b/linux-3.17.1/net/gmtp/doc/html/functions.html
new file mode 100644
index 0000000..3b6d29b
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/functions.html
@@ -0,0 +1,110 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: Data Fields</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li class="current"><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li><a href="classes.html"><span>Data&#160;Structure&#160;Index</span></a></li>
+      <li class="current"><a href="functions.html"><span>Data&#160;Fields</span></a></li>
+    </ul>
+  </div>
+  <div id="navrow3" class="tabs2">
+    <ul class="tablist">
+      <li class="current"><a href="functions.html"><span>All</span></a></li>
+      <li><a href="functions_vars.html"><span>Variables</span></a></li>
+    </ul>
+  </div>
+</div><!-- top -->
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+<div class="contents">
+<div class="textblock">Here is a list of all struct and union fields with links to the structures/unions they belong to:</div><ul>
+<li>gmtpd_reset_code
+: <a class="el" href="gmtp_8h.html#a5f970494c68fc06c84823c233ed9d6a8">gmtp_skb_cb</a>
+</li>
+<li>gmtpd_reset_data
+: <a class="el" href="gmtp_8h.html#a766db441c404018311173c1171ef917a">gmtp_skb_cb</a>
+</li>
+<li>gmtpd_seq
+: <a class="el" href="gmtp_8h.html#ac2ed3bbe3289ce05b2fa7847c5e67da6">gmtp_skb_cb</a>
+</li>
+<li>gmtpd_type
+: <a class="el" href="gmtp_8h.html#a40635375f5d8223a8de70b79833c32c2">gmtp_skb_cb</a>
+</li>
+</ul>
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/functions_vars.html b/linux-3.17.1/net/gmtp/doc/html/functions_vars.html
new file mode 100644
index 0000000..2c7c5d8
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/functions_vars.html
@@ -0,0 +1,110 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: Data Fields - Variables</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li class="current"><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li><a href="classes.html"><span>Data&#160;Structure&#160;Index</span></a></li>
+      <li class="current"><a href="functions.html"><span>Data&#160;Fields</span></a></li>
+    </ul>
+  </div>
+  <div id="navrow3" class="tabs2">
+    <ul class="tablist">
+      <li><a href="functions.html"><span>All</span></a></li>
+      <li class="current"><a href="functions_vars.html"><span>Variables</span></a></li>
+    </ul>
+  </div>
+</div><!-- top -->
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+<div class="contents">
+&#160;<ul>
+<li>gmtpd_reset_code
+: <a class="el" href="gmtp_8h.html#a5f970494c68fc06c84823c233ed9d6a8">gmtp_skb_cb</a>
+</li>
+<li>gmtpd_reset_data
+: <a class="el" href="gmtp_8h.html#a766db441c404018311173c1171ef917a">gmtp_skb_cb</a>
+</li>
+<li>gmtpd_seq
+: <a class="el" href="gmtp_8h.html#ac2ed3bbe3289ce05b2fa7847c5e67da6">gmtp_skb_cb</a>
+</li>
+<li>gmtpd_type
+: <a class="el" href="gmtp_8h.html#a40635375f5d8223a8de70b79833c32c2">gmtp_skb_cb</a>
+</li>
+</ul>
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/globals.html b/linux-3.17.1/net/gmtp/doc/html/globals.html
new file mode 100644
index 0000000..879300e
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/globals.html
@@ -0,0 +1,402 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: Globals</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li class="current"><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li><a href="files.html"><span>File&#160;List</span></a></li>
+      <li class="current"><a href="globals.html"><span>Globals</span></a></li>
+    </ul>
+  </div>
+  <div id="navrow3" class="tabs2">
+    <ul class="tablist">
+      <li class="current"><a href="globals.html"><span>All</span></a></li>
+      <li><a href="globals_func.html"><span>Functions</span></a></li>
+      <li><a href="globals_vars.html"><span>Variables</span></a></li>
+      <li><a href="globals_defs.html"><span>Macros</span></a></li>
+    </ul>
+  </div>
+  <div id="navrow4" class="tabs3">
+    <ul class="tablist">
+      <li><a href="#index__"><span>_</span></a></li>
+      <li><a href="#index_b"><span>b</span></a></li>
+      <li><a href="#index_c"><span>c</span></a></li>
+      <li><a href="#index_d"><span>d</span></a></li>
+      <li><a href="#index_e"><span>e</span></a></li>
+      <li><a href="#index_g"><span>g</span></a></li>
+      <li><a href="#index_h"><span>h</span></a></li>
+      <li><a href="#index_i"><span>i</span></a></li>
+      <li><a href="#index_m"><span>m</span></a></li>
+      <li><a href="#index_p"><span>p</span></a></li>
+      <li><a href="#index_r"><span>r</span></a></li>
+      <li><a href="#index_s"><span>s</span></a></li>
+      <li><a href="#index_t"><span>t</span></a></li>
+    </ul>
+  </div>
+</div><!-- top -->
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+<div class="contents">
+<div class="textblock">Here is a list of all functions, variables, defines, enums, and typedefs with links to the files they belong to:</div>
+
+<h3><a class="anchor" id="index__"></a>- _ -</h3><ul>
+<li>__read_mostly
+: <a class="el" href="ipv4_8c.html#a32e197949743cd2e118c0724f2069d67">ipv4.c</a>
+</li>
+</ul>
+
+
+<h3><a class="anchor" id="index_b"></a>- b -</h3><ul>
+<li>body
+: <a class="el" href="input_8c.html#a14d48c2e9f05d0b03044eb45f308fcb0">input.c</a>
+</li>
+</ul>
+
+
+<h3><a class="anchor" id="index_c"></a>- c -</h3><ul>
+<li>code
+: <a class="el" href="input_8c.html#a8aac502ae7db0ae611e00082aa682158">input.c</a>
+</li>
+<li>codeRef
+: <a class="el" href="input_8c.html#a31f1a4bde92d4c390bf0e584473ee0da">input.c</a>
+</li>
+</ul>
+
+
+<h3><a class="anchor" id="index_d"></a>- d -</h3><ul>
+<li>div
+: <a class="el" href="input_8c.html#a00b49825eb9b4ffce1a4877d83ce126c">input.c</a>
+</li>
+</ul>
+
+
+<h3><a class="anchor" id="index_e"></a>- e -</h3><ul>
+<li>exception
+: <a class="el" href="input_8c.html#aec2b4fd1f327cbebb003cfc415e8bccb">input.c</a>
+</li>
+<li>EXPORT_SYMBOL_GPL()
+: <a class="el" href="proto_8c.html#a457458302de4290b0602c55c7b619ea0">proto.c</a>
+, <a class="el" href="output_8c.html#af63283ab704f9c1e284327090204d962">output.c</a>
+, <a class="el" href="ipv4_8c.html#a02a246e3f177672e943fa02d76c61792">ipv4.c</a>
+</li>
+</ul>
+
+
+<h3><a class="anchor" id="index_g"></a>- g -</h3><ul>
+<li>glow
+: <a class="el" href="input_8c.html#a4e8818cd817685ac2ce39fc911f9d42f">input.c</a>
+</li>
+<li>gmtp_close()
+: <a class="el" href="gmtp_8h.html#a59f856ab28c13b885fbe2c38f7a70a87">gmtp.h</a>
+, <a class="el" href="proto_8c.html#a59f856ab28c13b885fbe2c38f7a70a87">proto.c</a>
+</li>
+<li>gmtp_connect()
+: <a class="el" href="gmtp_8h.html#a2df4bd07928440434f3ffc5e9a99e192">gmtp.h</a>
+, <a class="el" href="output_8c.html#a2df4bd07928440434f3ffc5e9a99e192">output.c</a>
+</li>
+<li>gmtp_ctl_make_reset()
+: <a class="el" href="gmtp_8h.html#a702ba25884e070b579dcfa4769260847">gmtp.h</a>
+, <a class="el" href="output_8c.html#a702ba25884e070b579dcfa4769260847">output.c</a>
+</li>
+<li>gmtp_death_row
+: <a class="el" href="ipv4_8c.html#a304672a5f2e443d5c24f0c7d520a2299">ipv4.c</a>
+, <a class="el" href="proto_8c.html#a304672a5f2e443d5c24f0c7d520a2299">proto.c</a>
+</li>
+<li>gmtp_destroy_sock()
+: <a class="el" href="gmtp_8h.html#ada146a75c7595313fda4021b3d64f2af">gmtp.h</a>
+, <a class="el" href="proto_8c.html#ada146a75c7595313fda4021b3d64f2af">proto.c</a>
+</li>
+<li>gmtp_disconnect()
+: <a class="el" href="gmtp_8h.html#a8dacfb87447f165efac077aa907a8e27">gmtp.h</a>
+, <a class="el" href="proto_8c.html#a8dacfb87447f165efac077aa907a8e27">proto.c</a>
+</li>
+<li>gmtp_do_rcv()
+: <a class="el" href="proto_8c.html#ad87dbd137414cabb75038daf5d227af2">proto.c</a>
+</li>
+<li>GMTP_ERROR
+: <a class="el" href="gmtp_8h.html#a8f042630afadb776c9fe83ace47fac92">gmtp.h</a>
+</li>
+<li>gmtp_getsockopt()
+: <a class="el" href="gmtp_8h.html#a789192a2299f8f626e034ad9c87d99b2">gmtp.h</a>
+, <a class="el" href="proto_8c.html#a789192a2299f8f626e034ad9c87d99b2">proto.c</a>
+</li>
+<li>gmtp_hashinfo
+: <a class="el" href="gmtp_8h.html#ab43beb876bb256a2f539107b7f589c44">gmtp.h</a>
+, <a class="el" href="proto_8c.html#ab43beb876bb256a2f539107b7f589c44">proto.c</a>
+</li>
+<li>GMTP_INFO
+: <a class="el" href="gmtp_8h.html#ac4d88ba4957c61fad1b1e81e86e26d25">gmtp.h</a>
+</li>
+<li>gmtp_init_sock()
+: <a class="el" href="gmtp_8h.html#a1c872c8a33008e99befdb297a6518e03">gmtp.h</a>
+, <a class="el" href="proto_8c.html#a1c872c8a33008e99befdb297a6518e03">proto.c</a>
+</li>
+<li>gmtp_insert_options()
+: <a class="el" href="gmtp_8h.html#a706d0cdecf4e871e347de22e69eed8ee">gmtp.h</a>
+</li>
+<li>gmtp_invalid_packet()
+: <a class="el" href="ipv4_8c.html#ac0518e2de9174312756a485345984ba5">ipv4.c</a>
+</li>
+<li>gmtp_ioctl()
+: <a class="el" href="gmtp_8h.html#ab9bd011833dc85384f4d3c6e5c29f6de">gmtp.h</a>
+, <a class="el" href="proto_8c.html#ab9bd011833dc85384f4d3c6e5c29f6de">proto.c</a>
+</li>
+<li>gmtp_make_response()
+: <a class="el" href="gmtp_8h.html#a8e94a84dd0d5b12f39df23b6c6ff005b">gmtp.h</a>
+, <a class="el" href="output_8c.html#a8e94a84dd0d5b12f39df23b6c6ff005b">output.c</a>
+</li>
+<li>gmtp_orphan_count
+: <a class="el" href="gmtp_8h.html#acab13337f0e829de92aa24505a723eae">gmtp.h</a>
+</li>
+<li>gmtp_packet_name()
+: <a class="el" href="proto_8c.html#a9984b8752cb8758660297cce25f6dd54">proto.c</a>
+, <a class="el" href="gmtp_8h.html#a181e0298f75786ee945b7dcd06adaf1b">gmtp.h</a>
+</li>
+<li>gmtp_print_debug
+: <a class="el" href="gmtp_8h.html#acb14405c3e3845ce630b3330c048d3e8">gmtp.h</a>
+</li>
+<li>gmtp_print_error
+: <a class="el" href="gmtp_8h.html#aef36831848715ac98879ce5642229e14">gmtp.h</a>
+</li>
+<li>gmtp_print_warning
+: <a class="el" href="gmtp_8h.html#a4e56790f2f3dc1623fbd978467ac614d">gmtp.h</a>
+</li>
+<li>gmtp_rcv_established()
+: <a class="el" href="gmtp_8h.html#a3d9324eca652acd36308327a06050473">gmtp.h</a>
+</li>
+<li>gmtp_rcv_state_process()
+: <a class="el" href="gmtp_8h.html#a212e85de01d9dd2c64578b4a61020f18">gmtp.h</a>
+</li>
+<li>gmtp_recvmsg()
+: <a class="el" href="gmtp_8h.html#a462ae3f8dd122bdee2af7fd115694db4">gmtp.h</a>
+, <a class="el" href="proto_8c.html#a462ae3f8dd122bdee2af7fd115694db4">proto.c</a>
+</li>
+<li>gmtp_sendmsg()
+: <a class="el" href="gmtp_8h.html#a76ebcaaace625859ee741e890d7e7da7">gmtp.h</a>
+, <a class="el" href="proto_8c.html#a76ebcaaace625859ee741e890d7e7da7">proto.c</a>
+</li>
+<li>gmtp_set_state()
+: <a class="el" href="proto_8c.html#a2c20286d5df6e6774719d719be9d3a13">proto.c</a>
+, <a class="el" href="gmtp_8h.html#ad4d2e06e572fc5135a3a2636b629b8f2">gmtp.h</a>
+</li>
+<li>gmtp_setsockopt()
+: <a class="el" href="proto_8c.html#aa5511c6bf84a1956f308ce920a134c29">proto.c</a>
+, <a class="el" href="gmtp_8h.html#aa5511c6bf84a1956f308ce920a134c29">gmtp.h</a>
+</li>
+<li>gmtp_shutdown()
+: <a class="el" href="proto_8c.html#ae74ac6585ac8e29b98e916f4f29ae3f0">proto.c</a>
+, <a class="el" href="gmtp_8h.html#ae74ac6585ac8e29b98e916f4f29ae3f0">gmtp.h</a>
+</li>
+<li>GMTP_SKB_CB
+: <a class="el" href="gmtp_8h.html#a973dbe6c782d6d3a6b8fb1a2d15d0825">gmtp.h</a>
+</li>
+<li>GMTP_TIMEOUT_INIT
+: <a class="el" href="gmtp_8h.html#a5b5fd1251f0fec5bc8dda21b11d57de4">gmtp.h</a>
+</li>
+<li>GMTP_TIMEWAIT_LEN
+: <a class="el" href="gmtp_8h.html#a86aa8330d1bef9cdb384dc6ef9738bcb">gmtp.h</a>
+</li>
+<li>gmtp_v4_conn_request()
+: <a class="el" href="ipv4_8c.html#ac00f58e15e1908bc8f01439f25266cea">ipv4.c</a>
+</li>
+<li>gmtp_v4_connect()
+: <a class="el" href="ipv4_8c.html#a3d651b3671bf86675ce95fb92228b6a3">ipv4.c</a>
+, <a class="el" href="gmtp_8h.html#a3d651b3671bf86675ce95fb92228b6a3">gmtp.h</a>
+</li>
+<li>gmtp_v4_do_rcv()
+: <a class="el" href="ipv4_8c.html#a96e77cd9da9396b4e3e9d2ca1bdd62ef">ipv4.c</a>
+</li>
+<li>gmtp_v4_err()
+: <a class="el" href="ipv4_8c.html#a5257b59975805a2ab1fe3a97bc9a0f42">ipv4.c</a>
+</li>
+<li>GMTP_WARNING
+: <a class="el" href="gmtp_8h.html#a9bdaefac28c54404d5d18bf9f4df448f">gmtp.h</a>
+</li>
+</ul>
+
+
+<h3><a class="anchor" id="index_h"></a>- h -</h3><ul>
+<li>h2
+: <a class="el" href="input_8c.html#ac9e7e0722796a9a2748cfe71e5c1eacb">input.c</a>
+</li>
+<li>h3
+: <a class="el" href="input_8c.html#ad8bba894a37a322932dc80e05de59fe3">input.c</a>
+</li>
+<li>h4
+: <a class="el" href="input_8c.html#af78ff2250f8c44a8f1d4533787151cda">input.c</a>
+</li>
+<li>h5
+: <a class="el" href="input_8c.html#ab30ad01496f14e60d923a1937ffc98d4">input.c</a>
+</li>
+</ul>
+
+
+<h3><a class="anchor" id="index_i"></a>- i -</h3><ul>
+<li>inet_gmtp_listen()
+: <a class="el" href="gmtp_8h.html#aa43e6c6314b0b836ffb2616535879838">gmtp.h</a>
+, <a class="el" href="proto_8c.html#aa43e6c6314b0b836ffb2616535879838">proto.c</a>
+</li>
+</ul>
+
+
+<h3><a class="anchor" id="index_m"></a>- m -</h3><ul>
+<li>MAX_GMTP_HEADER
+: <a class="el" href="gmtp_8h.html#aaa9538bb543aaffa4731989fc7ddc0d8">gmtp.h</a>
+</li>
+<li>MAX_GMTP_SPECIFIC_HEADER
+: <a class="el" href="gmtp_8h.html#afb9f06378ed5523a74a21aedc7f34ea6">gmtp.h</a>
+</li>
+<li>MAX_GMTP_VARIABLE_HEADER
+: <a class="el" href="gmtp_8h.html#aed94c10b0d5306f67874e039a60f7907">gmtp.h</a>
+</li>
+<li>mdescRight
+: <a class="el" href="input_8c.html#a4591bd51e10e1bcc441acd6d675fbaa9">input.c</a>
+</li>
+<li>memItemLeft
+: <a class="el" href="input_8c.html#a0407e3019d5f5cf8b15fe00d27e91fdd">input.c</a>
+</li>
+<li>memItemRight
+: <a class="el" href="input_8c.html#a2fde2671b1dacc9d87f4268184483eef">input.c</a>
+</li>
+<li>memTemplItemLeft
+: <a class="el" href="input_8c.html#a16459c9f19af9d4e45fa309d4c3d88dc">input.c</a>
+</li>
+<li>memTemplItemRight
+: <a class="el" href="input_8c.html#af091022274dd4a202d587f3acae35aa9">input.c</a>
+</li>
+<li>MODULE_ALIAS_NET_PF_PROTO_TYPE()
+: <a class="el" href="ipv4_8c.html#a3b891be0948d683a3f0c879702d3b9cb">ipv4.c</a>
+</li>
+<li>MODULE_AUTHOR()
+: <a class="el" href="ipv4_8c.html#ae540d1ed034c92753f40dcc69dc8081b">ipv4.c</a>
+, <a class="el" href="proto_8c.html#ae540d1ed034c92753f40dcc69dc8081b">proto.c</a>
+</li>
+<li>MODULE_DESCRIPTION()
+: <a class="el" href="ipv4_8c.html#a81aa4475647c79e5e7d0050d75deda0b">ipv4.c</a>
+, <a class="el" href="proto_8c.html#a81aa4475647c79e5e7d0050d75deda0b">proto.c</a>
+</li>
+<li>module_exit()
+: <a class="el" href="proto_8c.html#a9761956e9851cccd3f1c40d2a6b0fcdd">proto.c</a>
+, <a class="el" href="ipv4_8c.html#a506da21c4f1be9b593d04268f6f813e0">ipv4.c</a>
+</li>
+<li>module_init()
+: <a class="el" href="ipv4_8c.html#aa732797a38fdc3a4052d4ac3b0e17a90">ipv4.c</a>
+, <a class="el" href="proto_8c.html#a8fe804f33b35ccae3b8c82bee513b750">proto.c</a>
+</li>
+<li>MODULE_LICENSE()
+: <a class="el" href="ipv4_8c.html#ad94b36675e7eb067ea3ce6ff9e244a44">ipv4.c</a>
+, <a class="el" href="proto_8c.html#ad94b36675e7eb067ea3ce6ff9e244a44">proto.c</a>
+</li>
+<li>module_param()
+: <a class="el" href="proto_8c.html#a232988d276bf40d7c15be1fcd7af9d83">proto.c</a>
+</li>
+<li>MODULE_PARM_DESC()
+: <a class="el" href="proto_8c.html#ad4e09849d2bc32d70e247bc5172fcf8b">proto.c</a>
+</li>
+</ul>
+
+
+<h3><a class="anchor" id="index_p"></a>- p -</h3><ul>
+<li>p
+: <a class="el" href="input_8c.html#ac483f6ce851c9ecd9fb835ff7551737c">input.c</a>
+</li>
+<li>post
+: <a class="el" href="input_8c.html#aaea8ed8d01160ec7de3bdcf28525449c">input.c</a>
+</li>
+</ul>
+
+
+<h3><a class="anchor" id="index_r"></a>- r -</h3><ul>
+<li>retval
+: <a class="el" href="input_8c.html#a7f3fcc3b39464696f5682f787eb99368">input.c</a>
+</li>
+</ul>
+
+
+<h3><a class="anchor" id="index_s"></a>- s -</h3><ul>
+<li>startdd
+: <a class="el" href="input_8c.html#acb48d3101db87d75430b587051623cb1">input.c</a>
+</li>
+</ul>
+
+
+<h3><a class="anchor" id="index_t"></a>- t -</h3><ul>
+<li>table
+: <a class="el" href="input_8c.html#ab172ed3d3d31ff02fc5f798fe7e1bfb8">input.c</a>
+</li>
+</ul>
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/globals_defs.html b/linux-3.17.1/net/gmtp/doc/html/globals_defs.html
new file mode 100644
index 0000000..6280e3a
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/globals_defs.html
@@ -0,0 +1,135 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: Globals</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li class="current"><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li><a href="files.html"><span>File&#160;List</span></a></li>
+      <li class="current"><a href="globals.html"><span>Globals</span></a></li>
+    </ul>
+  </div>
+  <div id="navrow3" class="tabs2">
+    <ul class="tablist">
+      <li><a href="globals.html"><span>All</span></a></li>
+      <li><a href="globals_func.html"><span>Functions</span></a></li>
+      <li><a href="globals_vars.html"><span>Variables</span></a></li>
+      <li class="current"><a href="globals_defs.html"><span>Macros</span></a></li>
+    </ul>
+  </div>
+</div><!-- top -->
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+<div class="contents">
+&#160;<ul>
+<li>GMTP_ERROR
+: <a class="el" href="gmtp_8h.html#a8f042630afadb776c9fe83ace47fac92">gmtp.h</a>
+</li>
+<li>GMTP_INFO
+: <a class="el" href="gmtp_8h.html#ac4d88ba4957c61fad1b1e81e86e26d25">gmtp.h</a>
+</li>
+<li>gmtp_print_debug
+: <a class="el" href="gmtp_8h.html#acb14405c3e3845ce630b3330c048d3e8">gmtp.h</a>
+</li>
+<li>gmtp_print_error
+: <a class="el" href="gmtp_8h.html#aef36831848715ac98879ce5642229e14">gmtp.h</a>
+</li>
+<li>gmtp_print_warning
+: <a class="el" href="gmtp_8h.html#a4e56790f2f3dc1623fbd978467ac614d">gmtp.h</a>
+</li>
+<li>GMTP_SKB_CB
+: <a class="el" href="gmtp_8h.html#a973dbe6c782d6d3a6b8fb1a2d15d0825">gmtp.h</a>
+</li>
+<li>GMTP_TIMEOUT_INIT
+: <a class="el" href="gmtp_8h.html#a5b5fd1251f0fec5bc8dda21b11d57de4">gmtp.h</a>
+</li>
+<li>GMTP_TIMEWAIT_LEN
+: <a class="el" href="gmtp_8h.html#a86aa8330d1bef9cdb384dc6ef9738bcb">gmtp.h</a>
+</li>
+<li>GMTP_WARNING
+: <a class="el" href="gmtp_8h.html#a9bdaefac28c54404d5d18bf9f4df448f">gmtp.h</a>
+</li>
+<li>MAX_GMTP_HEADER
+: <a class="el" href="gmtp_8h.html#aaa9538bb543aaffa4731989fc7ddc0d8">gmtp.h</a>
+</li>
+<li>MAX_GMTP_SPECIFIC_HEADER
+: <a class="el" href="gmtp_8h.html#afb9f06378ed5523a74a21aedc7f34ea6">gmtp.h</a>
+</li>
+<li>MAX_GMTP_VARIABLE_HEADER
+: <a class="el" href="gmtp_8h.html#aed94c10b0d5306f67874e039a60f7907">gmtp.h</a>
+</li>
+</ul>
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/globals_func.html b/linux-3.17.1/net/gmtp/doc/html/globals_func.html
new file mode 100644
index 0000000..6c2b617
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/globals_func.html
@@ -0,0 +1,248 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: Globals</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li class="current"><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li><a href="files.html"><span>File&#160;List</span></a></li>
+      <li class="current"><a href="globals.html"><span>Globals</span></a></li>
+    </ul>
+  </div>
+  <div id="navrow3" class="tabs2">
+    <ul class="tablist">
+      <li><a href="globals.html"><span>All</span></a></li>
+      <li class="current"><a href="globals_func.html"><span>Functions</span></a></li>
+      <li><a href="globals_vars.html"><span>Variables</span></a></li>
+      <li><a href="globals_defs.html"><span>Macros</span></a></li>
+    </ul>
+  </div>
+  <div id="navrow4" class="tabs3">
+    <ul class="tablist">
+      <li><a href="#index_e"><span>e</span></a></li>
+      <li><a href="#index_g"><span>g</span></a></li>
+      <li><a href="#index_i"><span>i</span></a></li>
+      <li><a href="#index_m"><span>m</span></a></li>
+    </ul>
+  </div>
+</div><!-- top -->
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+<div class="contents">
+&#160;
+
+<h3><a class="anchor" id="index_e"></a>- e -</h3><ul>
+<li>EXPORT_SYMBOL_GPL()
+: <a class="el" href="ipv4_8c.html#aba729ce082e122d7aec35777ade6e7fb">ipv4.c</a>
+, <a class="el" href="proto_8c.html#a457458302de4290b0602c55c7b619ea0">proto.c</a>
+, <a class="el" href="output_8c.html#af63283ab704f9c1e284327090204d962">output.c</a>
+, <a class="el" href="ipv4_8c.html#a02a246e3f177672e943fa02d76c61792">ipv4.c</a>
+</li>
+</ul>
+
+
+<h3><a class="anchor" id="index_g"></a>- g -</h3><ul>
+<li>gmtp_close()
+: <a class="el" href="gmtp_8h.html#a59f856ab28c13b885fbe2c38f7a70a87">gmtp.h</a>
+, <a class="el" href="proto_8c.html#a59f856ab28c13b885fbe2c38f7a70a87">proto.c</a>
+</li>
+<li>gmtp_connect()
+: <a class="el" href="output_8c.html#a2df4bd07928440434f3ffc5e9a99e192">output.c</a>
+, <a class="el" href="gmtp_8h.html#a2df4bd07928440434f3ffc5e9a99e192">gmtp.h</a>
+</li>
+<li>gmtp_ctl_make_reset()
+: <a class="el" href="gmtp_8h.html#a702ba25884e070b579dcfa4769260847">gmtp.h</a>
+, <a class="el" href="output_8c.html#a702ba25884e070b579dcfa4769260847">output.c</a>
+</li>
+<li>gmtp_destroy_sock()
+: <a class="el" href="proto_8c.html#ada146a75c7595313fda4021b3d64f2af">proto.c</a>
+, <a class="el" href="gmtp_8h.html#ada146a75c7595313fda4021b3d64f2af">gmtp.h</a>
+</li>
+<li>gmtp_disconnect()
+: <a class="el" href="gmtp_8h.html#a8dacfb87447f165efac077aa907a8e27">gmtp.h</a>
+, <a class="el" href="proto_8c.html#a8dacfb87447f165efac077aa907a8e27">proto.c</a>
+</li>
+<li>gmtp_do_rcv()
+: <a class="el" href="proto_8c.html#ad87dbd137414cabb75038daf5d227af2">proto.c</a>
+</li>
+<li>gmtp_getsockopt()
+: <a class="el" href="gmtp_8h.html#a789192a2299f8f626e034ad9c87d99b2">gmtp.h</a>
+, <a class="el" href="proto_8c.html#a789192a2299f8f626e034ad9c87d99b2">proto.c</a>
+</li>
+<li>gmtp_init_sock()
+: <a class="el" href="gmtp_8h.html#a1c872c8a33008e99befdb297a6518e03">gmtp.h</a>
+, <a class="el" href="proto_8c.html#a1c872c8a33008e99befdb297a6518e03">proto.c</a>
+</li>
+<li>gmtp_insert_options()
+: <a class="el" href="gmtp_8h.html#a706d0cdecf4e871e347de22e69eed8ee">gmtp.h</a>
+</li>
+<li>gmtp_invalid_packet()
+: <a class="el" href="ipv4_8c.html#ac0518e2de9174312756a485345984ba5">ipv4.c</a>
+</li>
+<li>gmtp_ioctl()
+: <a class="el" href="gmtp_8h.html#ab9bd011833dc85384f4d3c6e5c29f6de">gmtp.h</a>
+, <a class="el" href="proto_8c.html#ab9bd011833dc85384f4d3c6e5c29f6de">proto.c</a>
+</li>
+<li>gmtp_make_response()
+: <a class="el" href="gmtp_8h.html#a8e94a84dd0d5b12f39df23b6c6ff005b">gmtp.h</a>
+, <a class="el" href="output_8c.html#a8e94a84dd0d5b12f39df23b6c6ff005b">output.c</a>
+</li>
+<li>gmtp_packet_name()
+: <a class="el" href="proto_8c.html#a9984b8752cb8758660297cce25f6dd54">proto.c</a>
+, <a class="el" href="gmtp_8h.html#a181e0298f75786ee945b7dcd06adaf1b">gmtp.h</a>
+</li>
+<li>gmtp_rcv_established()
+: <a class="el" href="gmtp_8h.html#a3d9324eca652acd36308327a06050473">gmtp.h</a>
+</li>
+<li>gmtp_rcv_state_process()
+: <a class="el" href="gmtp_8h.html#a212e85de01d9dd2c64578b4a61020f18">gmtp.h</a>
+</li>
+<li>gmtp_recvmsg()
+: <a class="el" href="proto_8c.html#a462ae3f8dd122bdee2af7fd115694db4">proto.c</a>
+, <a class="el" href="gmtp_8h.html#a462ae3f8dd122bdee2af7fd115694db4">gmtp.h</a>
+</li>
+<li>gmtp_sendmsg()
+: <a class="el" href="proto_8c.html#a76ebcaaace625859ee741e890d7e7da7">proto.c</a>
+, <a class="el" href="gmtp_8h.html#a76ebcaaace625859ee741e890d7e7da7">gmtp.h</a>
+</li>
+<li>gmtp_set_state()
+: <a class="el" href="proto_8c.html#a2c20286d5df6e6774719d719be9d3a13">proto.c</a>
+, <a class="el" href="gmtp_8h.html#ad4d2e06e572fc5135a3a2636b629b8f2">gmtp.h</a>
+</li>
+<li>gmtp_setsockopt()
+: <a class="el" href="gmtp_8h.html#aa5511c6bf84a1956f308ce920a134c29">gmtp.h</a>
+, <a class="el" href="proto_8c.html#aa5511c6bf84a1956f308ce920a134c29">proto.c</a>
+</li>
+<li>gmtp_shutdown()
+: <a class="el" href="gmtp_8h.html#ae74ac6585ac8e29b98e916f4f29ae3f0">gmtp.h</a>
+, <a class="el" href="proto_8c.html#ae74ac6585ac8e29b98e916f4f29ae3f0">proto.c</a>
+</li>
+<li>gmtp_v4_conn_request()
+: <a class="el" href="ipv4_8c.html#ac00f58e15e1908bc8f01439f25266cea">ipv4.c</a>
+</li>
+<li>gmtp_v4_connect()
+: <a class="el" href="ipv4_8c.html#a3d651b3671bf86675ce95fb92228b6a3">ipv4.c</a>
+, <a class="el" href="gmtp_8h.html#a3d651b3671bf86675ce95fb92228b6a3">gmtp.h</a>
+</li>
+<li>gmtp_v4_do_rcv()
+: <a class="el" href="ipv4_8c.html#a96e77cd9da9396b4e3e9d2ca1bdd62ef">ipv4.c</a>
+</li>
+<li>gmtp_v4_err()
+: <a class="el" href="ipv4_8c.html#a5257b59975805a2ab1fe3a97bc9a0f42">ipv4.c</a>
+</li>
+</ul>
+
+
+<h3><a class="anchor" id="index_i"></a>- i -</h3><ul>
+<li>inet_gmtp_listen()
+: <a class="el" href="gmtp_8h.html#aa43e6c6314b0b836ffb2616535879838">gmtp.h</a>
+, <a class="el" href="proto_8c.html#aa43e6c6314b0b836ffb2616535879838">proto.c</a>
+</li>
+</ul>
+
+
+<h3><a class="anchor" id="index_m"></a>- m -</h3><ul>
+<li>MODULE_ALIAS_NET_PF_PROTO_TYPE()
+: <a class="el" href="ipv4_8c.html#a3b891be0948d683a3f0c879702d3b9cb">ipv4.c</a>
+</li>
+<li>MODULE_AUTHOR()
+: <a class="el" href="proto_8c.html#ae540d1ed034c92753f40dcc69dc8081b">proto.c</a>
+, <a class="el" href="ipv4_8c.html#ae540d1ed034c92753f40dcc69dc8081b">ipv4.c</a>
+</li>
+<li>MODULE_DESCRIPTION()
+: <a class="el" href="ipv4_8c.html#a81aa4475647c79e5e7d0050d75deda0b">ipv4.c</a>
+, <a class="el" href="proto_8c.html#a81aa4475647c79e5e7d0050d75deda0b">proto.c</a>
+</li>
+<li>module_exit()
+: <a class="el" href="proto_8c.html#a9761956e9851cccd3f1c40d2a6b0fcdd">proto.c</a>
+, <a class="el" href="ipv4_8c.html#a506da21c4f1be9b593d04268f6f813e0">ipv4.c</a>
+</li>
+<li>module_init()
+: <a class="el" href="ipv4_8c.html#aa732797a38fdc3a4052d4ac3b0e17a90">ipv4.c</a>
+, <a class="el" href="proto_8c.html#a8fe804f33b35ccae3b8c82bee513b750">proto.c</a>
+</li>
+<li>MODULE_LICENSE()
+: <a class="el" href="ipv4_8c.html#ad94b36675e7eb067ea3ce6ff9e244a44">ipv4.c</a>
+, <a class="el" href="proto_8c.html#ad94b36675e7eb067ea3ce6ff9e244a44">proto.c</a>
+</li>
+<li>module_param()
+: <a class="el" href="proto_8c.html#a232988d276bf40d7c15be1fcd7af9d83">proto.c</a>
+</li>
+<li>MODULE_PARM_DESC()
+: <a class="el" href="proto_8c.html#ad4e09849d2bc32d70e247bc5172fcf8b">proto.c</a>
+</li>
+</ul>
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/globals_vars.html b/linux-3.17.1/net/gmtp/doc/html/globals_vars.html
new file mode 100644
index 0000000..7499cc1
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/globals_vars.html
@@ -0,0 +1,173 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: Globals</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li class="current"><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li><a href="files.html"><span>File&#160;List</span></a></li>
+      <li class="current"><a href="globals.html"><span>Globals</span></a></li>
+    </ul>
+  </div>
+  <div id="navrow3" class="tabs2">
+    <ul class="tablist">
+      <li><a href="globals.html"><span>All</span></a></li>
+      <li><a href="globals_func.html"><span>Functions</span></a></li>
+      <li class="current"><a href="globals_vars.html"><span>Variables</span></a></li>
+      <li><a href="globals_defs.html"><span>Macros</span></a></li>
+    </ul>
+  </div>
+</div><!-- top -->
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+<div class="contents">
+&#160;<ul>
+<li>__read_mostly
+: <a class="el" href="ipv4_8c.html#a32e197949743cd2e118c0724f2069d67">ipv4.c</a>
+</li>
+<li>body
+: <a class="el" href="input_8c.html#a14d48c2e9f05d0b03044eb45f308fcb0">input.c</a>
+</li>
+<li>code
+: <a class="el" href="input_8c.html#a8aac502ae7db0ae611e00082aa682158">input.c</a>
+</li>
+<li>codeRef
+: <a class="el" href="input_8c.html#a31f1a4bde92d4c390bf0e584473ee0da">input.c</a>
+</li>
+<li>div
+: <a class="el" href="input_8c.html#a00b49825eb9b4ffce1a4877d83ce126c">input.c</a>
+</li>
+<li>exception
+: <a class="el" href="input_8c.html#aec2b4fd1f327cbebb003cfc415e8bccb">input.c</a>
+</li>
+<li>glow
+: <a class="el" href="input_8c.html#a4e8818cd817685ac2ce39fc911f9d42f">input.c</a>
+</li>
+<li>gmtp_death_row
+: <a class="el" href="ipv4_8c.html#a304672a5f2e443d5c24f0c7d520a2299">ipv4.c</a>
+, <a class="el" href="proto_8c.html#a304672a5f2e443d5c24f0c7d520a2299">proto.c</a>
+</li>
+<li>gmtp_hashinfo
+: <a class="el" href="gmtp_8h.html#ab43beb876bb256a2f539107b7f589c44">gmtp.h</a>
+, <a class="el" href="proto_8c.html#ab43beb876bb256a2f539107b7f589c44">proto.c</a>
+</li>
+<li>gmtp_orphan_count
+: <a class="el" href="gmtp_8h.html#acab13337f0e829de92aa24505a723eae">gmtp.h</a>
+</li>
+<li>h2
+: <a class="el" href="input_8c.html#ac9e7e0722796a9a2748cfe71e5c1eacb">input.c</a>
+</li>
+<li>h3
+: <a class="el" href="input_8c.html#ad8bba894a37a322932dc80e05de59fe3">input.c</a>
+</li>
+<li>h4
+: <a class="el" href="input_8c.html#af78ff2250f8c44a8f1d4533787151cda">input.c</a>
+</li>
+<li>h5
+: <a class="el" href="input_8c.html#ab30ad01496f14e60d923a1937ffc98d4">input.c</a>
+</li>
+<li>mdescRight
+: <a class="el" href="input_8c.html#a4591bd51e10e1bcc441acd6d675fbaa9">input.c</a>
+</li>
+<li>memItemLeft
+: <a class="el" href="input_8c.html#a0407e3019d5f5cf8b15fe00d27e91fdd">input.c</a>
+</li>
+<li>memItemRight
+: <a class="el" href="input_8c.html#a2fde2671b1dacc9d87f4268184483eef">input.c</a>
+</li>
+<li>memTemplItemLeft
+: <a class="el" href="input_8c.html#a16459c9f19af9d4e45fa309d4c3d88dc">input.c</a>
+</li>
+<li>memTemplItemRight
+: <a class="el" href="input_8c.html#af091022274dd4a202d587f3acae35aa9">input.c</a>
+</li>
+<li>p
+: <a class="el" href="input_8c.html#ac483f6ce851c9ecd9fb835ff7551737c">input.c</a>
+</li>
+<li>post
+: <a class="el" href="input_8c.html#aaea8ed8d01160ec7de3bdcf28525449c">input.c</a>
+</li>
+<li>retval
+: <a class="el" href="input_8c.html#a7f3fcc3b39464696f5682f787eb99368">input.c</a>
+</li>
+<li>startdd
+: <a class="el" href="input_8c.html#acb48d3101db87d75430b587051623cb1">input.c</a>
+</li>
+<li>table
+: <a class="el" href="input_8c.html#ab172ed3d3d31ff02fc5f798fe7e1bfb8">input.c</a>
+</li>
+</ul>
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h.html b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h.html
new file mode 100644
index 0000000..3930c5b
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h.html
@@ -0,0 +1,1092 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: gmtp.h File Reference</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li class="current"><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li><a href="files.html"><span>File&#160;List</span></a></li>
+      <li><a href="globals.html"><span>Globals</span></a></li>
+    </ul>
+  </div>
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+</div><!-- top -->
+<div class="header">
+  <div class="summary">
+<a href="#nested-classes">Data Structures</a> &#124;
+<a href="#define-members">Macros</a> &#124;
+<a href="#func-members">Functions</a> &#124;
+<a href="#var-members">Variables</a>  </div>
+  <div class="headertitle">
+<div class="title">gmtp.h File Reference</div>  </div>
+</div><!--header-->
+<div class="contents">
+<div class="textblock"><code>#include &lt;net/inet_timewait_sock.h&gt;</code><br/>
+<code>#include &lt;net/inet_hashtables.h&gt;</code><br/>
+<code>#include &lt;uapi/asm-generic/errno.h&gt;</code><br/>
+<code>#include &lt;linux/gmtp.h&gt;</code><br/>
+<code>#include &lt;net/netns/gmtp.h&gt;</code><br/>
+</div><div class="textblock"><div class="dynheader">
+Include dependency graph for gmtp.h:</div>
+<div class="dyncontent">
+<div class="center"><iframe scrolling="no" frameborder="0" src="gmtp_8h__incl.svg" width="800" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
+</div>
+</div><div class="textblock"><div class="dynheader">
+This graph shows which files directly or indirectly include this file:</div>
+<div class="dyncontent">
+<div class="center"><iframe scrolling="no" frameborder="0" src="gmtp_8h__dep__incl.svg" width="250" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
+</div>
+</div>
+<p><a href="gmtp_8h_source.html">Go to the source code of this file.</a></p>
+<table class="memberdecls">
+<tr class="heading"><td colspan="2"><h2><a name="nested-classes"></a>
+Data Structures</h2></td></tr>
+<tr class="memitem:structgmtp__skb__cb"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#structgmtp__skb__cb">gmtp_skb_cb</a></td></tr>
+</table><table class="memberdecls">
+<tr class="heading"><td colspan="2"><h2><a name="define-members"></a>
+Macros</h2></td></tr>
+<tr class="memitem:ac4d88ba4957c61fad1b1e81e86e26d25"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#ac4d88ba4957c61fad1b1e81e86e26d25">GMTP_INFO</a>&#160;&#160;&#160;&quot;[GMTP_INFO] %s:%d - &quot;</td></tr>
+<tr class="memitem:a9bdaefac28c54404d5d18bf9f4df448f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a9bdaefac28c54404d5d18bf9f4df448f">GMTP_WARNING</a>&#160;&#160;&#160;&quot;[GMTP_WARNING]  %s:%d at %s - &quot;</td></tr>
+<tr class="memitem:a8f042630afadb776c9fe83ace47fac92"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a8f042630afadb776c9fe83ace47fac92">GMTP_ERROR</a>&#160;&#160;&#160;&quot;[GMTP_ERROR] %s:%d at %s - &quot;</td></tr>
+<tr class="memitem:acb14405c3e3845ce630b3330c048d3e8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#acb14405c3e3845ce630b3330c048d3e8">gmtp_print_debug</a>(fmt, args...)</td></tr>
+<tr class="memitem:a4e56790f2f3dc1623fbd978467ac614d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a4e56790f2f3dc1623fbd978467ac614d">gmtp_print_warning</a>(fmt, args...)</td></tr>
+<tr class="memitem:aef36831848715ac98879ce5642229e14"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#aef36831848715ac98879ce5642229e14">gmtp_print_error</a>(fmt, args...)</td></tr>
+<tr class="memitem:aaa9538bb543aaffa4731989fc7ddc0d8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#aaa9538bb543aaffa4731989fc7ddc0d8">MAX_GMTP_HEADER</a>&#160;&#160;&#160;(2047 * sizeof(uint32_t))</td></tr>
+<tr class="memitem:afb9f06378ed5523a74a21aedc7f34ea6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#afb9f06378ed5523a74a21aedc7f34ea6">MAX_GMTP_SPECIFIC_HEADER</a>&#160;&#160;&#160;(8 * sizeof(uint32_t))</td></tr>
+<tr class="memitem:aed94c10b0d5306f67874e039a60f7907"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#aed94c10b0d5306f67874e039a60f7907">MAX_GMTP_VARIABLE_HEADER</a>&#160;&#160;&#160;(<a class="el" href="gmtp_8h.html#aaa9538bb543aaffa4731989fc7ddc0d8">MAX_GMTP_HEADER</a> - <a class="el" href="gmtp_8h.html#afb9f06378ed5523a74a21aedc7f34ea6">MAX_GMTP_SPECIFIC_HEADER</a>)</td></tr>
+<tr class="memitem:a5b5fd1251f0fec5bc8dda21b11d57de4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a5b5fd1251f0fec5bc8dda21b11d57de4">GMTP_TIMEOUT_INIT</a>&#160;&#160;&#160;((unsigned int)(3 * HZ))</td></tr>
+<tr class="memitem:a973dbe6c782d6d3a6b8fb1a2d15d0825"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a973dbe6c782d6d3a6b8fb1a2d15d0825">GMTP_SKB_CB</a>(__skb)&#160;&#160;&#160;((struct <a class="el" href="gmtp_8h.html#structgmtp__skb__cb">gmtp_skb_cb</a> *)&amp;((__skb)-&gt;cb[0]))</td></tr>
+<tr class="memitem:a86aa8330d1bef9cdb384dc6ef9738bcb"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a86aa8330d1bef9cdb384dc6ef9738bcb">GMTP_TIMEWAIT_LEN</a>&#160;&#160;&#160;(60 * HZ)</td></tr>
+</table><table class="memberdecls">
+<tr class="heading"><td colspan="2"><h2><a name="func-members"></a>
+Functions</h2></td></tr>
+<tr class="memitem:a181e0298f75786ee945b7dcd06adaf1b"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a181e0298f75786ee945b7dcd06adaf1b">gmtp_packet_name</a> (const int)</td></tr>
+<tr class="memitem:a1c872c8a33008e99befdb297a6518e03"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a1c872c8a33008e99befdb297a6518e03">gmtp_init_sock</a> (struct sock *sk, const __u8 ctl_sock_initialized)</td></tr>
+<tr class="memitem:a59f856ab28c13b885fbe2c38f7a70a87"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a59f856ab28c13b885fbe2c38f7a70a87">gmtp_close</a> (struct sock *sk, long timeout)</td></tr>
+<tr class="memitem:a3d651b3671bf86675ce95fb92228b6a3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a3d651b3671bf86675ce95fb92228b6a3">gmtp_v4_connect</a> (struct sock *sk, struct sockaddr *uaddr, int addr_len)</td></tr>
+<tr class="memitem:a2df4bd07928440434f3ffc5e9a99e192"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a2df4bd07928440434f3ffc5e9a99e192">gmtp_connect</a> (struct sock *sk)</td></tr>
+<tr class="memitem:a8dacfb87447f165efac077aa907a8e27"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a8dacfb87447f165efac077aa907a8e27">gmtp_disconnect</a> (struct sock *sk, int flags)</td></tr>
+<tr class="memitem:ab9bd011833dc85384f4d3c6e5c29f6de"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#ab9bd011833dc85384f4d3c6e5c29f6de">gmtp_ioctl</a> (struct sock *sk, int cmd, unsigned long arg)</td></tr>
+<tr class="memitem:a789192a2299f8f626e034ad9c87d99b2"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a789192a2299f8f626e034ad9c87d99b2">gmtp_getsockopt</a> (struct sock *sk, int level, int optname, char __user *optval, int __user *optlen)</td></tr>
+<tr class="memitem:aa5511c6bf84a1956f308ce920a134c29"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#aa5511c6bf84a1956f308ce920a134c29">gmtp_setsockopt</a> (struct sock *sk, int level, int optname, char __user *optval, unsigned int optlen)</td></tr>
+<tr class="memitem:a76ebcaaace625859ee741e890d7e7da7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a76ebcaaace625859ee741e890d7e7da7">gmtp_sendmsg</a> (struct kiocb *iocb, struct sock *sk, struct msghdr *msg, size_t size)</td></tr>
+<tr class="memitem:a462ae3f8dd122bdee2af7fd115694db4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a462ae3f8dd122bdee2af7fd115694db4">gmtp_recvmsg</a> (struct kiocb *iocb, struct sock *sk, struct msghdr *msg, size_t len, int nonblock, int flags, int *addr_len)</td></tr>
+<tr class="memitem:ae74ac6585ac8e29b98e916f4f29ae3f0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#ae74ac6585ac8e29b98e916f4f29ae3f0">gmtp_shutdown</a> (struct sock *sk, int how)</td></tr>
+<tr class="memitem:ada146a75c7595313fda4021b3d64f2af"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#ada146a75c7595313fda4021b3d64f2af">gmtp_destroy_sock</a> (struct sock *sk)</td></tr>
+<tr class="memitem:ad4d2e06e572fc5135a3a2636b629b8f2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#ad4d2e06e572fc5135a3a2636b629b8f2">gmtp_set_state</a> (struct sock *, const int)</td></tr>
+<tr class="memitem:aa43e6c6314b0b836ffb2616535879838"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#aa43e6c6314b0b836ffb2616535879838">inet_gmtp_listen</a> (struct socket *sock, int backlog)</td></tr>
+<tr class="memitem:a706d0cdecf4e871e347de22e69eed8ee"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a706d0cdecf4e871e347de22e69eed8ee">gmtp_insert_options</a> (struct sock *sk, struct sk_buff *skb)</td></tr>
+<tr class="memitem:a3d9324eca652acd36308327a06050473"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a3d9324eca652acd36308327a06050473">gmtp_rcv_established</a> (struct sock *sk, struct sk_buff *skb, const struct gmtp_hdr *dh, const unsigned int len)</td></tr>
+<tr class="memitem:a212e85de01d9dd2c64578b4a61020f18"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a212e85de01d9dd2c64578b4a61020f18">gmtp_rcv_state_process</a> (struct sock *sk, struct sk_buff *skb, struct gmtp_hdr *gh, unsigned int len)</td></tr>
+<tr class="memitem:a8e94a84dd0d5b12f39df23b6c6ff005b"><td class="memItemLeft" align="right" valign="top">struct sk_buff *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a8e94a84dd0d5b12f39df23b6c6ff005b">gmtp_make_response</a> (struct sock *sk, struct dst_entry *dst, struct request_sock *req)</td></tr>
+<tr class="memitem:a702ba25884e070b579dcfa4769260847"><td class="memItemLeft" align="right" valign="top">struct sk_buff *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#a702ba25884e070b579dcfa4769260847">gmtp_ctl_make_reset</a> (struct sock *sk, struct sk_buff *rcv_skb)</td></tr>
+</table><table class="memberdecls">
+<tr class="heading"><td colspan="2"><h2><a name="var-members"></a>
+Variables</h2></td></tr>
+<tr class="memitem:ab43beb876bb256a2f539107b7f589c44"><td class="memItemLeft" align="right" valign="top">struct inet_hashinfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#ab43beb876bb256a2f539107b7f589c44">gmtp_hashinfo</a></td></tr>
+<tr class="memitem:acab13337f0e829de92aa24505a723eae"><td class="memItemLeft" align="right" valign="top">struct percpu_counter&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmtp_8h.html#acab13337f0e829de92aa24505a723eae">gmtp_orphan_count</a></td></tr>
+</table>
+<hr/><h2>Data Structure Documentation</h2>
+<a name="structgmtp__skb__cb" id="structgmtp__skb__cb"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">struct gmtp_skb_cb</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+<div class="textblock"><p><a class="el" href="namespace_3globalScope_4.html#protocolThis-p">This</a> is the control buffer. It is free to use by any layer. <a class="el" href="namespace_3globalScope_4.html#protocolThis-p">This</a> is an opaque area used to store private information.</p>
+<p>struct sk_buff { (...) char cb[48] }</p>
+<p><a class="el" href="gmtp_8h.html#structgmtp__skb__cb">gmtp_skb_cb</a> - GMTP per-packet control information</p>
+<p>: one of dccp_pkt_type (or unknown) : sequence number : one of gmtp_reset_codes : Data1..3 fields (depend on )</p>
+<p><a class="el" href="namespace_3globalScope_4.html#protocolThis-p">This</a> is used for transmission as well as for reception. </p>
+</div><table class="fieldtable">
+<tr><th colspan="3">Data Fields</th></tr>
+<tr><td class="fieldtype">
+<a class="anchor" id="a5f970494c68fc06c84823c233ed9d6a8"></a>__u8</td>
+<td class="fieldname">
+gmtpd_reset_code</td>
+<td class="fielddoc">
+</td></tr>
+<tr><td class="fieldtype">
+<a class="anchor" id="a766db441c404018311173c1171ef917a"></a>__u8</td>
+<td class="fieldname">
+gmtpd_reset_data</td>
+<td class="fielddoc">
+</td></tr>
+<tr><td class="fieldtype">
+<a class="anchor" id="ac2ed3bbe3289ce05b2fa7847c5e67da6"></a>__u64</td>
+<td class="fieldname">
+gmtpd_seq</td>
+<td class="fielddoc">
+</td></tr>
+<tr><td class="fieldtype">
+<a class="anchor" id="a40635375f5d8223a8de70b79833c32c2"></a>__u8</td>
+<td class="fieldname">
+gmtpd_type:5</td>
+<td class="fielddoc">
+</td></tr>
+</table>
+
+</div>
+</div>
+<hr/><h2>Macro Definition Documentation</h2>
+<a class="anchor" id="a8f042630afadb776c9fe83ace47fac92"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">#define GMTP_ERROR&#160;&#160;&#160;&quot;[GMTP_ERROR] %s:%d at %s - &quot;</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ac4d88ba4957c61fad1b1e81e86e26d25"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">#define GMTP_INFO&#160;&#160;&#160;&quot;[GMTP_INFO] %s:%d - &quot;</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="acb14405c3e3845ce630b3330c048d3e8"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">#define gmtp_print_debug</td>
+          <td>(</td>
+          <td class="paramtype">&#160;</td>
+          <td class="paramname">fmt, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">&#160;</td>
+          <td class="paramname">args...&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+<b>Value:</b><div class="fragment"><div class="line">printk(KERN_INFO <a class="code" href="gmtp_8h.html#ac4d88ba4957c61fad1b1e81e86e26d25">GMTP_INFO</a> fmt \</div>
+<div class="line">                <span class="stringliteral">&quot;\n&quot;</span>, __FUNCTION__, __LINE__, ##args)</div>
+</div><!-- fragment -->
+</div>
+</div>
+<a class="anchor" id="aef36831848715ac98879ce5642229e14"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">#define gmtp_print_error</td>
+          <td>(</td>
+          <td class="paramtype">&#160;</td>
+          <td class="paramname">fmt, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">&#160;</td>
+          <td class="paramname">args...&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+<b>Value:</b><div class="fragment"><div class="line">printk(KERN_ERR <a class="code" href="gmtp_8h.html#a8f042630afadb776c9fe83ace47fac92">GMTP_ERROR</a> fmt \</div>
+<div class="line">                <span class="stringliteral">&quot;\n&quot;</span>, __FUNCTION__, __LINE__, __FILE__, ##args)</div>
+</div><!-- fragment -->
+</div>
+</div>
+<a class="anchor" id="a4e56790f2f3dc1623fbd978467ac614d"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">#define gmtp_print_warning</td>
+          <td>(</td>
+          <td class="paramtype">&#160;</td>
+          <td class="paramname">fmt, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">&#160;</td>
+          <td class="paramname">args...&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+<b>Value:</b><div class="fragment"><div class="line">printk(KERN_WARNING <a class="code" href="gmtp_8h.html#a9bdaefac28c54404d5d18bf9f4df448f">GMTP_WARNING</a> fmt\</div>
+<div class="line">                <span class="stringliteral">&quot;\n&quot;</span>, __FUNCTION__, __LINE__, __FILE__, ##args)</div>
+</div><!-- fragment -->
+</div>
+</div>
+<a class="anchor" id="a973dbe6c782d6d3a6b8fb1a2d15d0825"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">#define GMTP_SKB_CB</td>
+          <td>(</td>
+          <td class="paramtype">&#160;</td>
+          <td class="paramname">__skb</td><td>)</td>
+          <td>&#160;&#160;&#160;((struct <a class="el" href="gmtp_8h.html#structgmtp__skb__cb">gmtp_skb_cb</a> *)&amp;((__skb)-&gt;cb[0]))</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a5b5fd1251f0fec5bc8dda21b11d57de4"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">#define GMTP_TIMEOUT_INIT&#160;&#160;&#160;((unsigned int)(3 * HZ))</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a86aa8330d1bef9cdb384dc6ef9738bcb"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">#define GMTP_TIMEWAIT_LEN&#160;&#160;&#160;(60 * HZ)</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a9bdaefac28c54404d5d18bf9f4df448f"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">#define GMTP_WARNING&#160;&#160;&#160;&quot;[GMTP_WARNING]  %s:%d at %s - &quot;</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="aaa9538bb543aaffa4731989fc7ddc0d8"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">#define MAX_GMTP_HEADER&#160;&#160;&#160;(2047 * sizeof(uint32_t))</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="afb9f06378ed5523a74a21aedc7f34ea6"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">#define MAX_GMTP_SPECIFIC_HEADER&#160;&#160;&#160;(8 * sizeof(uint32_t))</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="aed94c10b0d5306f67874e039a60f7907"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">#define MAX_GMTP_VARIABLE_HEADER&#160;&#160;&#160;(<a class="el" href="gmtp_8h.html#aaa9538bb543aaffa4731989fc7ddc0d8">MAX_GMTP_HEADER</a> - <a class="el" href="gmtp_8h.html#afb9f06378ed5523a74a21aedc7f34ea6">MAX_GMTP_SPECIFIC_HEADER</a>)</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<hr/><h2>Function Documentation</h2>
+<a class="anchor" id="a59f856ab28c13b885fbe2c38f7a70a87"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">void gmtp_close </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">long&#160;</td>
+          <td class="paramname"><em>timeout</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a2df4bd07928440434f3ffc5e9a99e192"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_connect </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+<p><div class="dynheader">
+Here is the caller graph for this function:</div>
+<div class="dyncontent">
+<div class="center"><iframe scrolling="no" frameborder="0" src="gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192_icgraph.svg" width="288" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
+</div>
+</p>
+
+</div>
+</div>
+<a class="anchor" id="a702ba25884e070b579dcfa4769260847"></a>
+<div class="memitem">
+<div class="memproto">
+<table class="mlabels">
+  <tr>
+  <td class="mlabels-left">
+      <table class="memname">
+        <tr>
+          <td class="memname">struct sk_buff* gmtp_ctl_make_reset </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct sk_buff *&#160;</td>
+          <td class="paramname"><em>rcv_skb</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+  </td>
+  <td class="mlabels-right">
+<span class="mlabels"><span class="mlabel">read</span></span>  </td>
+  </tr>
+</table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ada146a75c7595313fda4021b3d64f2af"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">void gmtp_destroy_sock </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a8dacfb87447f165efac077aa907a8e27"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_disconnect </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>flags</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a789192a2299f8f626e034ad9c87d99b2"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_getsockopt </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>level</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>optname</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">char __user *&#160;</td>
+          <td class="paramname"><em>optval</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int __user *&#160;</td>
+          <td class="paramname"><em>optlen</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a1c872c8a33008e99befdb297a6518e03"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_init_sock </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">const __u8&#160;</td>
+          <td class="paramname"><em>ctl_sock_initialized</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a706d0cdecf4e871e347de22e69eed8ee"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_insert_options </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct sk_buff *&#160;</td>
+          <td class="paramname"><em>skb</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ab9bd011833dc85384f4d3c6e5c29f6de"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_ioctl </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>cmd</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">unsigned long&#160;</td>
+          <td class="paramname"><em>arg</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a8e94a84dd0d5b12f39df23b6c6ff005b"></a>
+<div class="memitem">
+<div class="memproto">
+<table class="mlabels">
+  <tr>
+  <td class="mlabels-left">
+      <table class="memname">
+        <tr>
+          <td class="memname">struct sk_buff* gmtp_make_response </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct dst_entry *&#160;</td>
+          <td class="paramname"><em>dst</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct request_sock *&#160;</td>
+          <td class="paramname"><em>req</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+  </td>
+  <td class="mlabels-right">
+<span class="mlabels"><span class="mlabel">read</span></span>  </td>
+  </tr>
+</table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a181e0298f75786ee945b7dcd06adaf1b"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">const char* gmtp_packet_name </td>
+          <td>(</td>
+          <td class="paramtype">const int&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a3d9324eca652acd36308327a06050473"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_rcv_established </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct sk_buff *&#160;</td>
+          <td class="paramname"><em>skb</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">const struct gmtp_hdr *&#160;</td>
+          <td class="paramname"><em>dh</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">const unsigned int&#160;</td>
+          <td class="paramname"><em>len</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+<p><div class="dynheader">
+Here is the caller graph for this function:</div>
+<div class="dyncontent">
+<div class="center"><iframe scrolling="no" frameborder="0" src="gmtp_8h_a3d9324eca652acd36308327a06050473_icgraph.svg" width="327" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
+</div>
+</p>
+
+</div>
+</div>
+<a class="anchor" id="a212e85de01d9dd2c64578b4a61020f18"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_rcv_state_process </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct sk_buff *&#160;</td>
+          <td class="paramname"><em>skb</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct gmtp_hdr *&#160;</td>
+          <td class="paramname"><em>gh</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">unsigned int&#160;</td>
+          <td class="paramname"><em>len</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+<p><div class="dynheader">
+Here is the caller graph for this function:</div>
+<div class="dyncontent">
+<div class="center"><iframe scrolling="no" frameborder="0" src="gmtp_8h_a212e85de01d9dd2c64578b4a61020f18_icgraph.svg" width="343" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
+</div>
+</p>
+
+</div>
+</div>
+<a class="anchor" id="a462ae3f8dd122bdee2af7fd115694db4"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_recvmsg </td>
+          <td>(</td>
+          <td class="paramtype">struct kiocb *&#160;</td>
+          <td class="paramname"><em>iocb</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct msghdr *&#160;</td>
+          <td class="paramname"><em>msg</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">size_t&#160;</td>
+          <td class="paramname"><em>len</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>nonblock</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>flags</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int *&#160;</td>
+          <td class="paramname"><em>addr_len</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a76ebcaaace625859ee741e890d7e7da7"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_sendmsg </td>
+          <td>(</td>
+          <td class="paramtype">struct kiocb *&#160;</td>
+          <td class="paramname"><em>iocb</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct msghdr *&#160;</td>
+          <td class="paramname"><em>msg</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">size_t&#160;</td>
+          <td class="paramname"><em>size</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ad4d2e06e572fc5135a3a2636b629b8f2"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">void gmtp_set_state </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname">, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">const int&#160;</td>
+          <td class="paramname">&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+<p><div class="dynheader">
+Here is the caller graph for this function:</div>
+<div class="dyncontent">
+<div class="center"><iframe scrolling="no" frameborder="0" src="gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2_icgraph.svg" width="296" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
+</div>
+</p>
+
+</div>
+</div>
+<a class="anchor" id="aa5511c6bf84a1956f308ce920a134c29"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_setsockopt </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>level</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>optname</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">char __user *&#160;</td>
+          <td class="paramname"><em>optval</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">unsigned int&#160;</td>
+          <td class="paramname"><em>optlen</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ae74ac6585ac8e29b98e916f4f29ae3f0"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">void gmtp_shutdown </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>how</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a3d651b3671bf86675ce95fb92228b6a3"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_v4_connect </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct sockaddr *&#160;</td>
+          <td class="paramname"><em>uaddr</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>addr_len</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+<p><div class="dynheader">
+Here is the call graph for this function:</div>
+<div class="dyncontent">
+<div class="center"><iframe scrolling="no" frameborder="0" src="gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3_cgraph.svg" width="296" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
+</div>
+</p>
+
+</div>
+</div>
+<a class="anchor" id="aa43e6c6314b0b836ffb2616535879838"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int inet_gmtp_listen </td>
+          <td>(</td>
+          <td class="paramtype">struct socket *&#160;</td>
+          <td class="paramname"><em>sock</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>backlog</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<hr/><h2>Variable Documentation</h2>
+<a class="anchor" id="ab43beb876bb256a2f539107b7f589c44"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">struct inet_hashinfo gmtp_hashinfo</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="acab13337f0e829de92aa24505a723eae"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">struct percpu_counter gmtp_orphan_count</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__dep__incl.map b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__dep__incl.map
new file mode 100644
index 0000000..8f8f292
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__dep__incl.map
@@ -0,0 +1,5 @@
+<map id="G" name="G">
+<area shape="rect" id="node2" href="$ipv4_8c.html" title="ipv4.c" alt="" coords="5,80,63,107"/>
+<area shape="rect" id="node3" href="$output_8c.html" title="output.c" alt="" coords="87,80,157,107"/>
+<area shape="rect" id="node4" href="$proto_8c.html" title="proto.c" alt="" coords="181,80,244,107"/>
+</map>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__dep__incl.md5 b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__dep__incl.md5
new file mode 100644
index 0000000..0ca4dc9
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__dep__incl.md5
@@ -0,0 +1 @@
+9cd3dcf5cfecaa9802f969015d8fe23a
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__dep__incl.svg b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__dep__incl.svg
new file mode 100644
index 0000000..fa0cda2
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__dep__incl.svg
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
+ "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Generated by graphviz version 2.38.0 (20140413.2041)
+ -->
+<!-- Title: G Pages: 1 -->
+<svg width="187pt" height="84pt"
+ viewBox="0.00 0.00 187.00 84.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 80)">
+<title>G</title>
+<polygon fill="white" stroke="none" points="-4,4 -4,-80 183,-80 183,4 -4,4"/>
+<!-- Node1 -->
+<g id="node1" class="node"><title>Node1</title>
+<polygon fill="#bfbfbf" stroke="black" points="64,-56.5 64,-75.5 111,-75.5 111,-56.5 64,-56.5"/>
+<text text-anchor="middle" x="87.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp.h</text>
+</g>
+<!-- Node2 -->
+<g id="node2" class="node"><title>Node2</title>
+<g id="a_node2"><a xlink:href="ipv4_8c.html" target="_top" xlink:title="ipv4.c">
+<polygon fill="white" stroke="black" points="0,-0.5 0,-19.5 43,-19.5 43,-0.5 0,-0.5"/>
+<text text-anchor="middle" x="21.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">ipv4.c</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node2 -->
+<g id="edge1" class="edge"><title>Node1&#45;&gt;Node2</title>
+<path fill="none" stroke="midnightblue" d="M68.9463,-49.8197C57.1219,-40.1452 42.2144,-27.9481 32.297,-19.8339"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="66.94,-52.7004 76.896,-56.324 71.3727,-47.2827 66.94,-52.7004"/>
+</g>
+<!-- Node3 -->
+<g id="node3" class="node"><title>Node3</title>
+<g id="a_node3"><a xlink:href="output_8c.html" target="_top" xlink:title="output.c">
+<polygon fill="white" stroke="black" points="61.5,-0.5 61.5,-19.5 113.5,-19.5 113.5,-0.5 61.5,-0.5"/>
+<text text-anchor="middle" x="87.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">output.c</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node3 -->
+<g id="edge2" class="edge"><title>Node1&#45;&gt;Node3</title>
+<path fill="none" stroke="midnightblue" d="M87.5,-45.8045C87.5,-36.9102 87.5,-26.7798 87.5,-19.7511"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="84.0001,-46.083 87.5,-56.083 91.0001,-46.083 84.0001,-46.083"/>
+</g>
+<!-- Node4 -->
+<g id="node4" class="node"><title>Node4</title>
+<g id="a_node4"><a xlink:href="proto_8c.html" target="_top" xlink:title="proto.c">
+<polygon fill="white" stroke="black" points="132,-0.5 132,-19.5 179,-19.5 179,-0.5 132,-0.5"/>
+<text text-anchor="middle" x="155.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">proto.c</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node4 -->
+<g id="edge3" class="edge"><title>Node1&#45;&gt;Node4</title>
+<path fill="none" stroke="midnightblue" d="M106.262,-50.1008C118.5,-40.3824 134.059,-28.0269 144.376,-19.8339"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="104.08,-47.3642 98.4254,-56.324 108.433,-52.846 104.08,-47.3642"/>
+</g>
+</g>
+</svg>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__incl.map b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__incl.map
new file mode 100644
index 0000000..8be6a30
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__incl.map
@@ -0,0 +1,2 @@
+<map id="G" name="G">
+</map>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__incl.md5 b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__incl.md5
new file mode 100644
index 0000000..5be15c6
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__incl.md5
@@ -0,0 +1 @@
+02a4c76e33d179c03a658d1d245033ad
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__incl.svg b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__incl.svg
new file mode 100644
index 0000000..ab473ed
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h__incl.svg
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
+ "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Generated by graphviz version 2.38.0 (20140413.2041)
+ -->
+<!-- Title: G Pages: 1 -->
+<svg width="600pt" height="84pt"
+ viewBox="0.00 0.00 599.50 84.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 80)">
+<title>G</title>
+<polygon fill="white" stroke="none" points="-4,4 -4,-80 595.5,-80 595.5,4 -4,4"/>
+<!-- Node1 -->
+<g id="node1" class="node"><title>Node1</title>
+<polygon fill="#bfbfbf" stroke="black" points="310,-56.5 310,-75.5 357,-75.5 357,-56.5 310,-56.5"/>
+<text text-anchor="middle" x="333.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp.h</text>
+</g>
+<!-- Node2 -->
+<g id="node2" class="node"><title>Node2</title>
+<polygon fill="white" stroke="#bfbfbf" points="0,-0.5 0,-19.5 125,-19.5 125,-0.5 0,-0.5"/>
+<text text-anchor="middle" x="62.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/inet_timewait_sock.h</text>
+</g>
+<!-- Node1&#45;&gt;Node2 -->
+<g id="edge1" class="edge"><title>Node1&#45;&gt;Node2</title>
+<path fill="none" stroke="midnightblue" d="M309.925,-60.3023C266.831,-51.7155 174.373,-33.292 115.488,-21.5584"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="116.112,-18.1141 105.621,-19.5924 114.744,-24.9792 116.112,-18.1141"/>
+</g>
+<!-- Node3 -->
+<g id="node3" class="node"><title>Node3</title>
+<polygon fill="white" stroke="#bfbfbf" points="143.5,-0.5 143.5,-19.5 253.5,-19.5 253.5,-0.5 143.5,-0.5"/>
+<text text-anchor="middle" x="198.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/inet_hashtables.h</text>
+</g>
+<!-- Node1&#45;&gt;Node3 -->
+<g id="edge2" class="edge"><title>Node1&#45;&gt;Node3</title>
+<path fill="none" stroke="midnightblue" d="M312.109,-56.4435C289.793,-47.5171 254.597,-33.4387 229.292,-23.3168"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="230.376,-19.9807 219.791,-19.5164 227.776,-26.4801 230.376,-19.9807"/>
+</g>
+<!-- Node4 -->
+<g id="node4" class="node"><title>Node4</title>
+<polygon fill="white" stroke="#bfbfbf" points="271.5,-0.5 271.5,-19.5 395.5,-19.5 395.5,-0.5 271.5,-0.5"/>
+<text text-anchor="middle" x="333.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">uapi/asm&#45;generic/errno.h</text>
+</g>
+<!-- Node1&#45;&gt;Node4 -->
+<g id="edge3" class="edge"><title>Node1&#45;&gt;Node4</title>
+<path fill="none" stroke="midnightblue" d="M333.5,-56.083C333.5,-49.0059 333.5,-38.8611 333.5,-29.9865"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="337,-29.751 333.5,-19.7511 330,-29.7511 337,-29.751"/>
+</g>
+<!-- Node5 -->
+<g id="node5" class="node"><title>Node5</title>
+<polygon fill="white" stroke="#bfbfbf" points="413.5,-0.5 413.5,-19.5 483.5,-19.5 483.5,-0.5 413.5,-0.5"/>
+<text text-anchor="middle" x="448.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">linux/gmtp.h</text>
+</g>
+<!-- Node1&#45;&gt;Node5 -->
+<g id="edge4" class="edge"><title>Node1&#45;&gt;Node5</title>
+<path fill="none" stroke="midnightblue" d="M351.722,-56.4435C370.396,-47.6751 399.656,-33.9355 421.117,-23.8579"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="422.799,-26.935 430.363,-19.5164 419.824,-20.5988 422.799,-26.935"/>
+</g>
+<!-- Node6 -->
+<g id="node6" class="node"><title>Node6</title>
+<polygon fill="white" stroke="#bfbfbf" points="501.5,-0.5 501.5,-19.5 591.5,-19.5 591.5,-0.5 501.5,-0.5"/>
+<text text-anchor="middle" x="546.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/netns/gmtp.h</text>
+</g>
+<!-- Node1&#45;&gt;Node6 -->
+<g id="edge5" class="edge"><title>Node1&#45;&gt;Node6</title>
+<path fill="none" stroke="midnightblue" d="M357.109,-59.0147C392.179,-50.1237 458.632,-33.2763 502.752,-22.0911"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="503.797,-25.437 512.63,-19.5868 502.077,-18.6516 503.797,-25.437"/>
+</g>
+</g>
+</svg>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a212e85de01d9dd2c64578b4a61020f18_icgraph.map b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a212e85de01d9dd2c64578b4a61020f18_icgraph.map
new file mode 100644
index 0000000..24ec32e
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a212e85de01d9dd2c64578b4a61020f18_icgraph.map
@@ -0,0 +1,3 @@
+<map id="G" name="G">
+<area shape="rect" id="node2" href="$ipv4_8c.html#a96e77cd9da9396b4e3e9d2ca1bdd62ef" title="gmtp_v4_do_rcv" alt="" coords="219,5,337,32"/>
+</map>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a212e85de01d9dd2c64578b4a61020f18_icgraph.md5 b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a212e85de01d9dd2c64578b4a61020f18_icgraph.md5
new file mode 100644
index 0000000..4975c89
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a212e85de01d9dd2c64578b4a61020f18_icgraph.md5
@@ -0,0 +1 @@
+88aaa67033434dd5c1e87fcfa490070c
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a212e85de01d9dd2c64578b4a61020f18_icgraph.svg b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a212e85de01d9dd2c64578b4a61020f18_icgraph.svg
new file mode 100644
index 0000000..c0c7ca0
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a212e85de01d9dd2c64578b4a61020f18_icgraph.svg
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
+ "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Generated by graphviz version 2.38.0 (20140413.2041)
+ -->
+<!-- Title: G Pages: 1 -->
+<svg width="257pt" height="28pt"
+ viewBox="0.00 0.00 257.00 28.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 24)">
+<title>G</title>
+<polygon fill="white" stroke="none" points="-4,4 -4,-24 253,-24 253,4 -4,4"/>
+<!-- Node1 -->
+<g id="node1" class="node"><title>Node1</title>
+<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-19.5 124,-19.5 124,-0.5 0,-0.5"/>
+<text text-anchor="middle" x="62" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_rcv_state_process</text>
+</g>
+<!-- Node2 -->
+<g id="node2" class="node"><title>Node2</title>
+<g id="a_node2"><a xlink:href="ipv4_8c.html#a96e77cd9da9396b4e3e9d2ca1bdd62ef" target="_top" xlink:title="gmtp_v4_do_rcv">
+<polygon fill="white" stroke="black" points="160,-0.5 160,-19.5 249,-19.5 249,-0.5 160,-0.5"/>
+<text text-anchor="middle" x="204.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_v4_do_rcv</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node2 -->
+<g id="edge1" class="edge"><title>Node1&#45;&gt;Node2</title>
+<path fill="none" stroke="midnightblue" d="M134.377,-10C143.051,-10 151.701,-10 159.8,-10"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="134.217,-6.5001 124.217,-10 134.217,-13.5001 134.217,-6.5001"/>
+</g>
+</g>
+</svg>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192_icgraph.map b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192_icgraph.map
new file mode 100644
index 0000000..5321503
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192_icgraph.map
@@ -0,0 +1,3 @@
+<map id="G" name="G">
+<area shape="rect" id="node2" href="$ipv4_8c.html#a3d651b3671bf86675ce95fb92228b6a3" title="gmtp_v4_connect" alt="" coords="157,5,283,32"/>
+</map>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192_icgraph.md5 b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192_icgraph.md5
new file mode 100644
index 0000000..4173001
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192_icgraph.md5
@@ -0,0 +1 @@
+f0c7eb86baaf47747a7203c9d59f6743
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192_icgraph.svg b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192_icgraph.svg
new file mode 100644
index 0000000..3c6ae5a
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192_icgraph.svg
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
+ "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Generated by graphviz version 2.38.0 (20140413.2041)
+ -->
+<!-- Title: G Pages: 1 -->
+<svg width="216pt" height="28pt"
+ viewBox="0.00 0.00 216.00 28.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 24)">
+<title>G</title>
+<polygon fill="white" stroke="none" points="-4,4 -4,-24 212,-24 212,4 -4,4"/>
+<!-- Node1 -->
+<g id="node1" class="node"><title>Node1</title>
+<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-19.5 78,-19.5 78,-0.5 0,-0.5"/>
+<text text-anchor="middle" x="39" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_connect</text>
+</g>
+<!-- Node2 -->
+<g id="node2" class="node"><title>Node2</title>
+<g id="a_node2"><a xlink:href="ipv4_8c.html#a3d651b3671bf86675ce95fb92228b6a3" target="_top" xlink:title="gmtp_v4_connect">
+<polygon fill="white" stroke="black" points="114,-0.5 114,-19.5 208,-19.5 208,-0.5 114,-0.5"/>
+<text text-anchor="middle" x="161" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_v4_connect</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node2 -->
+<g id="edge1" class="edge"><title>Node1&#45;&gt;Node2</title>
+<path fill="none" stroke="midnightblue" d="M88.3024,-10C96.6699,-10 105.353,-10 113.667,-10"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="88.2987,-6.5001 78.2987,-10 88.2986,-13.5001 88.2987,-6.5001"/>
+</g>
+</g>
+</svg>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3_cgraph.map b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3_cgraph.map
new file mode 100644
index 0000000..4952395
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3_cgraph.map
@@ -0,0 +1,4 @@
+<map id="G" name="G">
+<area shape="rect" id="node2" href="$gmtp_8h.html#ad4d2e06e572fc5135a3a2636b629b8f2" title="gmtp_set_state" alt="" coords="179,5,291,32"/>
+<area shape="rect" id="node3" href="$gmtp_8h.html#a2df4bd07928440434f3ffc5e9a99e192" title="gmtp_connect" alt="" coords="183,56,287,83"/>
+</map>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3_cgraph.md5 b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3_cgraph.md5
new file mode 100644
index 0000000..bfa4d90
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3_cgraph.md5
@@ -0,0 +1 @@
+2e646175c43992c19267008c285487e7
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3_cgraph.svg b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3_cgraph.svg
new file mode 100644
index 0000000..f665ffa
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3_cgraph.svg
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
+ "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Generated by graphviz version 2.38.0 (20140413.2041)
+ -->
+<!-- Title: G Pages: 1 -->
+<svg width="222pt" height="66pt"
+ viewBox="0.00 0.00 222.00 66.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 62)">
+<title>G</title>
+<polygon fill="white" stroke="none" points="-4,4 -4,-62 218,-62 218,4 -4,4"/>
+<!-- Node1 -->
+<g id="node1" class="node"><title>Node1</title>
+<polygon fill="#bfbfbf" stroke="black" points="0,-19.5 0,-38.5 94,-38.5 94,-19.5 0,-19.5"/>
+<text text-anchor="middle" x="47" y="-26.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_v4_connect</text>
+</g>
+<!-- Node2 -->
+<g id="node2" class="node"><title>Node2</title>
+<g id="a_node2"><a xlink:href="gmtp_8h.html#ad4d2e06e572fc5135a3a2636b629b8f2" target="_top" xlink:title="gmtp_set_state">
+<polygon fill="white" stroke="black" points="130,-38.5 130,-57.5 214,-57.5 214,-38.5 130,-38.5"/>
+<text text-anchor="middle" x="172" y="-45.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_set_state</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node2 -->
+<g id="edge1" class="edge"><title>Node1&#45;&gt;Node2</title>
+<path fill="none" stroke="midnightblue" d="M94.1506,-36.129C102.486,-37.4166 111.224,-38.7663 119.696,-40.0749"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="119.436,-43.5763 129.853,-41.644 120.505,-36.6583 119.436,-43.5763"/>
+</g>
+<!-- Node3 -->
+<g id="node3" class="node"><title>Node3</title>
+<g id="a_node3"><a xlink:href="gmtp_8h.html#a2df4bd07928440434f3ffc5e9a99e192" target="_top" xlink:title="gmtp_connect">
+<polygon fill="white" stroke="black" points="133,-0.5 133,-19.5 211,-19.5 211,-0.5 133,-0.5"/>
+<text text-anchor="middle" x="172" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_connect</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node3 -->
+<g id="edge2" class="edge"><title>Node1&#45;&gt;Node3</title>
+<path fill="none" stroke="midnightblue" d="M94.1506,-21.871C103.462,-20.4327 113.275,-18.9169 122.659,-17.4674"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="123.28,-20.9129 132.629,-15.9273 122.212,-13.995 123.28,-20.9129"/>
+</g>
+</g>
+</svg>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d9324eca652acd36308327a06050473_icgraph.map b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d9324eca652acd36308327a06050473_icgraph.map
new file mode 100644
index 0000000..11f3764
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d9324eca652acd36308327a06050473_icgraph.map
@@ -0,0 +1,3 @@
+<map id="G" name="G">
+<area shape="rect" id="node2" href="$ipv4_8c.html#a96e77cd9da9396b4e3e9d2ca1bdd62ef" title="gmtp_v4_do_rcv" alt="" coords="203,5,321,32"/>
+</map>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d9324eca652acd36308327a06050473_icgraph.md5 b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d9324eca652acd36308327a06050473_icgraph.md5
new file mode 100644
index 0000000..05bae73
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d9324eca652acd36308327a06050473_icgraph.md5
@@ -0,0 +1 @@
+982ea5cd4b0b1e1ee16a4d3f6774070b
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d9324eca652acd36308327a06050473_icgraph.svg b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d9324eca652acd36308327a06050473_icgraph.svg
new file mode 100644
index 0000000..2b73501
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_a3d9324eca652acd36308327a06050473_icgraph.svg
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
+ "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Generated by graphviz version 2.38.0 (20140413.2041)
+ -->
+<!-- Title: G Pages: 1 -->
+<svg width="245pt" height="28pt"
+ viewBox="0.00 0.00 245.00 28.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 24)">
+<title>G</title>
+<polygon fill="white" stroke="none" points="-4,4 -4,-24 241,-24 241,4 -4,4"/>
+<!-- Node1 -->
+<g id="node1" class="node"><title>Node1</title>
+<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-19.5 112,-19.5 112,-0.5 0,-0.5"/>
+<text text-anchor="middle" x="56" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_rcv_established</text>
+</g>
+<!-- Node2 -->
+<g id="node2" class="node"><title>Node2</title>
+<g id="a_node2"><a xlink:href="ipv4_8c.html#a96e77cd9da9396b4e3e9d2ca1bdd62ef" target="_top" xlink:title="gmtp_v4_do_rcv">
+<polygon fill="white" stroke="black" points="148,-0.5 148,-19.5 237,-19.5 237,-0.5 148,-0.5"/>
+<text text-anchor="middle" x="192.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_v4_do_rcv</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node2 -->
+<g id="edge1" class="edge"><title>Node1&#45;&gt;Node2</title>
+<path fill="none" stroke="midnightblue" d="M122.223,-10C130.898,-10 139.618,-10 147.806,-10"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="122.094,-6.5001 112.094,-10 122.094,-13.5001 122.094,-6.5001"/>
+</g>
+</g>
+</svg>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2_icgraph.map b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2_icgraph.map
new file mode 100644
index 0000000..bb5b94c
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2_icgraph.map
@@ -0,0 +1,3 @@
+<map id="G" name="G">
+<area shape="rect" id="node2" href="$ipv4_8c.html#a3d651b3671bf86675ce95fb92228b6a3" title="gmtp_v4_connect" alt="" coords="165,5,291,32"/>
+</map>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2_icgraph.md5 b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2_icgraph.md5
new file mode 100644
index 0000000..278551d
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2_icgraph.md5
@@ -0,0 +1 @@
+f6d745b65ec160aa4d8af64b0bd81d63
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2_icgraph.svg b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2_icgraph.svg
new file mode 100644
index 0000000..cf29caa
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2_icgraph.svg
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
+ "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Generated by graphviz version 2.38.0 (20140413.2041)
+ -->
+<!-- Title: G Pages: 1 -->
+<svg width="222pt" height="28pt"
+ viewBox="0.00 0.00 222.00 28.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 24)">
+<title>G</title>
+<polygon fill="white" stroke="none" points="-4,4 -4,-24 218,-24 218,4 -4,4"/>
+<!-- Node1 -->
+<g id="node1" class="node"><title>Node1</title>
+<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-19.5 84,-19.5 84,-0.5 0,-0.5"/>
+<text text-anchor="middle" x="42" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_set_state</text>
+</g>
+<!-- Node2 -->
+<g id="node2" class="node"><title>Node2</title>
+<g id="a_node2"><a xlink:href="ipv4_8c.html#a3d651b3671bf86675ce95fb92228b6a3" target="_top" xlink:title="gmtp_v4_connect">
+<polygon fill="white" stroke="black" points="120,-0.5 120,-19.5 214,-19.5 214,-0.5 120,-0.5"/>
+<text text-anchor="middle" x="167" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_v4_connect</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node2 -->
+<g id="edge1" class="edge"><title>Node1&#45;&gt;Node2</title>
+<path fill="none" stroke="midnightblue" d="M94.4435,-10C102.903,-10 111.623,-10 119.94,-10"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="94.2994,-6.5001 84.2994,-10 94.2994,-13.5001 94.2994,-6.5001"/>
+</g>
+</g>
+</svg>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_source.html b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_source.html
new file mode 100644
index 0000000..f0efc97
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8h_source.html
@@ -0,0 +1,178 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: gmtp.h Source File</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li class="current"><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li><a href="files.html"><span>File&#160;List</span></a></li>
+      <li><a href="globals.html"><span>Globals</span></a></li>
+    </ul>
+  </div>
+</div><!-- top -->
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+<div class="header">
+  <div class="headertitle">
+<div class="title">gmtp.h</div>  </div>
+</div><!--header-->
+<div class="contents">
+<a href="gmtp_8h.html">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
+<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * gmtp.h</span></div>
+<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
+<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *  Created on: 18/06/2014</span></div>
+<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *      Author: Wendell Silva Soares &lt;wendell@compelab.org&gt;</span></div>
+<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> */</span></div>
+<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div>
+<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#ifndef GMTP_H_</span></div>
+<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define GMTP_H_</span></div>
+<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor"></span></div>
+<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;net/inet_timewait_sock.h&gt;</span></div>
+<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;net/inet_hashtables.h&gt;</span></div>
+<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;uapi/asm-generic/errno.h&gt;</span></div>
+<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div>
+<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;linux/gmtp.h&gt;</span></div>
+<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;net/netns/gmtp.h&gt;</span></div>
+<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
+<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">extern</span> <span class="keyword">struct </span>inet_hashinfo <a class="code" href="gmtp_8h.html#ab43beb876bb256a2f539107b7f589c44">gmtp_hashinfo</a>;</div>
+<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
+<div class="line"><a name="l00020"></a><span class="lineno"><a class="code" href="gmtp_8h.html#ac4d88ba4957c61fad1b1e81e86e26d25">   20</a></span>&#160;<span class="preprocessor">#define GMTP_INFO &quot;[GMTP_INFO] %s:%d - &quot;</span></div>
+<div class="line"><a name="l00021"></a><span class="lineno"><a class="code" href="gmtp_8h.html#a9bdaefac28c54404d5d18bf9f4df448f">   21</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define GMTP_WARNING &quot;[GMTP_WARNING]  %s:%d at %s - &quot;</span></div>
+<div class="line"><a name="l00022"></a><span class="lineno"><a class="code" href="gmtp_8h.html#a8f042630afadb776c9fe83ace47fac92">   22</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define GMTP_ERROR &quot;[GMTP_ERROR] %s:%d at %s - &quot;</span></div>
+<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span></div>
+<div class="line"><a name="l00024"></a><span class="lineno"><a class="code" href="gmtp_8h.html#acb14405c3e3845ce630b3330c048d3e8">   24</a></span>&#160;<span class="preprocessor">#define gmtp_print_debug(fmt, args...) printk(KERN_INFO GMTP_INFO fmt \</span></div>
+<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">                &quot;\n&quot;, __FUNCTION__, __LINE__, ##args)</span></div>
+<div class="line"><a name="l00026"></a><span class="lineno"><a class="code" href="gmtp_8h.html#a4e56790f2f3dc1623fbd978467ac614d">   26</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define gmtp_print_warning(fmt, args...) printk(KERN_WARNING GMTP_WARNING fmt\</span></div>
+<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">                &quot;\n&quot;, __FUNCTION__, __LINE__, __FILE__, ##args)</span></div>
+<div class="line"><a name="l00028"></a><span class="lineno"><a class="code" href="gmtp_8h.html#aef36831848715ac98879ce5642229e14">   28</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define gmtp_print_error(fmt, args...) printk(KERN_ERR GMTP_ERROR fmt \</span></div>
+<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">                &quot;\n&quot;, __FUNCTION__, __LINE__, __FILE__, ##args)</span></div>
+<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor"></span></div>
+<div class="line"><a name="l00031"></a><span class="lineno"><a class="code" href="gmtp_8h.html#aaa9538bb543aaffa4731989fc7ddc0d8">   31</a></span>&#160;<span class="preprocessor">#define MAX_GMTP_HEADER (2047 * sizeof(uint32_t))</span></div>
+<div class="line"><a name="l00032"></a><span class="lineno"><a class="code" href="gmtp_8h.html#afb9f06378ed5523a74a21aedc7f34ea6">   32</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define MAX_GMTP_SPECIFIC_HEADER (8 * sizeof(uint32_t))</span></div>
+<div class="line"><a name="l00033"></a><span class="lineno"><a class="code" href="gmtp_8h.html#aed94c10b0d5306f67874e039a60f7907">   33</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define MAX_GMTP_VARIABLE_HEADER (MAX_GMTP_HEADER - MAX_GMTP_SPECIFIC_HEADER)</span></div>
+<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor"></span></div>
+<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">/* RFC ????,  initial RTO value */</span></div>
+<div class="line"><a name="l00036"></a><span class="lineno"><a class="code" href="gmtp_8h.html#a5b5fd1251f0fec5bc8dda21b11d57de4">   36</a></span>&#160;<span class="preprocessor">#define GMTP_TIMEOUT_INIT ((unsigned int)(3 * HZ))</span></div>
+<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor"></span></div>
+<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">extern</span> <span class="keyword">struct </span>percpu_counter <a class="code" href="gmtp_8h.html#acab13337f0e829de92aa24505a723eae">gmtp_orphan_count</a>;</div>
+<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
+<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="gmtp_8h.html#a181e0298f75786ee945b7dcd06adaf1b">gmtp_packet_name</a>(<span class="keyword">const</span> <span class="keywordtype">int</span>);</div>
+<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
+<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keywordtype">int</span> <a class="code" href="gmtp_8h.html#a1c872c8a33008e99befdb297a6518e03">gmtp_init_sock</a>(<span class="keyword">struct</span> sock *sk, <span class="keyword">const</span> __u8 ctl_sock_initialized);</div>
+<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
+<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">void</span> <a class="code" href="gmtp_8h.html#a59f856ab28c13b885fbe2c38f7a70a87">gmtp_close</a>(<span class="keyword">struct</span> sock *sk, <span class="keywordtype">long</span> timeout);</div>
+<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">int</span> <a class="code" href="gmtp_8h.html#a3d651b3671bf86675ce95fb92228b6a3">gmtp_v4_connect</a>(<span class="keyword">struct</span> sock *sk, <span class="keyword">struct</span> sockaddr *uaddr, <span class="keywordtype">int</span> addr_len);</div>
+<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">int</span> <a class="code" href="gmtp_8h.html#a2df4bd07928440434f3ffc5e9a99e192">gmtp_connect</a>(<span class="keyword">struct</span> sock *sk);</div>
+<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keywordtype">int</span> <a class="code" href="gmtp_8h.html#a8dacfb87447f165efac077aa907a8e27">gmtp_disconnect</a>(<span class="keyword">struct</span> sock *sk, <span class="keywordtype">int</span> flags);</div>
+<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">int</span> <a class="code" href="gmtp_8h.html#ab9bd011833dc85384f4d3c6e5c29f6de">gmtp_ioctl</a>(<span class="keyword">struct</span> sock *sk, <span class="keywordtype">int</span> cmd, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> arg);</div>
+<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">int</span> <a class="code" href="gmtp_8h.html#a789192a2299f8f626e034ad9c87d99b2">gmtp_getsockopt</a>(<span class="keyword">struct</span> sock *sk, <span class="keywordtype">int</span> level, <span class="keywordtype">int</span> optname,</div>
+<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                <span class="keywordtype">char</span> __user *optval, <span class="keywordtype">int</span> __user *optlen);</div>
+<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">int</span> <a class="code" href="gmtp_8h.html#aa5511c6bf84a1956f308ce920a134c29">gmtp_setsockopt</a>(<span class="keyword">struct</span> sock *sk, <span class="keywordtype">int</span> level, <span class="keywordtype">int</span> optname,</div>
+<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                <span class="keywordtype">char</span> __user *optval, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> optlen);</div>
+<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">int</span> <a class="code" href="gmtp_8h.html#a76ebcaaace625859ee741e890d7e7da7">gmtp_sendmsg</a>(<span class="keyword">struct</span> kiocb *iocb, <span class="keyword">struct</span> sock *sk, <span class="keyword">struct</span> msghdr *msg,</div>
+<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                <span class="keywordtype">size_t</span> size);</div>
+<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">int</span> <a class="code" href="gmtp_8h.html#a462ae3f8dd122bdee2af7fd115694db4">gmtp_recvmsg</a>(<span class="keyword">struct</span> kiocb *iocb, <span class="keyword">struct</span> sock *sk, <span class="keyword">struct</span> msghdr *msg,</div>
+<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                <span class="keywordtype">size_t</span> len, <span class="keywordtype">int</span> nonblock, <span class="keywordtype">int</span> flags, <span class="keywordtype">int</span> *addr_len);</div>
+<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keywordtype">void</span> <a class="code" href="gmtp_8h.html#ae74ac6585ac8e29b98e916f4f29ae3f0">gmtp_shutdown</a>(<span class="keyword">struct</span> sock *sk, <span class="keywordtype">int</span> how);</div>
+<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keywordtype">void</span> <a class="code" href="gmtp_8h.html#ada146a75c7595313fda4021b3d64f2af">gmtp_destroy_sock</a>(<span class="keyword">struct</span> sock *sk);</div>
+<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
+<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keywordtype">void</span> <a class="code" href="gmtp_8h.html#ad4d2e06e572fc5135a3a2636b629b8f2">gmtp_set_state</a>(<span class="keyword">struct</span> sock*, <span class="keyword">const</span> <span class="keywordtype">int</span>);</div>
+<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">int</span> <a class="code" href="gmtp_8h.html#aa43e6c6314b0b836ffb2616535879838">inet_gmtp_listen</a>(<span class="keyword">struct</span> socket *sock, <span class="keywordtype">int</span> backlog);</div>
+<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">int</span> <a class="code" href="gmtp_8h.html#a706d0cdecf4e871e347de22e69eed8ee">gmtp_insert_options</a>(<span class="keyword">struct</span> sock *sk, <span class="keyword">struct</span> sk_buff *skb);</div>
+<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keywordtype">int</span> <a class="code" href="gmtp_8h.html#a3d9324eca652acd36308327a06050473">gmtp_rcv_established</a>(<span class="keyword">struct</span> sock *sk, <span class="keyword">struct</span> sk_buff *skb,</div>
+<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                <span class="keyword">const</span> <span class="keyword">struct</span> gmtp_hdr *dh, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> len);</div>
+<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keywordtype">int</span> <a class="code" href="gmtp_8h.html#a212e85de01d9dd2c64578b4a61020f18">gmtp_rcv_state_process</a>(<span class="keyword">struct</span> sock *sk, <span class="keyword">struct</span> sk_buff *skb,</div>
+<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                <span class="keyword">struct</span> gmtp_hdr *gh, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> len);</div>
+<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
+<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keyword">struct </span>sk_buff *<a class="code" href="gmtp_8h.html#a8e94a84dd0d5b12f39df23b6c6ff005b">gmtp_make_response</a>(<span class="keyword">struct</span> sock *sk, <span class="keyword">struct</span> dst_entry *dst,</div>
+<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                <span class="keyword">struct</span> request_sock *req);</div>
+<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">struct </span>sk_buff *<a class="code" href="gmtp_8h.html#a702ba25884e070b579dcfa4769260847">gmtp_ctl_make_reset</a>(<span class="keyword">struct</span> sock *sk,</div>
+<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                <span class="keyword">struct</span> sk_buff *rcv_skb);</div>
+<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
+<div class="line"><a name="l00091"></a><span class="lineno"><a class="code" href="gmtp_8h.html">   91</a></span>&#160;<span class="keyword">struct </span><a class="code" href="gmtp_8h.html#structgmtp__skb__cb">gmtp_skb_cb</a> {</div>
+<div class="line"><a name="l00092"></a><span class="lineno"><a class="code" href="gmtp_8h.html#a40635375f5d8223a8de70b79833c32c2">   92</a></span>&#160;        __u8 <a class="code" href="gmtp_8h.html#a40635375f5d8223a8de70b79833c32c2">gmtpd_type</a> :5;</div>
+<div class="line"><a name="l00093"></a><span class="lineno"><a class="code" href="gmtp_8h.html#ac2ed3bbe3289ce05b2fa7847c5e67da6">   93</a></span>&#160;        __u64 <a class="code" href="gmtp_8h.html#ac2ed3bbe3289ce05b2fa7847c5e67da6">gmtpd_seq</a>;</div>
+<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
+<div class="line"><a name="l00095"></a><span class="lineno"><a class="code" href="gmtp_8h.html#a766db441c404018311173c1171ef917a">   95</a></span>&#160;        __u8 <a class="code" href="gmtp_8h.html#a5f970494c68fc06c84823c233ed9d6a8">gmtpd_reset_code</a>, <a class="code" href="gmtp_8h.html#a766db441c404018311173c1171ef917a">gmtpd_reset_data</a>[3];</div>
+<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;};</div>
+<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
+<div class="line"><a name="l00098"></a><span class="lineno"><a class="code" href="gmtp_8h.html#a973dbe6c782d6d3a6b8fb1a2d15d0825">   98</a></span>&#160;<span class="preprocessor">#define GMTP_SKB_CB(__skb) ((struct gmtp_skb_cb *)&amp;((__skb)-&gt;cb[0]))</span></div>
+<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor"></span></div>
+<div class="line"><a name="l00100"></a><span class="lineno"><a class="code" href="gmtp_8h.html#a86aa8330d1bef9cdb384dc6ef9738bcb">  100</a></span>&#160;<span class="preprocessor">#define GMTP_TIMEWAIT_LEN (60 * HZ) </span></div>
+<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="preprocessor"></span></div>
+<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GMTP_H_ */</span><span class="preprocessor"></span></div>
+<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor"></span></div>
+</div><!-- fragment --></div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp_8mod_8c.html b/linux-3.17.1/net/gmtp/doc/html/gmtp_8mod_8c.html
new file mode 100644
index 0000000..00c6568
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp_8mod_8c.html
@@ -0,0 +1,93 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: gmtp.mod.c File Reference</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li class="current"><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li><a href="files.html"><span>File&#160;List</span></a></li>
+      <li><a href="globals.html"><span>Globals</span></a></li>
+    </ul>
+  </div>
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+</div><!-- top -->
+<div class="header">
+  <div class="headertitle">
+<div class="title">gmtp.mod.c File Reference</div>  </div>
+</div><!--header-->
+<div class="contents">
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/gmtp__ipv4_8mod_8c.html b/linux-3.17.1/net/gmtp/doc/html/gmtp__ipv4_8mod_8c.html
new file mode 100644
index 0000000..23d431a
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/gmtp__ipv4_8mod_8c.html
@@ -0,0 +1,93 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: gmtp_ipv4.mod.c File Reference</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li class="current"><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li><a href="files.html"><span>File&#160;List</span></a></li>
+      <li><a href="globals.html"><span>Globals</span></a></li>
+    </ul>
+  </div>
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+</div><!-- top -->
+<div class="header">
+  <div class="headertitle">
+<div class="title">gmtp_ipv4.mod.c File Reference</div>  </div>
+</div><!--header-->
+<div class="contents">
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/graph_legend.html b/linux-3.17.1/net/gmtp/doc/html/graph_legend.html
new file mode 100644
index 0000000..10fb6e6
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/graph_legend.html
@@ -0,0 +1,148 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: Graph Legend</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+</div><!-- top -->
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+<div class="header">
+  <div class="headertitle">
+<div class="title">Graph Legend</div>  </div>
+</div><!--header-->
+<div class="contents">
+<p><a class="el" href="namespace_3globalScope_4.html#protocolThis-p">This</a> page explains how to interpret the graphs that are generated by doxygen.</p>
+<p>Consider the following example: </p>
+<div class="fragment"><div class="line"><span class="comment">/*! Invisible class because of truncation */</span></div>
+<div class="line"><span class="keyword">class </span>Invisible { };</div>
+<div class="line"><span class="comment"></span></div>
+<div class="line"><span class="comment">/*! Truncated class, inheritance relation is hidden */</span></div>
+<div class="line"><span class="keyword">class </span>Truncated : <span class="keyword">public</span> Invisible { };</div>
+<div class="line"></div>
+<div class="line"><span class="comment">/* Class not documented with doxygen comments */</span></div>
+<div class="line"><span class="keyword">class </span>Undocumented { };</div>
+<div class="line"><span class="comment"></span></div>
+<div class="line"><span class="comment">/*! Class that is inherited using public inheritance */</span></div>
+<div class="line"><span class="keyword">class </span>PublicBase : <span class="keyword">public</span> Truncated { };</div>
+<div class="line"><span class="comment"></span></div>
+<div class="line"><span class="comment">/*! A template class */</span></div>
+<div class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt; <span class="keyword">class </span>Templ { };</div>
+<div class="line"><span class="comment"></span></div>
+<div class="line"><span class="comment">/*! Class that is inherited using protected inheritance */</span></div>
+<div class="line"><span class="keyword">class </span>ProtectedBase { };</div>
+<div class="line"><span class="comment"></span></div>
+<div class="line"><span class="comment">/*! Class that is inherited using private inheritance */</span></div>
+<div class="line"><span class="keyword">class </span>PrivateBase { };</div>
+<div class="line"><span class="comment"></span></div>
+<div class="line"><span class="comment">/*! Class that is used by the Inherited class */</span></div>
+<div class="line"><span class="keyword">class </span>Used { };</div>
+<div class="line"><span class="comment"></span></div>
+<div class="line"><span class="comment">/*! Super class that inherits a number of other classes */</span></div>
+<div class="line"><span class="keyword">class </span>Inherited : <span class="keyword">public</span> PublicBase,</div>
+<div class="line">                  <span class="keyword">protected</span> ProtectedBase,</div>
+<div class="line">                  <span class="keyword">private</span> PrivateBase,</div>
+<div class="line">                  <span class="keyword">public</span> Undocumented,</div>
+<div class="line">                  <span class="keyword">public</span> Templ&lt;int&gt;</div>
+<div class="line">{</div>
+<div class="line">  <span class="keyword">private</span>:</div>
+<div class="line">    Used *m_usedClass;</div>
+<div class="line">};</div>
+</div><!-- fragment --><p> <a class="el" href="namespace_3globalScope_4.html#protocolThis-p">This</a> will result in the following graph:</p>
+<center><iframe scrolling="no" frameborder="0" src="graph_legend.svg" width="683" height="212"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe> </center><p>The boxes in the above graph have the following meaning: </p>
+<ul>
+<li>
+A filled gray box represents the struct or class for which the graph is generated. </li>
+<li>
+A box with a black border denotes a documented struct or class. </li>
+<li>
+A box with a grey border denotes an undocumented struct or class. </li>
+<li>
+A box with a red border denotes a documented struct or class forwhich not all inheritance/containment relations are shown. A graph is truncated if it does not fit within the specified boundaries. </li>
+</ul>
+<p>The arrows have the following meaning: </p>
+<ul>
+<li>
+A dark blue arrow is used to visualize a public inheritance relation between two classes. </li>
+<li>
+A dark green arrow is used for protected inheritance. </li>
+<li>
+A dark red arrow is used for private inheritance. </li>
+<li>
+A purple dashed arrow is used if a class is contained or used by another class. The arrow is labeled with the variable(s) through which the pointed class or struct is accessible. </li>
+<li>
+A yellow dashed arrow denotes a relation between a template instance and the template class it was instantiated from. The arrow is labeled with the template parameters of the instance. </li>
+</ul>
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/graph_legend.md5 b/linux-3.17.1/net/gmtp/doc/html/graph_legend.md5
new file mode 100644
index 0000000..c0a4490
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/graph_legend.md5
@@ -0,0 +1 @@
+70d597617e34367275a35eeb8fb7ea07
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/html/graph_legend.svg b/linux-3.17.1/net/gmtp/doc/html/graph_legend.svg
new file mode 100644
index 0000000..cfd772a
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/graph_legend.svg
@@ -0,0 +1,121 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
+ "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Generated by graphviz version 2.38.0 (20140413.2041)
+ -->
+<!-- Title: G Pages: 1 -->
+<svg width="512pt" height="159pt"
+ viewBox="0.00 0.00 512.00 159.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 155)">
+<title>G</title>
+<polygon fill="white" stroke="none" points="-4,4 -4,-155 508,-155 508,4 -4,4"/>
+<!-- Node9 -->
+<g id="node1" class="node"><title>Node9</title>
+<polygon fill="#bfbfbf" stroke="black" points="293,-19 239,-19 239,-0 293,-0 293,-19"/>
+<text text-anchor="middle" x="266" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">Inherited</text>
+</g>
+<!-- Node10 -->
+<g id="node2" class="node"><title>Node10</title>
+<g id="a_node2"><a xlink:href="$classPublicBase.html" xlink:title="PublicBase">
+<polygon fill="none" stroke="black" points="66,-85 0,-85 0,-66 66,-66 66,-85"/>
+<text text-anchor="middle" x="33" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00">PublicBase</text>
+</a>
+</g>
+</g>
+<!-- Node10&#45;&gt;Node9 -->
+<g id="edge1" class="edge"><title>Node10&#45;&gt;Node9</title>
+<path fill="none" stroke="midnightblue" d="M74.07,-63.219C121.464,-50.2008 198.076,-29.1573 238.691,-18.0013"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="73.1392,-59.8449 64.4234,-65.8687 74.9933,-66.5949 73.1392,-59.8449"/>
+</g>
+<!-- Node11 -->
+<g id="node3" class="node"><title>Node11</title>
+<g id="a_node3"><a xlink:href="$classTruncated.html" xlink:title="Truncated">
+<polygon fill="none" stroke="red" points="63,-151 3,-151 3,-132 63,-132 63,-151"/>
+<text text-anchor="middle" x="33" y="-139" font-family="Helvetica,sans-Serif" font-size="10.00">Truncated</text>
+</a>
+</g>
+</g>
+<!-- Node11&#45;&gt;Node10 -->
+<g id="edge2" class="edge"><title>Node11&#45;&gt;Node10</title>
+<path fill="none" stroke="midnightblue" d="M33,-121.584C33,-109.625 33,-94.7211 33,-85.4052"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="29.5001,-121.869 33,-131.869 36.5001,-121.869 29.5001,-121.869"/>
+</g>
+<!-- Node13 -->
+<g id="node4" class="node"><title>Node13</title>
+<g id="a_node4"><a xlink:href="$classProtectedBase.html" xlink:title="ProtectedBase">
+<polygon fill="none" stroke="black" points="165.5,-85 84.5,-85 84.5,-66 165.5,-66 165.5,-85"/>
+<text text-anchor="middle" x="125" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00">ProtectedBase</text>
+</a>
+</g>
+</g>
+<!-- Node13&#45;&gt;Node9 -->
+<g id="edge3" class="edge"><title>Node13&#45;&gt;Node9</title>
+<path fill="none" stroke="darkgreen" d="M153.213,-61.6939C181.001,-49.081 222.69,-30.1584 246.835,-19.199"/>
+<polygon fill="darkgreen" stroke="darkgreen" points="151.675,-58.5484 144.016,-65.8687 154.568,-64.9225 151.675,-58.5484"/>
+</g>
+<!-- Node14 -->
+<g id="node5" class="node"><title>Node14</title>
+<g id="a_node5"><a xlink:href="$classPrivateBase.html" xlink:title="PrivateBase">
+<polygon fill="none" stroke="black" points="254,-85 184,-85 184,-66 254,-66 254,-85"/>
+<text text-anchor="middle" x="219" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00">PrivateBase</text>
+</a>
+</g>
+</g>
+<!-- Node14&#45;&gt;Node9 -->
+<g id="edge4" class="edge"><title>Node14&#45;&gt;Node9</title>
+<path fill="none" stroke="#8b1a1a" d="M231.288,-57.7673C240.304,-45.4902 252.196,-29.2973 259.46,-19.4052"/>
+<polygon fill="#8b1a1a" stroke="#8b1a1a" points="228.437,-55.7369 225.339,-65.8687 234.079,-59.8803 228.437,-55.7369"/>
+</g>
+<!-- Node15 -->
+<g id="node6" class="node"><title>Node15</title>
+<polygon fill="none" stroke="#bfbfbf" points="355.5,-85 272.5,-85 272.5,-66 355.5,-66 355.5,-85"/>
+<text text-anchor="middle" x="314" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00">Undocumented</text>
+</g>
+<!-- Node15&#45;&gt;Node9 -->
+<g id="edge5" class="edge"><title>Node15&#45;&gt;Node9</title>
+<path fill="none" stroke="midnightblue" d="M301.45,-57.7673C292.243,-45.4902 280.098,-29.2973 272.679,-19.4052"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="298.726,-59.9687 307.527,-65.8687 304.326,-55.7686 298.726,-59.9687"/>
+</g>
+<!-- Node16 -->
+<g id="node7" class="node"><title>Node16</title>
+<g id="a_node7"><a xlink:href="$classTempl.html" xlink:title="Templ&lt; int &gt;">
+<polygon fill="none" stroke="black" points="446,-85 374,-85 374,-66 446,-66 446,-85"/>
+<text text-anchor="middle" x="410" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00">Templ&lt; int &gt;</text>
+</a>
+</g>
+</g>
+<!-- Node16&#45;&gt;Node9 -->
+<g id="edge6" class="edge"><title>Node16&#45;&gt;Node9</title>
+<path fill="none" stroke="midnightblue" d="M381.186,-61.6939C352.807,-49.081 310.231,-30.1584 285.573,-19.199"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="380.02,-65.0056 390.58,-65.8687 382.863,-58.6089 380.02,-65.0056"/>
+</g>
+<!-- Node17 -->
+<g id="node8" class="node"><title>Node17</title>
+<g id="a_node8"><a xlink:href="$classTempl.html" xlink:title="Templ&lt; T &gt;">
+<polygon fill="none" stroke="black" points="444,-151 376,-151 376,-132 444,-132 444,-151"/>
+<text text-anchor="middle" x="410" y="-139" font-family="Helvetica,sans-Serif" font-size="10.00">Templ&lt; T &gt;</text>
+</a>
+</g>
+</g>
+<!-- Node17&#45;&gt;Node16 -->
+<g id="edge7" class="edge"><title>Node17&#45;&gt;Node16</title>
+<path fill="none" stroke="orange" stroke-dasharray="5,2" d="M410,-121.584C410,-109.625 410,-94.7211 410,-85.4052"/>
+<polygon fill="orange" stroke="orange" points="406.5,-121.869 410,-131.869 413.5,-121.869 406.5,-121.869"/>
+<text text-anchor="middle" x="424.5" y="-106" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; int &gt;</text>
+</g>
+<!-- Node18 -->
+<g id="node9" class="node"><title>Node18</title>
+<g id="a_node9"><a xlink:href="$classUsed.html" xlink:title="Used">
+<polygon fill="none" stroke="black" points="504,-85 464,-85 464,-66 504,-66 504,-85"/>
+<text text-anchor="middle" x="484" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00">Used</text>
+</a>
+</g>
+</g>
+<!-- Node18&#45;&gt;Node9 -->
+<g id="edge8" class="edge"><title>Node18&#45;&gt;Node9</title>
+<path fill="none" stroke="#9a32cd" stroke-dasharray="5,2" d="M454.106,-65.7239C411.551,-53.2306 334.132,-30.502 293.142,-18.4682"/>
+<polygon fill="#9a32cd" stroke="#9a32cd" points="453.301,-69.1351 463.882,-68.5938 455.273,-62.4185 453.301,-69.1351"/>
+<text text-anchor="middle" x="419.5" y="-40" font-family="Helvetica,sans-Serif" font-size="10.00">m_usedClass</text>
+</g>
+</g>
+</svg>
diff --git a/linux-3.17.1/net/gmtp/doc/html/index.html b/linux-3.17.1/net/gmtp/doc/html/index.html
new file mode 100644
index 0000000..2eb9380
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/index.html
@@ -0,0 +1,87 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: Main Page</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li class="current"><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+</div><!-- top -->
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+<div class="header">
+  <div class="headertitle">
+<div class="title">gmtp Documentation</div>  </div>
+</div><!--header-->
+<div class="contents">
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/input_8c.html b/linux-3.17.1/net/gmtp/doc/html/input_8c.html
new file mode 100644
index 0000000..ea99a31
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/input_8c.html
@@ -0,0 +1,360 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: input.c File Reference</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li class="current"><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li><a href="files.html"><span>File&#160;List</span></a></li>
+      <li><a href="globals.html"><span>Globals</span></a></li>
+    </ul>
+  </div>
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+</div><!-- top -->
+<div class="header">
+  <div class="summary">
+<a href="#var-members">Variables</a>  </div>
+  <div class="headertitle">
+<div class="title">input.c File Reference</div>  </div>
+</div><!--header-->
+<div class="contents">
+<table class="memberdecls">
+<tr class="heading"><td colspan="2"><h2><a name="var-members"></a>
+Variables</h2></td></tr>
+<tr class="memitem:a14d48c2e9f05d0b03044eb45f308fcb0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#a14d48c2e9f05d0b03044eb45f308fcb0">body</a></td></tr>
+<tr class="memitem:ab172ed3d3d31ff02fc5f798fe7e1bfb8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#ab172ed3d3d31ff02fc5f798fe7e1bfb8">table</a></td></tr>
+<tr class="memitem:a00b49825eb9b4ffce1a4877d83ce126c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#a00b49825eb9b4ffce1a4877d83ce126c">div</a></td></tr>
+<tr class="memitem:ac483f6ce851c9ecd9fb835ff7551737c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#ac483f6ce851c9ecd9fb835ff7551737c">p</a></td></tr>
+<tr class="memitem:ac9e7e0722796a9a2748cfe71e5c1eacb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#ac9e7e0722796a9a2748cfe71e5c1eacb">h2</a></td></tr>
+<tr class="memitem:ad8bba894a37a322932dc80e05de59fe3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#ad8bba894a37a322932dc80e05de59fe3">h3</a></td></tr>
+<tr class="memitem:af78ff2250f8c44a8f1d4533787151cda"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#af78ff2250f8c44a8f1d4533787151cda">h4</a></td></tr>
+<tr class="memitem:ab30ad01496f14e60d923a1937ffc98d4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#ab30ad01496f14e60d923a1937ffc98d4">h5</a></td></tr>
+<tr class="memitem:a4e8818cd817685ac2ce39fc911f9d42f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="input_8c.html#ac9e7e0722796a9a2748cfe71e5c1eacb">h2</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#a4e8818cd817685ac2ce39fc911f9d42f">glow</a></td></tr>
+<tr class="memitem:acb48d3101db87d75430b587051623cb1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="input_8c.html#ac483f6ce851c9ecd9fb835ff7551737c">p</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#acb48d3101db87d75430b587051623cb1">startdd</a></td></tr>
+<tr class="memitem:a8aac502ae7db0ae611e00082aa682158"><td class="memItemLeft" align="right" valign="top">a&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#a8aac502ae7db0ae611e00082aa682158">code</a></td></tr>
+<tr class="memitem:a31f1a4bde92d4c390bf0e584473ee0da"><td class="memItemLeft" align="right" valign="top">a&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#a31f1a4bde92d4c390bf0e584473ee0da">codeRef</a></td></tr>
+<tr class="memitem:a4591bd51e10e1bcc441acd6d675fbaa9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#a4591bd51e10e1bcc441acd6d675fbaa9">mdescRight</a></td></tr>
+<tr class="memitem:a0407e3019d5f5cf8b15fe00d27e91fdd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#a0407e3019d5f5cf8b15fe00d27e91fdd">memItemLeft</a></td></tr>
+<tr class="memitem:a2fde2671b1dacc9d87f4268184483eef"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#a2fde2671b1dacc9d87f4268184483eef">memItemRight</a></td></tr>
+<tr class="memitem:a16459c9f19af9d4e45fa309d4c3d88dc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#a16459c9f19af9d4e45fa309d4c3d88dc">memTemplItemLeft</a></td></tr>
+<tr class="memitem:af091022274dd4a202d587f3acae35aa9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#af091022274dd4a202d587f3acae35aa9">memTemplItemRight</a></td></tr>
+<tr class="memitem:a7f3fcc3b39464696f5682f787eb99368"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#a7f3fcc3b39464696f5682f787eb99368">retval</a></td></tr>
+<tr class="memitem:aec2b4fd1f327cbebb003cfc415e8bccb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#aec2b4fd1f327cbebb003cfc415e8bccb">exception</a></td></tr>
+<tr class="memitem:aaea8ed8d01160ec7de3bdcf28525449c"><td class="memItemLeft" align="right" valign="top">dl&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="input_8c.html#aaea8ed8d01160ec7de3bdcf28525449c">post</a></td></tr>
+</table>
+<hr/><h2>Variable Documentation</h2>
+<a class="anchor" id="a14d48c2e9f05d0b03044eb45f308fcb0"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">body</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a8aac502ae7db0ae611e00082aa682158"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">a code</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a31f1a4bde92d4c390bf0e584473ee0da"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">a a codeRef</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a00b49825eb9b4ffce1a4877d83ce126c"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">div</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="aec2b4fd1f327cbebb003cfc415e8bccb"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">exception</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a4e8818cd817685ac2ce39fc911f9d42f"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname"><a class="el" href="input_8c.html#ac9e7e0722796a9a2748cfe71e5c1eacb">h2</a> <a class="el" href="input_8c.html#ad8bba894a37a322932dc80e05de59fe3">h3</a> <a class="el" href="input_8c.html#af78ff2250f8c44a8f1d4533787151cda">h4</a> <a class="el" href="input_8c.html#ab30ad01496f14e60d923a1937ffc98d4">h5</a> glow</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ac9e7e0722796a9a2748cfe71e5c1eacb"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">h2</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ad8bba894a37a322932dc80e05de59fe3"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">h3</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="af78ff2250f8c44a8f1d4533787151cda"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">h4</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ab30ad01496f14e60d923a1937ffc98d4"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">h5</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a4591bd51e10e1bcc441acd6d675fbaa9"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">mdescRight</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a0407e3019d5f5cf8b15fe00d27e91fdd"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">memItemLeft</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a2fde2671b1dacc9d87f4268184483eef"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">memItemRight</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a16459c9f19af9d4e45fa309d4c3d88dc"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">memTemplItemLeft</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="af091022274dd4a202d587f3acae35aa9"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">memTemplItemRight</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ac483f6ce851c9ecd9fb835ff7551737c"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">p</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="aaea8ed8d01160ec7de3bdcf28525449c"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">dl post</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a7f3fcc3b39464696f5682f787eb99368"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">retval</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="acb48d3101db87d75430b587051623cb1"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname"><a class="el" href="input_8c.html#ac483f6ce851c9ecd9fb835ff7551737c">p</a> startdd</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ab172ed3d3d31ff02fc5f798fe7e1bfb8"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">table</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/ipv4_8c.html b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c.html
new file mode 100644
index 0000000..6adf33b
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c.html
@@ -0,0 +1,542 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: ipv4.c File Reference</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li class="current"><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li><a href="files.html"><span>File&#160;List</span></a></li>
+      <li><a href="globals.html"><span>Globals</span></a></li>
+    </ul>
+  </div>
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+</div><!-- top -->
+<div class="header">
+  <div class="summary">
+<a href="#func-members">Functions</a> &#124;
+<a href="#var-members">Variables</a>  </div>
+  <div class="headertitle">
+<div class="title">ipv4.c File Reference</div>  </div>
+</div><!--header-->
+<div class="contents">
+<div class="textblock"><code>#include &lt;linux/init.h&gt;</code><br/>
+<code>#include &lt;linux/module.h&gt;</code><br/>
+<code>#include &lt;linux/err.h&gt;</code><br/>
+<code>#include &lt;linux/errno.h&gt;</code><br/>
+<code>#include &lt;net/inet_hashtables.h&gt;</code><br/>
+<code>#include &lt;net/inet_common.h&gt;</code><br/>
+<code>#include &lt;net/ip.h&gt;</code><br/>
+<code>#include &lt;net/protocol.h&gt;</code><br/>
+<code>#include &lt;net/request_sock.h&gt;</code><br/>
+<code>#include &lt;net/sock.h&gt;</code><br/>
+<code>#include &lt;net/xfrm.h&gt;</code><br/>
+<code>#include &lt;net/secure_seq.h&gt;</code><br/>
+<code>#include &lt;uapi/linux/if_packet.h&gt;</code><br/>
+<code>#include &lt;uapi/linux/snmp.h&gt;</code><br/>
+<code>#include &lt;uapi/linux/gmtp.h&gt;</code><br/>
+<code>#include &lt;linux/gmtp.h&gt;</code><br/>
+<code>#include &quot;<a class="el" href="gmtp_8h_source.html">gmtp.h</a>&quot;</code><br/>
+</div><div class="textblock"><div class="dynheader">
+Include dependency graph for ipv4.c:</div>
+<div class="dyncontent">
+<div class="center"><iframe scrolling="no" frameborder="0" src="ipv4_8c__incl.svg" width="1988" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
+</div>
+</div><table class="memberdecls">
+<tr class="heading"><td colspan="2"><h2><a name="func-members"></a>
+Functions</h2></td></tr>
+<tr class="memitem:a3d651b3671bf86675ce95fb92228b6a3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#a3d651b3671bf86675ce95fb92228b6a3">gmtp_v4_connect</a> (struct sock *sk, struct sockaddr *uaddr, int addr_len)</td></tr>
+<tr class="memitem:aba729ce082e122d7aec35777ade6e7fb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#aba729ce082e122d7aec35777ade6e7fb">EXPORT_SYMBOL_GPL</a> (<a class="el" href="ipv4_8c.html#a3d651b3671bf86675ce95fb92228b6a3">gmtp_v4_connect</a>)</td></tr>
+<tr class="memitem:a5257b59975805a2ab1fe3a97bc9a0f42"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#a5257b59975805a2ab1fe3a97bc9a0f42">gmtp_v4_err</a> (struct sk_buff *skb, u32 info)</td></tr>
+<tr class="memitem:a836df2e24d1d747e76c1839b38627b1d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#a836df2e24d1d747e76c1839b38627b1d">EXPORT_SYMBOL_GPL</a> (<a class="el" href="ipv4_8c.html#a5257b59975805a2ab1fe3a97bc9a0f42">gmtp_v4_err</a>)</td></tr>
+<tr class="memitem:ac0518e2de9174312756a485345984ba5"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#ac0518e2de9174312756a485345984ba5">gmtp_invalid_packet</a> (struct sk_buff *skb)</td></tr>
+<tr class="memitem:a81ef47c46ddfba18451d4e991c61996b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#a81ef47c46ddfba18451d4e991c61996b">EXPORT_SYMBOL_GPL</a> (gmtp_v4_rcv)</td></tr>
+<tr class="memitem:ac00f58e15e1908bc8f01439f25266cea"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#ac00f58e15e1908bc8f01439f25266cea">gmtp_v4_conn_request</a> (struct sock *sk, struct sk_buff *skb)</td></tr>
+<tr class="memitem:a0a0fd79e581d8bc33ebe57cfd4c6ee59"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#a0a0fd79e581d8bc33ebe57cfd4c6ee59">EXPORT_SYMBOL_GPL</a> (<a class="el" href="ipv4_8c.html#ac00f58e15e1908bc8f01439f25266cea">gmtp_v4_conn_request</a>)</td></tr>
+<tr class="memitem:a96e77cd9da9396b4e3e9d2ca1bdd62ef"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#a96e77cd9da9396b4e3e9d2ca1bdd62ef">gmtp_v4_do_rcv</a> (struct sock *sk, struct sk_buff *skb)</td></tr>
+<tr class="memitem:a02a246e3f177672e943fa02d76c61792"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#a02a246e3f177672e943fa02d76c61792">EXPORT_SYMBOL_GPL</a> (<a class="el" href="ipv4_8c.html#a96e77cd9da9396b4e3e9d2ca1bdd62ef">gmtp_v4_do_rcv</a>)</td></tr>
+<tr class="memitem:aa732797a38fdc3a4052d4ac3b0e17a90"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#aa732797a38fdc3a4052d4ac3b0e17a90">module_init</a> (gmtp_v4_init)</td></tr>
+<tr class="memitem:a506da21c4f1be9b593d04268f6f813e0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#a506da21c4f1be9b593d04268f6f813e0">module_exit</a> (gmtp_v4_exit)</td></tr>
+<tr class="memitem:a3b891be0948d683a3f0c879702d3b9cb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#a3b891be0948d683a3f0c879702d3b9cb">MODULE_ALIAS_NET_PF_PROTO_TYPE</a> (PF_INET, IPPROTO_GMTP, SOCK_GMTP)</td></tr>
+<tr class="memitem:a0f9c0987d62a80d96fc8a4859950c9b5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#a0f9c0987d62a80d96fc8a4859950c9b5">MODULE_ALIAS_NET_PF_PROTO_TYPE</a> (PF_INET, 0, SOCK_GMTP)</td></tr>
+<tr class="memitem:ad94b36675e7eb067ea3ce6ff9e244a44"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#ad94b36675e7eb067ea3ce6ff9e244a44">MODULE_LICENSE</a> (&quot;GPL&quot;)</td></tr>
+<tr class="memitem:ae540d1ed034c92753f40dcc69dc8081b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#ae540d1ed034c92753f40dcc69dc8081b">MODULE_AUTHOR</a> (&quot;Wendell Silva Soares &lt;wss@ic.ufal.br&gt;&quot;)</td></tr>
+<tr class="memitem:a81aa4475647c79e5e7d0050d75deda0b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#a81aa4475647c79e5e7d0050d75deda0b">MODULE_DESCRIPTION</a> (&quot;GMTP - Global Media Transmission Protocol&quot;)</td></tr>
+</table><table class="memberdecls">
+<tr class="heading"><td colspan="2"><h2><a name="var-members"></a>
+Variables</h2></td></tr>
+<tr class="memitem:a32e197949743cd2e118c0724f2069d67"><td class="memItemLeft" align="right" valign="top">int sysctl_ip_nonlocal_bind&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#a32e197949743cd2e118c0724f2069d67">__read_mostly</a></td></tr>
+<tr class="memitem:a304672a5f2e443d5c24f0c7d520a2299"><td class="memItemLeft" align="right" valign="top">struct inet_timewait_death_row&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ipv4_8c.html#a304672a5f2e443d5c24f0c7d520a2299">gmtp_death_row</a></td></tr>
+</table>
+<hr/><h2>Function Documentation</h2>
+<a class="anchor" id="aba729ce082e122d7aec35777ade6e7fb"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="ipv4_8c.html#a3d651b3671bf86675ce95fb92228b6a3">gmtp_v4_connect</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a836df2e24d1d747e76c1839b38627b1d"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="ipv4_8c.html#a5257b59975805a2ab1fe3a97bc9a0f42">gmtp_v4_err</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a81ef47c46ddfba18451d4e991c61996b"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype">gmtp_v4_rcv&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a0a0fd79e581d8bc33ebe57cfd4c6ee59"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="ipv4_8c.html#ac00f58e15e1908bc8f01439f25266cea">gmtp_v4_conn_request</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a02a246e3f177672e943fa02d76c61792"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="ipv4_8c.html#a96e77cd9da9396b4e3e9d2ca1bdd62ef">gmtp_v4_do_rcv</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ac0518e2de9174312756a485345984ba5"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_invalid_packet </td>
+          <td>(</td>
+          <td class="paramtype">struct sk_buff *&#160;</td>
+          <td class="paramname"><em>skb</em></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+<p>dccp_invalid_packet - check for malformed packets Packets that fail these checks are ignored and do not receive Resets. </p>
+
+</div>
+</div>
+<a class="anchor" id="ac00f58e15e1908bc8f01439f25266cea"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_v4_conn_request </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct sk_buff *&#160;</td>
+          <td class="paramname"><em>skb</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a3d651b3671bf86675ce95fb92228b6a3"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_v4_connect </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct sockaddr *&#160;</td>
+          <td class="paramname"><em>uaddr</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>addr_len</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+<p><div class="dynheader">
+Here is the call graph for this function:</div>
+<div class="dyncontent">
+<div class="center"><iframe scrolling="no" frameborder="0" src="ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3_cgraph.svg" width="296" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
+</div>
+</p>
+
+</div>
+</div>
+<a class="anchor" id="a96e77cd9da9396b4e3e9d2ca1bdd62ef"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_v4_do_rcv </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct sk_buff *&#160;</td>
+          <td class="paramname"><em>skb</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+<p><div class="dynheader">
+Here is the call graph for this function:</div>
+<div class="dyncontent">
+<div class="center"><iframe scrolling="no" frameborder="0" src="ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef_cgraph.svg" width="343" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
+</div>
+</p>
+
+</div>
+</div>
+<a class="anchor" id="a5257b59975805a2ab1fe3a97bc9a0f42"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">void gmtp_v4_err </td>
+          <td>(</td>
+          <td class="paramtype">struct sk_buff *&#160;</td>
+          <td class="paramname"><em>skb</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">u32&#160;</td>
+          <td class="paramname"><em>info</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a3b891be0948d683a3f0c879702d3b9cb"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">MODULE_ALIAS_NET_PF_PROTO_TYPE </td>
+          <td>(</td>
+          <td class="paramtype">PF_INET&#160;</td>
+          <td class="paramname">, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">IPPROTO_GMTP&#160;</td>
+          <td class="paramname">, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">SOCK_GMTP&#160;</td>
+          <td class="paramname">&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a0f9c0987d62a80d96fc8a4859950c9b5"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">MODULE_ALIAS_NET_PF_PROTO_TYPE </td>
+          <td>(</td>
+          <td class="paramtype">PF_INET&#160;</td>
+          <td class="paramname">, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">0&#160;</td>
+          <td class="paramname">, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">SOCK_GMTP&#160;</td>
+          <td class="paramname">&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ae540d1ed034c92753f40dcc69dc8081b"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">MODULE_AUTHOR </td>
+          <td>(</td>
+          <td class="paramtype">&quot;Wendell Silva Soares &lt;wss@ic.ufal.br&gt;&quot;&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a81aa4475647c79e5e7d0050d75deda0b"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">MODULE_DESCRIPTION </td>
+          <td>(</td>
+          <td class="paramtype">&quot;GMTP - Global Media Transmission Protocol&quot;&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a506da21c4f1be9b593d04268f6f813e0"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">module_exit </td>
+          <td>(</td>
+          <td class="paramtype">gmtp_v4_exit&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="aa732797a38fdc3a4052d4ac3b0e17a90"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">module_init </td>
+          <td>(</td>
+          <td class="paramtype">gmtp_v4_init&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ad94b36675e7eb067ea3ce6ff9e244a44"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">MODULE_LICENSE </td>
+          <td>(</td>
+          <td class="paramtype">&quot;GPL&quot;&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<hr/><h2>Variable Documentation</h2>
+<a class="anchor" id="a32e197949743cd2e118c0724f2069d67"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">static struct request_sock_ops gmtp_request_sock_ops __read_mostly</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+<b>Initial value:</b><div class="fragment"><div class="line"> {</div>
+<div class="line">        .family = PF_INET,</div>
+<div class="line">        .obj_size = <span class="keyword">sizeof</span>(<span class="keyword">struct </span>gmtp_request_sock),</div>
+<div class="line">        .rtx_syn_ack    = gmtp_v4_send_response,</div>
+<div class="line">        .destructor     = gmtp_v4_reqsk_destructor,</div>
+<div class="line">        .send_reset     = gmtp_v4_ctl_send_reset,</div>
+<div class="line">}</div>
+</div><!-- fragment -->
+</div>
+</div>
+<a class="anchor" id="a304672a5f2e443d5c24f0c7d520a2299"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">struct inet_timewait_death_row gmtp_death_row</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/ipv4_8c__incl.map b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c__incl.map
new file mode 100644
index 0000000..4386c4e
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c__incl.map
@@ -0,0 +1,3 @@
+<map id="G" name="G">
+<area shape="rect" id="node18" href="$gmtp_8h.html" title="gmtp.h" alt="" coords="565,80,628,107"/>
+</map>
diff --git a/linux-3.17.1/net/gmtp/doc/html/ipv4_8c__incl.md5 b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c__incl.md5
new file mode 100644
index 0000000..5efdf86
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c__incl.md5
@@ -0,0 +1 @@
+e0799197590d633667710926ebb7dad3
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/html/ipv4_8c__incl.svg b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c__incl.svg
new file mode 100644
index 0000000..c003d35
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c__incl.svg
@@ -0,0 +1,231 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
+ "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Generated by graphviz version 2.38.0 (20140413.2041)
+ -->
+<!-- Title: G Pages: 1 -->
+<svg width="1491pt" height="140pt"
+ viewBox="0.00 0.00 1491.00 140.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 136)">
+<title>G</title>
+<polygon fill="white" stroke="none" points="-4,4 -4,-136 1487,-136 1487,4 -4,4"/>
+<!-- Node1 -->
+<g id="node1" class="node"><title>Node1</title>
+<polygon fill="#bfbfbf" stroke="black" points="607,-112.5 607,-131.5 650,-131.5 650,-112.5 607,-112.5"/>
+<text text-anchor="middle" x="628.5" y="-119.5" font-family="Helvetica,sans-Serif" font-size="10.00">ipv4.c</text>
+</g>
+<!-- Node2 -->
+<g id="node2" class="node"><title>Node2</title>
+<polygon fill="white" stroke="#bfbfbf" points="0,-56.5 0,-75.5 61,-75.5 61,-56.5 0,-56.5"/>
+<text text-anchor="middle" x="30.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">linux/init.h</text>
+</g>
+<!-- Node1&#45;&gt;Node2 -->
+<g id="edge1" class="edge"><title>Node1&#45;&gt;Node2</title>
+<path fill="none" stroke="midnightblue" d="M606.83,-120.35C533.185,-117.912 285.704,-107.842 71.5968,-75.946"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="71.8377,-72.4428 61.4272,-74.4106 70.7926,-79.3644 71.8377,-72.4428"/>
+</g>
+<!-- Node3 -->
+<g id="node3" class="node"><title>Node3</title>
+<polygon fill="white" stroke="#bfbfbf" points="79.5,-56.5 79.5,-75.5 159.5,-75.5 159.5,-56.5 79.5,-56.5"/>
+<text text-anchor="middle" x="119.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">linux/module.h</text>
+</g>
+<!-- Node1&#45;&gt;Node3 -->
+<g id="edge2" class="edge"><title>Node1&#45;&gt;Node3</title>
+<path fill="none" stroke="midnightblue" d="M606.868,-119.534C542.162,-115.012 344.294,-100.191 169.707,-76.0588"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="169.955,-72.5595 159.567,-74.6429 168.987,-79.4923 169.955,-72.5595"/>
+</g>
+<!-- Node4 -->
+<g id="node4" class="node"><title>Node4</title>
+<polygon fill="white" stroke="#bfbfbf" points="178,-56.5 178,-75.5 237,-75.5 237,-56.5 178,-56.5"/>
+<text text-anchor="middle" x="207.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">linux/err.h</text>
+</g>
+<!-- Node1&#45;&gt;Node4 -->
+<g id="edge3" class="edge"><title>Node1&#45;&gt;Node4</title>
+<path fill="none" stroke="midnightblue" d="M606.841,-119.286C549.766,-114.593 390.399,-100.352 247.501,-75.9886"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="247.692,-72.4699 237.242,-74.217 246.501,-79.3678 247.692,-72.4699"/>
+</g>
+<!-- Node5 -->
+<g id="node5" class="node"><title>Node5</title>
+<polygon fill="white" stroke="#bfbfbf" points="255.5,-56.5 255.5,-75.5 325.5,-75.5 325.5,-56.5 255.5,-56.5"/>
+<text text-anchor="middle" x="290.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">linux/errno.h</text>
+</g>
+<!-- Node1&#45;&gt;Node5 -->
+<g id="edge4" class="edge"><title>Node1&#45;&gt;Node5</title>
+<path fill="none" stroke="midnightblue" d="M606.715,-117.815C558.496,-110.719 439.125,-92.9023 339.5,-76 338.229,-75.7843 336.94,-75.5633 335.639,-75.3382"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="336,-71.8478 325.543,-73.556 334.783,-78.7412 336,-71.8478"/>
+</g>
+<!-- Node6 -->
+<g id="node6" class="node"><title>Node6</title>
+<polygon fill="white" stroke="#bfbfbf" points="228.5,-0.5 228.5,-19.5 338.5,-19.5 338.5,-0.5 228.5,-0.5"/>
+<text text-anchor="middle" x="283.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/inet_hashtables.h</text>
+</g>
+<!-- Node1&#45;&gt;Node6 -->
+<g id="edge5" class="edge"><title>Node1&#45;&gt;Node6</title>
+<path fill="none" stroke="midnightblue" d="M606.865,-119.304C564.773,-115.474 469.422,-104.19 394.5,-76 360.483,-63.201 324.856,-40.4048 303.414,-25.4956"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="305.324,-22.5597 295.139,-19.641 301.281,-28.274 305.324,-22.5597"/>
+</g>
+<!-- Node7 -->
+<g id="node7" class="node"><title>Node7</title>
+<polygon fill="white" stroke="#bfbfbf" points="485.5,-56.5 485.5,-75.5 585.5,-75.5 585.5,-56.5 485.5,-56.5"/>
+<text text-anchor="middle" x="535.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/inet_common.h</text>
+</g>
+<!-- Node1&#45;&gt;Node7 -->
+<g id="edge6" class="edge"><title>Node1&#45;&gt;Node7</title>
+<path fill="none" stroke="midnightblue" d="M613.558,-112.324C598.915,-103.822 576.366,-90.7288 559.262,-80.7975"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="560.81,-77.6491 550.405,-75.6545 557.295,-83.7027 560.81,-77.6491"/>
+</g>
+<!-- Node8 -->
+<g id="node8" class="node"><title>Node8</title>
+<polygon fill="white" stroke="#bfbfbf" points="604,-56.5 604,-75.5 653,-75.5 653,-56.5 604,-56.5"/>
+<text text-anchor="middle" x="628.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/ip.h</text>
+</g>
+<!-- Node1&#45;&gt;Node8 -->
+<g id="edge7" class="edge"><title>Node1&#45;&gt;Node8</title>
+<path fill="none" stroke="midnightblue" d="M628.5,-112.083C628.5,-105.006 628.5,-94.8611 628.5,-85.9865"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="632,-85.751 628.5,-75.7511 625,-85.7511 632,-85.751"/>
+</g>
+<!-- Node9 -->
+<g id="node9" class="node"><title>Node9</title>
+<polygon fill="white" stroke="#bfbfbf" points="671.5,-56.5 671.5,-75.5 747.5,-75.5 747.5,-56.5 671.5,-56.5"/>
+<text text-anchor="middle" x="709.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/protocol.h</text>
+</g>
+<!-- Node1&#45;&gt;Node9 -->
+<g id="edge8" class="edge"><title>Node1&#45;&gt;Node9</title>
+<path fill="none" stroke="midnightblue" d="M641.514,-112.324C654.032,-103.979 673.182,-91.2122 687.971,-81.3524"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="690.139,-84.1137 696.518,-75.6545 686.256,-78.2894 690.139,-84.1137"/>
+</g>
+<!-- Node10 -->
+<g id="node10" class="node"><title>Node10</title>
+<polygon fill="white" stroke="#bfbfbf" points="765.5,-56.5 765.5,-75.5 865.5,-75.5 865.5,-56.5 765.5,-56.5"/>
+<text text-anchor="middle" x="815.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/request_sock.h</text>
+</g>
+<!-- Node1&#45;&gt;Node10 -->
+<g id="edge9" class="edge"><title>Node1&#45;&gt;Node10</title>
+<path fill="none" stroke="midnightblue" d="M650.317,-114.7C681.095,-105.812 737.77,-89.446 776.045,-78.3933"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="777.197,-81.7037 785.834,-75.5667 775.255,-74.9785 777.197,-81.7037"/>
+</g>
+<!-- Node11 -->
+<g id="node11" class="node"><title>Node11</title>
+<polygon fill="white" stroke="#bfbfbf" points="883.5,-56.5 883.5,-75.5 945.5,-75.5 945.5,-56.5 883.5,-56.5"/>
+<text text-anchor="middle" x="914.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/sock.h</text>
+</g>
+<!-- Node1&#45;&gt;Node11 -->
+<g id="edge10" class="edge"><title>Node1&#45;&gt;Node11</title>
+<path fill="none" stroke="midnightblue" d="M650.276,-117.321C691.698,-110.258 784.908,-94.0539 873.179,-76.2082"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="873.981,-79.617 883.083,-74.1947 872.586,-72.7573 873.981,-79.617"/>
+</g>
+<!-- Node12 -->
+<g id="node12" class="node"><title>Node12</title>
+<polygon fill="white" stroke="#bfbfbf" points="964,-56.5 964,-75.5 1025,-75.5 1025,-56.5 964,-56.5"/>
+<text text-anchor="middle" x="994.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/xfrm.h</text>
+</g>
+<!-- Node1&#45;&gt;Node12 -->
+<g id="edge11" class="edge"><title>Node1&#45;&gt;Node12</title>
+<path fill="none" stroke="midnightblue" d="M650.347,-118.628C701.499,-112.938 833.19,-97.5023 953.833,-75.9749"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="954.759,-79.3644 963.979,-74.145 953.517,-72.4755 954.759,-79.3644"/>
+</g>
+<!-- Node13 -->
+<g id="node13" class="node"><title>Node13</title>
+<polygon fill="white" stroke="#bfbfbf" points="1043.5,-56.5 1043.5,-75.5 1135.5,-75.5 1135.5,-56.5 1043.5,-56.5"/>
+<text text-anchor="middle" x="1089.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/secure_seq.h</text>
+</g>
+<!-- Node1&#45;&gt;Node13 -->
+<g id="edge12" class="edge"><title>Node1&#45;&gt;Node13</title>
+<path fill="none" stroke="midnightblue" d="M650.116,-119.002C709.52,-113.428 880.448,-96.8248 1033.27,-76.1066"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="1033.88,-79.5567 1043.31,-74.7361 1032.93,-72.621 1033.88,-79.5567"/>
+</g>
+<!-- Node14 -->
+<g id="node14" class="node"><title>Node14</title>
+<polygon fill="white" stroke="#bfbfbf" points="1154,-56.5 1154,-75.5 1263,-75.5 1263,-56.5 1154,-56.5"/>
+<text text-anchor="middle" x="1208.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">uapi/linux/if_packet.h</text>
+</g>
+<!-- Node1&#45;&gt;Node14 -->
+<g id="edge13" class="edge"><title>Node1&#45;&gt;Node14</title>
+<path fill="none" stroke="midnightblue" d="M650.17,-119.521C720.007,-114.669 945.636,-98.321 1143.7,-76.0321"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="1144.17,-79.5019 1153.71,-74.8982 1143.38,-72.5465 1144.17,-79.5019"/>
+</g>
+<!-- Node15 -->
+<g id="node15" class="node"><title>Node15</title>
+<polygon fill="white" stroke="#bfbfbf" points="1281,-56.5 1281,-75.5 1374,-75.5 1374,-56.5 1281,-56.5"/>
+<text text-anchor="middle" x="1327.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">uapi/linux/snmp.h</text>
+</g>
+<!-- Node1&#45;&gt;Node15 -->
+<g id="edge14" class="edge"><title>Node1&#45;&gt;Node15</title>
+<path fill="none" stroke="midnightblue" d="M650.249,-120.21C731.011,-117.126 1021.46,-104.673 1270.76,-76.108"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="1271.2,-79.5808 1280.73,-74.9545 1270.4,-72.6272 1271.2,-79.5808"/>
+</g>
+<!-- Node16 -->
+<g id="node16" class="node"><title>Node16</title>
+<polygon fill="white" stroke="#bfbfbf" points="1392,-56.5 1392,-75.5 1483,-75.5 1483,-56.5 1392,-56.5"/>
+<text text-anchor="middle" x="1437.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">uapi/linux/gmtp.h</text>
+</g>
+<!-- Node1&#45;&gt;Node16 -->
+<g id="edge15" class="edge"><title>Node1&#45;&gt;Node16</title>
+<path fill="none" stroke="midnightblue" d="M650.193,-120.545C739.372,-118.5 1086.56,-108.826 1381.84,-76.0757"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="1382.33,-79.5425 1391.88,-74.9508 1381.55,-72.5861 1382.33,-79.5425"/>
+</g>
+<!-- Node17 -->
+<g id="node17" class="node"><title>Node17</title>
+<polygon fill="white" stroke="#bfbfbf" points="356.5,-0.5 356.5,-19.5 426.5,-19.5 426.5,-0.5 356.5,-0.5"/>
+<text text-anchor="middle" x="391.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">linux/gmtp.h</text>
+</g>
+<!-- Node1&#45;&gt;Node17 -->
+<g id="edge16" class="edge"><title>Node1&#45;&gt;Node17</title>
+<path fill="none" stroke="midnightblue" d="M606.715,-119.265C557.562,-114.925 440.097,-102.027 411.5,-76 398.558,-64.2209 393.898,-44.2924 392.268,-29.5997"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="395.757,-29.3195 391.525,-19.6064 388.776,-29.8383 395.757,-29.3195"/>
+</g>
+<!-- Node18 -->
+<g id="node18" class="node"><title>Node18</title>
+<g id="a_node18"><a xlink:href="gmtp_8h.html" target="_top" xlink:title="gmtp.h">
+<polygon fill="white" stroke="black" points="420,-56.5 420,-75.5 467,-75.5 467,-56.5 420,-56.5"/>
+<text text-anchor="middle" x="443.5" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp.h</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node18 -->
+<g id="edge17" class="edge"><title>Node1&#45;&gt;Node18</title>
+<path fill="none" stroke="midnightblue" d="M606.916,-114.7C575.029,-105.392 515.043,-87.8827 477.292,-76.8636"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="477.856,-73.3822 467.276,-73.94 475.895,-80.1018 477.856,-73.3822"/>
+</g>
+<!-- Node18&#45;&gt;Node6 -->
+<g id="edge19" class="edge"><title>Node18&#45;&gt;Node6</title>
+<path fill="none" stroke="midnightblue" d="M419.891,-57.0321C393.066,-47.9784 349.028,-33.1156 318.272,-22.7356"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="319.386,-19.4176 308.792,-19.536 317.147,-26.05 319.386,-19.4176"/>
+</g>
+<!-- Node18&#45;&gt;Node17 -->
+<g id="edge21" class="edge"><title>Node18&#45;&gt;Node17</title>
+<path fill="none" stroke="midnightblue" d="M434.913,-56.083C427.341,-48.2195 416.122,-36.5688 406.986,-27.0813"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="409.385,-24.5266 399.927,-19.7511 404.342,-29.3821 409.385,-24.5266"/>
+</g>
+<!-- Node19 -->
+<g id="node19" class="node"><title>Node19</title>
+<polygon fill="white" stroke="#bfbfbf" points="445,-0.5 445,-19.5 570,-19.5 570,-0.5 445,-0.5"/>
+<text text-anchor="middle" x="507.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/inet_timewait_sock.h</text>
+</g>
+<!-- Node18&#45;&gt;Node19 -->
+<g id="edge18" class="edge"><title>Node18&#45;&gt;Node19</title>
+<path fill="none" stroke="midnightblue" d="M453.783,-56.324C463.336,-48.2631 477.78,-36.0765 489.284,-26.3695"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="491.644,-28.9577 497.03,-19.8339 487.13,-23.6076 491.644,-28.9577"/>
+</g>
+<!-- Node20 -->
+<g id="node20" class="node"><title>Node20</title>
+<polygon fill="white" stroke="#bfbfbf" points="588.5,-0.5 588.5,-19.5 712.5,-19.5 712.5,-0.5 588.5,-0.5"/>
+<text text-anchor="middle" x="650.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">uapi/asm&#45;generic/errno.h</text>
+</g>
+<!-- Node18&#45;&gt;Node20 -->
+<g id="edge20" class="edge"><title>Node18&#45;&gt;Node20</title>
+<path fill="none" stroke="midnightblue" d="M467.283,-58.4736C470.382,-57.635 473.516,-56.7929 476.5,-56 520.827,-44.2241 571.615,-31.1354 606.831,-22.1239"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="607.962,-25.4474 616.784,-19.5796 606.228,-18.6655 607.962,-25.4474"/>
+</g>
+<!-- Node21 -->
+<g id="node21" class="node"><title>Node21</title>
+<polygon fill="white" stroke="#bfbfbf" points="730.5,-0.5 730.5,-19.5 820.5,-19.5 820.5,-0.5 730.5,-0.5"/>
+<text text-anchor="middle" x="775.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/netns/gmtp.h</text>
+</g>
+<!-- Node18&#45;&gt;Node21 -->
+<g id="edge22" class="edge"><title>Node18&#45;&gt;Node21</title>
+<path fill="none" stroke="midnightblue" d="M467.21,-58.1669C470.321,-57.3784 473.477,-56.6319 476.5,-56 581.073,-34.1399 611.03,-36.8609 720.313,-20.1462"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="721.083,-23.5687 730.429,-18.5784 720.011,-16.6513 721.083,-23.5687"/>
+</g>
+</g>
+</svg>
diff --git a/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3_cgraph.map b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3_cgraph.map
new file mode 100644
index 0000000..4952395
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3_cgraph.map
@@ -0,0 +1,4 @@
+<map id="G" name="G">
+<area shape="rect" id="node2" href="$gmtp_8h.html#ad4d2e06e572fc5135a3a2636b629b8f2" title="gmtp_set_state" alt="" coords="179,5,291,32"/>
+<area shape="rect" id="node3" href="$gmtp_8h.html#a2df4bd07928440434f3ffc5e9a99e192" title="gmtp_connect" alt="" coords="183,56,287,83"/>
+</map>
diff --git a/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3_cgraph.md5 b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3_cgraph.md5
new file mode 100644
index 0000000..bfa4d90
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3_cgraph.md5
@@ -0,0 +1 @@
+2e646175c43992c19267008c285487e7
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3_cgraph.svg b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3_cgraph.svg
new file mode 100644
index 0000000..f665ffa
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3_cgraph.svg
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
+ "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Generated by graphviz version 2.38.0 (20140413.2041)
+ -->
+<!-- Title: G Pages: 1 -->
+<svg width="222pt" height="66pt"
+ viewBox="0.00 0.00 222.00 66.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 62)">
+<title>G</title>
+<polygon fill="white" stroke="none" points="-4,4 -4,-62 218,-62 218,4 -4,4"/>
+<!-- Node1 -->
+<g id="node1" class="node"><title>Node1</title>
+<polygon fill="#bfbfbf" stroke="black" points="0,-19.5 0,-38.5 94,-38.5 94,-19.5 0,-19.5"/>
+<text text-anchor="middle" x="47" y="-26.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_v4_connect</text>
+</g>
+<!-- Node2 -->
+<g id="node2" class="node"><title>Node2</title>
+<g id="a_node2"><a xlink:href="gmtp_8h.html#ad4d2e06e572fc5135a3a2636b629b8f2" target="_top" xlink:title="gmtp_set_state">
+<polygon fill="white" stroke="black" points="130,-38.5 130,-57.5 214,-57.5 214,-38.5 130,-38.5"/>
+<text text-anchor="middle" x="172" y="-45.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_set_state</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node2 -->
+<g id="edge1" class="edge"><title>Node1&#45;&gt;Node2</title>
+<path fill="none" stroke="midnightblue" d="M94.1506,-36.129C102.486,-37.4166 111.224,-38.7663 119.696,-40.0749"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="119.436,-43.5763 129.853,-41.644 120.505,-36.6583 119.436,-43.5763"/>
+</g>
+<!-- Node3 -->
+<g id="node3" class="node"><title>Node3</title>
+<g id="a_node3"><a xlink:href="gmtp_8h.html#a2df4bd07928440434f3ffc5e9a99e192" target="_top" xlink:title="gmtp_connect">
+<polygon fill="white" stroke="black" points="133,-0.5 133,-19.5 211,-19.5 211,-0.5 133,-0.5"/>
+<text text-anchor="middle" x="172" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_connect</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node3 -->
+<g id="edge2" class="edge"><title>Node1&#45;&gt;Node3</title>
+<path fill="none" stroke="midnightblue" d="M94.1506,-21.871C103.462,-20.4327 113.275,-18.9169 122.659,-17.4674"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="123.28,-20.9129 132.629,-15.9273 122.212,-13.995 123.28,-20.9129"/>
+</g>
+</g>
+</svg>
diff --git a/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef_cgraph.map b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef_cgraph.map
new file mode 100644
index 0000000..d342946
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef_cgraph.map
@@ -0,0 +1,4 @@
+<map id="G" name="G">
+<area shape="rect" id="node2" href="$gmtp_8h.html#a3d9324eca652acd36308327a06050473" title="gmtp_rcv_established" alt="" coords="180,5,329,32"/>
+<area shape="rect" id="node3" href="$gmtp_8h.html#a212e85de01d9dd2c64578b4a61020f18" title="gmtp_rcv_state_process" alt="" coords="172,56,337,83"/>
+</map>
diff --git a/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef_cgraph.md5 b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef_cgraph.md5
new file mode 100644
index 0000000..e0832c4
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef_cgraph.md5
@@ -0,0 +1 @@
+6fb700d10d612eed5ab4b0d8940d53ac
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef_cgraph.svg b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef_cgraph.svg
new file mode 100644
index 0000000..c257b46
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef_cgraph.svg
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
+ "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Generated by graphviz version 2.38.0 (20140413.2041)
+ -->
+<!-- Title: G Pages: 1 -->
+<svg width="257pt" height="66pt"
+ viewBox="0.00 0.00 257.00 66.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 62)">
+<title>G</title>
+<polygon fill="white" stroke="none" points="-4,4 -4,-62 253,-62 253,4 -4,4"/>
+<!-- Node1 -->
+<g id="node1" class="node"><title>Node1</title>
+<polygon fill="#bfbfbf" stroke="black" points="0,-19.5 0,-38.5 89,-38.5 89,-19.5 0,-19.5"/>
+<text text-anchor="middle" x="44.5" y="-26.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_v4_do_rcv</text>
+</g>
+<!-- Node2 -->
+<g id="node2" class="node"><title>Node2</title>
+<g id="a_node2"><a xlink:href="gmtp_8h.html#a3d9324eca652acd36308327a06050473" target="_top" xlink:title="gmtp_rcv_established">
+<polygon fill="white" stroke="black" points="131,-38.5 131,-57.5 243,-57.5 243,-38.5 131,-38.5"/>
+<text text-anchor="middle" x="187" y="-45.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_rcv_established</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node2 -->
+<g id="edge1" class="edge"><title>Node1&#45;&gt;Node2</title>
+<path fill="none" stroke="midnightblue" d="M89.1849,-34.9076C99.1964,-36.2614 110.052,-37.7295 120.752,-39.1764"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="120.552,-42.6811 130.931,-40.5529 121.49,-35.7443 120.552,-42.6811"/>
+</g>
+<!-- Node3 -->
+<g id="node3" class="node"><title>Node3</title>
+<g id="a_node3"><a xlink:href="gmtp_8h.html#a212e85de01d9dd2c64578b4a61020f18" target="_top" xlink:title="gmtp_rcv_state_process">
+<polygon fill="white" stroke="black" points="125,-0.5 125,-19.5 249,-19.5 249,-0.5 125,-0.5"/>
+<text text-anchor="middle" x="187" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_rcv_state_process</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node3 -->
+<g id="edge2" class="edge"><title>Node1&#45;&gt;Node3</title>
+<path fill="none" stroke="midnightblue" d="M89.1849,-23.0924C97.2907,-21.9963 105.95,-20.8253 114.632,-19.6512"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="115.362,-23.0844 124.803,-18.2758 114.424,-16.1476 115.362,-23.0844"/>
+</g>
+</g>
+</svg>
diff --git a/linux-3.17.1/net/gmtp/doc/html/jquery.js b/linux-3.17.1/net/gmtp/doc/html/jquery.js
new file mode 100644
index 0000000..63939e7
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/jquery.js
@@ -0,0 +1,8 @@
+/*! jQuery v1.7.1 jquery.com | jquery.org/license */
+(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cv(a){if(!ck[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){cl||(cl=c.createElement("iframe"),cl.frameBorder=cl.width=cl.height=0),b.appendChild(cl);if(!cm||!cl.createElement)cm=(cl.contentWindow||cl.contentDocument).document,cm.write((c.compatMode==="CSS1Compat"?"<!doctype html>":"")+"<html><body>"),cm.close();d=cm.createElement(a),cm.body.appendChild(d),e=f.css(d,"display"),b.removeChild(cl)}ck[a]=e}return ck[a]}function cu(a,b){var c={};f.each(cq.concat.apply([],cq.slice(0,b)),function(){c[this]=a});return c}function ct(){cr=b}function cs(){setTimeout(ct,0);return cr=f.now()}function cj(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ci(){try{return new a.XMLHttpRequest}catch(b){}}function cc(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function cb(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function ca(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bE.test(a)?d(a,e):ca(a+"["+(typeof e=="object"||f.isArray(e)?b:"")+"]",e,c,d)});else if(!c&&b!=null&&typeof b=="object")for(var e in b)ca(a+"["+e+"]",b[e],c,d);else d(a,b)}function b_(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function b$(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bT,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=b$(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=b$(a,c,d,e,"*",g));return l}function bZ(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bP),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bC(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?bx:by,g=0,h=e.length;if(d>0){if(c!=="border")for(;g<h;g++)c||(d-=parseFloat(f.css(a,"padding"+e[g]))||0),c==="margin"?d+=parseFloat(f.css(a,c+e[g]))||0:d-=parseFloat(f.css(a,"border"+e[g]+"Width"))||0;return d+"px"}d=bz(a,b,b);if(d<0||d==null)d=a.style[b]||0;d=parseFloat(d)||0;if(c)for(;g<h;g++)d+=parseFloat(f.css(a,"padding"+e[g]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+e[g]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+e[g]))||0);return d+"px"}function bp(a,b){b.src?f.ajax({url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bf,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;if(b.nodeType===1){b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase();if(c==="object")b.outerHTML=a.outerHTML;else if(c!=="input"||a.type!=="checkbox"&&a.type!=="radio"){if(c==="option")b.selected=a.defaultSelected;else if(c==="input"||c==="textarea")b.defaultValue=a.defaultValue}else a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value);b.removeAttribute(f.expando)}}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c+(i[c][d].namespace?".":"")+i[c][d].namespace,i[c][d],i[c][d].data)}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?parseFloat(d):j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(/\s+/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,n=/^[\],:{}\s]*$/,o=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,p=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,q=/(?:^|:|,)(?:\s*\[)+/g,r=/(webkit)[ \/]([\w.]+)/,s=/(opera)(?:.*version)?[ \/]([\w.]+)/,t=/(msie) ([\w.]+)/,u=/(mozilla)(?:.*? rv:([\w.]+))?/,v=/-([a-z]|[0-9])/ig,w=/^-ms-/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.1",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a&&typeof a=="object"&&"setInterval"in a},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h){var i=a.length;if(typeof c=="object"){for(var j in c)e.access(a,j,c[j],f,g,d);return a}if(d!==b){f=!h&&f&&e.isFunction(d);for(var k=0;k<i;k++)g(a[k],c,f?d.call(a[k],k,g(a[k],c)):d,h);return a}return i?g(a[0],c):b},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?m(g):h==="function"&&(!a.unique||!o.has(g))&&c.push(g)},n=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,l=j||0,j=0,k=c.length;for(;c&&l<k;l++)if(c[l].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}i=!1,c&&(a.once?e===!0?o.disable():c=[]:d&&d.length&&(e=d.shift(),o.fireWith(e[0],e[1])))},o={add:function(){if(c){var a=c.length;m(arguments),i?k=c.length:e&&e!==!0&&(j=a,n(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){i&&f<=k&&(k--,f<=l&&l--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&o.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(i?a.once||d.push([b,c]):(!a.once||!e)&&n(b,c));return this},fire:function(){o.fireWith(this,arguments);return this},fired:function(){return!!e}};return o};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function()
+{g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p,q=c.createElement("div"),r=c.documentElement;q.setAttribute("className","t"),q.innerHTML="   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>",d=q.getElementsByTagName("*"),e=q.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=q.getElementsByTagName("input")[0],b={leadingWhitespace:q.firstChild.nodeType===3,tbody:!q.getElementsByTagName("tbody").length,htmlSerialize:!!q.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:q.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0},i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete q.test}catch(s){b.deleteExpando=!1}!q.addEventListener&&q.attachEvent&&q.fireEvent&&(q.attachEvent("onclick",function(){b.noCloneEvent=!1}),q.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),q.appendChild(i),k=c.createDocumentFragment(),k.appendChild(q.lastChild),b.checkClone=k.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,k.removeChild(i),k.appendChild(q),q.innerHTML="",a.getComputedStyle&&(j=c.createElement("div"),j.style.width="0",j.style.marginRight="0",q.style.width="2px",q.appendChild(j),b.reliableMarginRight=(parseInt((a.getComputedStyle(j,null)||{marginRight:0}).marginRight,10)||0)===0);if(q.attachEvent)for(o in{submit:1,change:1,focusin:1})n="on"+o,p=n in q,p||(q.setAttribute(n,"return;"),p=typeof q[n]=="function"),b[o+"Bubbles"]=p;k.removeChild(q),k=g=h=j=q=i=null,f(function(){var a,d,e,g,h,i,j,k,m,n,o,r=c.getElementsByTagName("body")[0];!r||(j=1,k="position:absolute;top:0;left:0;width:1px;height:1px;margin:0;",m="visibility:hidden;border:0;",n="style='"+k+"border:5px solid #000;padding:0;'",o="<div "+n+"><div></div></div>"+"<table "+n+" cellpadding='0' cellspacing='0'>"+"<tr><td></td></tr></table>",a=c.createElement("div"),a.style.cssText=m+"width:0;height:0;position:static;top:0;margin-top:"+j+"px",r.insertBefore(a,r.firstChild),q=c.createElement("div"),a.appendChild(q),q.innerHTML="<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>",l=q.getElementsByTagName("td"),p=l[0].offsetHeight===0,l[0].style.display="",l[1].style.display="none",b.reliableHiddenOffsets=p&&l[0].offsetHeight===0,q.innerHTML="",q.style.width=q.style.paddingLeft="1px",f.boxModel=b.boxModel=q.offsetWidth===2,typeof q.style.zoom!="undefined"&&(q.style.display="inline",q.style.zoom=1,b.inlineBlockNeedsLayout=q.offsetWidth===2,q.style.display="",q.innerHTML="<div style='width:4px;'></div>",b.shrinkWrapBlocks=q.offsetWidth!==2),q.style.cssText=k+m,q.innerHTML=o,d=q.firstChild,e=d.firstChild,h=d.nextSibling.firstChild.firstChild,i={doesNotAddBorder:e.offsetTop!==5,doesAddBorderForTableAndCells:h.offsetTop===5},e.style.position="fixed",e.style.top="20px",i.fixedPosition=e.offsetTop===20||e.offsetTop===15,e.style.position=e.style.top="",d.style.overflow="hidden",d.style.position="relative",i.subtractsBorderForOverflowNotVisible=e.offsetTop===-5,i.doesNotIncludeMarginInBodyOffset=r.offsetTop!==j,r.removeChild(a),q=a=null,f.extend(b,i))});return b}();var j=/^(?:\{.*\}|\[.*\])$/,k=/([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h=null;if(typeof a=="undefined"){if(this.length){h=f.data(this[0]);if(this[0].nodeType===1&&!f._data(this[0],"parsedAttrs")){e=this[0].attributes;for(var i=0,j=e.length;i<j;i++)g=e[i].name,g.indexOf("data-")===0&&(g=f.camelCase(g.substring(5)),l(this[0],g,h[g]));f._data(this[0],"parsedAttrs",!0)}}return h}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split("."),d[1]=d[1]?"."+d[1]:"";if(c===b){h=this.triggerHandler("getData"+d[1]+"!",[d[0]]),h===b&&this.length&&(h=f.data(this[0],a),h=l(this[0],a,h));return h===b&&d[1]?this.data(d[0]):h}return this.each(function(){var b=f(this),e=[d[0],c];b.triggerHandler("setData"+d[1]+"!",e),f.data(this,a,c),b.triggerHandler("changeData"+d[1]+"!",e)})},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){typeof a!="string"&&(c=a,a="fx");if(c===b)return f.queue(this[0],a);return this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise()}});var o=/[\n\t\r]/g,p=/\s+/,q=/\r/g,r=/^(?:button|input)$/i,s=/^(?:button|input|object|select|textarea)$/i,t=/^a(?:rea)?$/i,u=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,a,b,!0,f.attr)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,a,b,!0,f.prop)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.nodeName.toLowerCase()]||f.valHooks[this.type];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.nodeName.toLowerCase()]||f.valHooks[g.type];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;h<g;h++)e=d[h],e&&(c=f.propFix[e]||e,f.attr(a,e,""),a.removeAttribute(v?e:c),u.test(e)&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=/^(?:textarea|input|select)$/i,A=/^([^\.]*)?(?:\.(.+))?$/,B=/\bhover(\.\S+)?\b/,C=/^key/,D=/^(?:mouse|contextmenu)|click/,E=/^(?:focusinfocus|focusoutblur)$/,F=/^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,G=function(a){var b=F.exec(a);b&&(b[1]=(b[1]||"").toLowerCase(),b[3]=b[3]&&new RegExp("(?:^|\\s)"+b[3]+"(?:\\s|$)"));return b},H=function(a,b){var c=a.attributes||{};return(!b[1]||a.nodeName.toLowerCase()===b[1])&&(!b[2]||(c.id||{}).value===b[2])&&(!b[3]||b[3].test((c["class"]||{}).value))},I=function(a){return f.event.special.hover?a:a.replace(B,"mouseenter$1 mouseleave$1")};
+f.event={add:function(a,c,d,e,g){var h,i,j,k,l,m,n,o,p,q,r,s;if(!(a.nodeType===3||a.nodeType===8||!c||!d||!(h=f._data(a)))){d.handler&&(p=d,d=p.handler),d.guid||(d.guid=f.guid++),j=h.events,j||(h.events=j={}),i=h.handle,i||(h.handle=i=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.dispatch.apply(i.elem,arguments):b},i.elem=a),c=f.trim(I(c)).split(" ");for(k=0;k<c.length;k++){l=A.exec(c[k])||[],m=l[1],n=(l[2]||"").split(".").sort(),s=f.event.special[m]||{},m=(g?s.delegateType:s.bindType)||m,s=f.event.special[m]||{},o=f.extend({type:m,origType:l[1],data:e,handler:d,guid:d.guid,selector:g,quick:G(g),namespace:n.join(".")},p),r=j[m];if(!r){r=j[m]=[],r.delegateCount=0;if(!s.setup||s.setup.call(a,e,n,i)===!1)a.addEventListener?a.addEventListener(m,i,!1):a.attachEvent&&a.attachEvent("on"+m,i)}s.add&&(s.add.call(a,o),o.handler.guid||(o.handler.guid=d.guid)),g?r.splice(r.delegateCount++,0,o):r.push(o),f.event.global[m]=!0}a=null}},global:{},remove:function(a,b,c,d,e){var g=f.hasData(a)&&f._data(a),h,i,j,k,l,m,n,o,p,q,r,s;if(!!g&&!!(o=g.events)){b=f.trim(I(b||"")).split(" ");for(h=0;h<b.length;h++){i=A.exec(b[h])||[],j=k=i[1],l=i[2];if(!j){for(j in o)f.event.remove(a,j+b[h],c,d,!0);continue}p=f.event.special[j]||{},j=(d?p.delegateType:p.bindType)||j,r=o[j]||[],m=r.length,l=l?new RegExp("(^|\\.)"+l.split(".").sort().join("\\.(?:.*\\.)?")+"(\\.|$)"):null;for(n=0;n<r.length;n++)s=r[n],(e||k===s.origType)&&(!c||c.guid===s.guid)&&(!l||l.test(s.namespace))&&(!d||d===s.selector||d==="**"&&s.selector)&&(r.splice(n--,1),s.selector&&r.delegateCount--,p.remove&&p.remove.call(a,s));r.length===0&&m!==r.length&&((!p.teardown||p.teardown.call(a,l)===!1)&&f.removeEvent(a,j,g.handle),delete o[j])}f.isEmptyObject(o)&&(q=g.handle,q&&(q.elem=null),f.removeData(a,["events","handle"],!0))}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){if(!e||e.nodeType!==3&&e.nodeType!==8){var h=c.type||c,i=[],j,k,l,m,n,o,p,q,r,s;if(E.test(h+f.event.triggered))return;h.indexOf("!")>=0&&(h=h.slice(0,-1),k=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if((!e||f.event.customEvent[h])&&!f.event.global[h])return;c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.isTrigger=!0,c.exclusive=k,c.namespace=i.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)"):null,o=h.indexOf(":")<0?"on"+h:"";if(!e){j=f.cache;for(l in j)j[l].events&&j[l].events[h]&&f.event.trigger(c,d,j[l].handle.elem,!0);return}c.result=b,c.target||(c.target=e),d=d!=null?f.makeArray(d):[],d.unshift(c),p=f.event.special[h]||{};if(p.trigger&&p.trigger.apply(e,d)===!1)return;r=[[e,p.bindType||h]];if(!g&&!p.noBubble&&!f.isWindow(e)){s=p.delegateType||h,m=E.test(s+h)?e:e.parentNode,n=null;for(;m;m=m.parentNode)r.push([m,s]),n=m;n&&n===e.ownerDocument&&r.push([n.defaultView||n.parentWindow||a,s])}for(l=0;l<r.length&&!c.isPropagationStopped();l++)m=r[l][0],c.type=r[l][1],q=(f._data(m,"events")||{})[c.type]&&f._data(m,"handle"),q&&q.apply(m,d),q=o&&m[o],q&&f.acceptData(m)&&q.apply(m,d)===!1&&c.preventDefault();c.type=h,!g&&!c.isDefaultPrevented()&&(!p._default||p._default.apply(e.ownerDocument,d)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)&&o&&e[h]&&(h!=="focus"&&h!=="blur"||c.target.offsetWidth!==0)&&!f.isWindow(e)&&(n=e[o],n&&(e[o]=null),f.event.triggered=h,e[h](),f.event.triggered=b,n&&(e[o]=n));return c.result}},dispatch:function(c){c=f.event.fix(c||a.event);var d=(f._data(this,"events")||{})[c.type]||[],e=d.delegateCount,g=[].slice.call(arguments,0),h=!c.exclusive&&!c.namespace,i=[],j,k,l,m,n,o,p,q,r,s,t;g[0]=c,c.delegateTarget=this;if(e&&!c.target.disabled&&(!c.button||c.type!=="click")){m=f(this),m.context=this.ownerDocument||this;for(l=c.target;l!=this;l=l.parentNode||this){o={},q=[],m[0]=l;for(j=0;j<e;j++)r=d[j],s=r.selector,o[s]===b&&(o[s]=r.quick?H(l,r.quick):m.is(s)),o[s]&&q.push(r);q.length&&i.push({elem:l,matches:q})}}d.length>e&&i.push({elem:this,matches:d.slice(e)});for(j=0;j<i.length&&!c.isPropagationStopped();j++){p=i[j],c.currentTarget=p.elem;for(k=0;k<p.matches.length&&!c.isImmediatePropagationStopped();k++){r=p.matches[k];if(h||!c.namespace&&!r.namespace||c.namespace_re&&c.namespace_re.test(r.namespace))c.data=r.data,c.handleObj=r,n=((f.event.special[r.origType]||{}).handle||r.handler).apply(p.elem,g),n!==b&&(c.result=n,n===!1&&(c.preventDefault(),c.stopPropagation()))}}return c.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode);return a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,d){var e,f,g,h=d.button,i=d.fromElement;a.pageX==null&&d.clientX!=null&&(e=a.target.ownerDocument||c,f=e.documentElement,g=e.body,a.pageX=d.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=d.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?d.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0);return a}},fix:function(a){if(a[f.expando])return a;var d,e,g=a,h=f.event.fixHooks[a.type]||{},i=h.props?this.props.concat(h.props):this.props;a=f.Event(g);for(d=i.length;d;)e=i[--d],a[e]=g[e];a.target||(a.target=g.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey===b&&(a.metaKey=a.ctrlKey);return h.filter?h.filter(a,g):a},special:{ready:{setup:f.bindReady},load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=f.extend(new f.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?f.event.trigger(e,null,b):f.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},f.event.handle=f.event.dispatch,f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!(this instanceof f.Event))return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?K:J):this.type=a,b&&f.extend(this,b),this.timeStamp=a&&a.timeStamp||f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=K;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=K;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=K,this.stopPropagation()},isDefaultPrevented:J,isPropagationStopped:J,isImmediatePropagationStopped:J},f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c=this,d=a.relatedTarget,e=a.handleObj,g=e.selector,h;if(!d||d!==c&&!f.contains(c,d))a.type=e.origType,h=e.handler.apply(this,arguments),a.type=b;return h}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(){if(f.nodeName(this,"form"))return!1;f.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=f.nodeName(c,"input")||f.nodeName(c,"button")?c.form:b;d&&!d._submit_attached&&(f.event.add(d,"submit._submit",function(a){this.parentNode&&!a.isTrigger&&f.event.simulate("submit",this.parentNode,a,!0)}),d._submit_attached=!0)})},teardown:function(){if(f.nodeName(this,"form"))return!1;f.event.remove(this,"._submit")}}),f.support.changeBubbles||(f.event.special.change={setup:function(){if(z.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")f.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),f.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1,f.event.simulate("change",this,a,!0))});return!1}f.event.add(this,"beforeactivate._change",function(a){var b=a.target;z.test(b.nodeName)&&!b._change_attached&&(f.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&f.event.simulate("change",this.parentNode,a,!0)}),b._change_attached=!0)})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){f.event.remove(this,"._change");return z.test(this.nodeName)}}),f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){var d=0,e=function(a){f.event.simulate(b,a.target,f.event.fix(a),!0)};f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.fn.extend({on:function(a,c,d,e,g){var h,i;if(typeof a=="object"){typeof c!="string"&&(d=c,c=b);for(i in a)this.on(i,c,d,a[i],g);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=J;else if(!e)return this;g===1&&(h=e,e=function(a){f().off(a);return h.apply(this,arguments)},e.guid=h.guid||(h.guid=f.guid++));return this.each(function(){f.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on.call(this,a,b,c,d,1)},off:function(a,c,d){if(a&&a.preventDefault&&a.handleObj){var e=a.handleObj;f(a.delegateTarget).off(e.namespace?e.type+"."+e.namespace:e.type,e.selector,e.handler);return this}if(typeof a=="object"){for(var g in a)this.off(g,c,a[g]);return this}if(c===!1||typeof c=="function")d=c,c=b;d===!1&&(d=J);return this.each(function(){f.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){f(this.context).on(a,this.selector,b,c);return this},die:function(a,b){f(this.context).off(a,this.selector||"**",b);return this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length==1?this.off(a,"**"):this.off(b,a,c)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f._data(this,"lastToggle"+a.guid)||0)%d;f._data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return arguments.length>0?this.on(b,null,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0),C.test(b)&&(f.event.fixHooks[b]=f.event.keyHooks),D.test(b)&&(f.event.fixHooks[b]=f.event.mouseHooks)}),function(){function x(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}if(j.nodeType===1){g||(j[d]=c,j.sizset=h);if(typeof b!="string"){if(j===b){k=!0;break}}else if(m.filter(b,[j]).length>0){k=j;break}}j=j[a]}e[h]=k}}}function w(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}j.nodeType===1&&!g&&(j[d]=c,j.sizset=h);if(j.nodeName.toLowerCase()===b){k=j;break}j=j[a]}e[h]=k}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d="sizcache"+(Math.random()+"").replace(".",""),e=0,g=Object.prototype.toString,h=!1,i=!0,j=/\\/g,k=/\r\n/g,l=/\W/;[0,0].sort(function(){i=!1;return 0});var m=function(b,d,e,f){e=e||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!="string")return e;var i,j,k,l,n,q,r,t,u=!0,v=m.isXML(d),w=[],x=b;do{a.exec(""),i=a.exec(x);if(i){x=i[3],w.push(i[1]);if(i[2]){l=i[3];break}}}while(i);if(w.length>1&&p.exec(b))if(w.length===2&&o.relative[w[0]])j=y(w[0]+w[1],d,f);else{j=o.relative[w[0]]?[d]:m(w.shift(),d);while(w.length)b=w.shift(),o.relative[b]&&(b+=w.shift()),j=y(b,j,f)}else{!f&&w.length>1&&d.nodeType===9&&!v&&o.match.ID.test(w[0])&&!o.match.ID.test(w[w.length-1])&&(n=m.find(w.shift(),d,v),d=n.expr?m.filter(n.expr,n.set)[0]:n.set[0]);if(d){n=f?{expr:w.pop(),set:s(f)}:m.find(w.pop(),w.length===1&&(w[0]==="~"||w[0]==="+")&&d.parentNode?d.parentNode:d,v),j=n.expr?m.filter(n.expr,n.set):n.set,w.length>0?k=s(j):u=!1;while(w.length)q=w.pop(),r=q,o.relative[q]?r=w.pop():q="",r==null&&(r=d),o.relative[q](k,r,v)}else k=w=[]}k||(k=j),k||m.error(q||b);if(g.call(k)==="[object Array]")if(!u)e.push.apply(e,k);else if(d&&d.nodeType===1)for(t=0;k[t]!=null;t++)k[t]&&(k[t]===!0||k[t].nodeType===1&&m.contains(d,k[t]))&&e.push(j[t]);else for(t=0;k[t]!=null;t++)k[t]&&k[t].nodeType===1&&e.push(j[t]);else s(k,e);l&&(m(l,h,e,f),m.uniqueSort(e));return e};m.uniqueSort=function(a){if(u){h=i,a.sort(u);if(h)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},m.matches=function(a,b){return m(a,null,null,b)},m.matchesSelector=function(a,b){return m(b,null,null,[a]).length>0},m.find=function(a,b,c){var d,e,f,g,h,i;if(!a)return[];for(e=0,f=o.order.length;e<f;e++){h=o.order[e];if(g=o.leftMatch[h].exec(a)){i=g[1],g.splice(1,1);if(i.substr(i.length-1)!=="\\"){g[1]=(g[1]||"").replace(j,""),d=o.find[h](g,b,c);if(d!=null){a=a.replace(o.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},m.filter=function(a,c,d,e){var f,g,h,i,j,k,l,n,p,q=a,r=[],s=c,t=c&&c[0]&&m.isXML(c[0]);while(a&&c.length){for(h in o.filter)if((f=o.leftMatch[h].exec(a))!=null&&f[2]){k=o.filter[h],l=f[1],g=!1,f.splice(1,1);if(l.substr(l.length-1)==="\\")continue;s===r&&(r=[]);if(o.preFilter[h]){f=o.preFilter[h](f,s,d,r,e,t);if(!f)g=i=!0;else if(f===!0)continue}if(f)for(n=0;(j=s[n])!=null;n++)j&&(i=k(j,f,n,s),p=e^i,d&&i!=null?p?g=!0:s[n]=!1:p&&(r.push(j),g=!0));if(i!==b){d||(s=r),a=a.replace(o.match[h],"");if(!g)return[];break}}if(a===q)if(g==null)m.error(a);else break;q=a}return s},m.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)};var n=m.getText=function(a){var b,c,d=a.nodeType,e="";if(d){if(d===1||d===9){if(typeof a.textContent=="string")return a.textContent;if(typeof a.innerText=="string")return a.innerText.replace(k,"");for(a=a.firstChild;a;a=a.nextSibling)e+=n(a)}else if(d===3||d===4)return a.nodeValue}else for(b=0;c=a[b];b++)c.nodeType!==8&&(e+=n(c));return e},o=m.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&&!l.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&m.filter(b,a,!0)},">":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&&!l.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d
+&&m.filter(b,a,!0)}},"":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("parentNode",b,f,a,d,c)},"~":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("previousSibling",b,f,a,d,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e<f;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(j,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(j,"")},TAG:function(a,b){return a[1].replace(j,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||m.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&m.error(a[0]);a[0]=e++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(j,"");!f&&o.attrMap[g]&&(a[1]=o.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(j,""),a[2]==="~="&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=m(b[3],null,null,c);else{var g=m.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(o.match.POS.test(b[0])||o.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!m(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=o.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||n([a])||"").indexOf(b[3])>=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}m.error(e)},CHILD:function(a,b){var c,e,f,g,h,i,j,k=b[1],l=a;switch(k){case"only":case"first":while(l=l.previousSibling)if(l.nodeType===1)return!1;if(k==="first")return!0;l=a;case"last":while(l=l.nextSibling)if(l.nodeType===1)return!1;return!0;case"nth":c=b[2],e=b[3];if(c===1&&e===0)return!0;f=b[0],g=a.parentNode;if(g&&(g[d]!==f||!a.nodeIndex)){i=0;for(l=g.firstChild;l;l=l.nextSibling)l.nodeType===1&&(l.nodeIndex=++i);g[d]=f}j=a.nodeIndex-e;return c===0?j===0:j%c===0&&j/c>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&&a.nodeType===1||!!a.nodeName&&a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=m.attr?m.attr(a,c):o.attrHandle[c]?o.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":!f&&m.attr?d!=null:f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+" ").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=o.setFilters[e];if(f)return f(a,c,b,d)}}},p=o.match.POS,q=function(a,b){return"\\"+(b-0+1)};for(var r in o.match)o.match[r]=new RegExp(o.match[r].source+/(?![^\[]*\])(?![^\(]*\))/.source),o.leftMatch[r]=new RegExp(/(^(?:.|\r|\n)*?)/.source+o.match[r].source.replace(/\\(\d+)/g,q));var s=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(t){s=function(a,b){var c=0,d=b||[];if(g.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var e=a.length;c<e;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var u,v;c.documentElement.compareDocumentPosition?u=function(a,b){if(a===b){h=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&4?-1:1}:(u=function(a,b){if(a===b){h=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,i=b.parentNode,j=g;if(g===i)return v(a,b);if(!g)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k<c&&k<d;k++)if(e[k]!==f[k])return v(e[k],f[k]);return k===c?v(a,f[k],-1):v(e[k],b,1)},v=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(o.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},o.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(o.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(o.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var a=m,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){m=function(b,e,f,g){e=e||c;if(!g&&!m.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return s(e.getElementsByTagName(b),f);if(h[2]&&o.find.CLASS&&e.getElementsByClassName)return s(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return s([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return s([],f);if(i.id===h[3])return s([i],f)}try{return s(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var k=e,l=e.getAttribute("id"),n=l||d,p=e.parentNode,q=/^\s*[+~]/.test(b);l?n=n.replace(/'/g,"\\$&"):e.setAttribute("id",n),q&&p&&(e=e.parentNode);try{if(!q||p)return s(e.querySelectorAll("[id='"+n+"'] "+b),f)}catch(r){}finally{l||k.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)m[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}m.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!m.isXML(a))try{if(e||!o.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return m(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="<div class='test e'></div><div class='test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;o.order.splice(1,0,"CLASS"),o.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?m.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?m.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:m.contains=function(){return!1},m.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var y=function(a,b,c){var d,e=[],f="",g=b.nodeType?[b]:b;while(d=o.match.PSEUDO.exec(a))f+=d[0],a=a.replace(o.match.PSEUDO,"");a=o.relative[a]?a+"*":a;for(var h=0,i=g.length;h<i;h++)m(a,g[h],e,c);return m.filter(f,e)};m.attr=f.attr,m.selectors.attrMap={},f.find=m,f.expr=m.selectors,f.expr[":"]=f.expr.filters,f.unique=m.uniqueSort,f.text=m.getText,f.isXMLDoc=m.isXML,f.contains=m.contains}();var L=/Until$/,M=/^(?:parents|prevUntil|prevAll)/,N=/,/,O=/^.[^:#\[\.,]*$/,P=Array.prototype.slice,Q=f.expr.match.POS,R={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(T(this,a,!1),"not",a)},filter:function(a){return this.pushStack(T(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?Q.test(a)?f(a,this.context).index(this[0])>=0:f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h=1;while(g&&g.ownerDocument&&g!==b){for(d=0;d<a.length;d++)f(g).is(a[d])&&c.push({selector:a[d],elem:g,level:h});g=g.parentNode,h++}return c}var i=Q.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d<e;d++){g=this[d];while(g){if(i?i.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a)return this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(S(c[0])||S(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling(a.parentNode.firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c);L.test(a)||(d=c),d&&typeof d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!R[a]?f.unique(e):e,(this.length>1||N.test(d))&&M.test(a)&&(e=e.reverse());return this.pushStack(e,a,P.call(arguments).join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var V="abbr|article|aside|audio|canvas|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",W=/ jQuery\d+="(?:\d+|null)"/g,X=/^\s+/,Y=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Z=/<([\w:]+)/,$=/<tbody/i,_=/<|&#?\w+;/,ba=/<(?:script|style)/i,bb=/<(?:script|object|embed|option|style)/i,bc=new RegExp("<(?:"+V+")","i"),bd=/checked\s*(?:[^=]|=\s*.checked.)/i,be=/\/(java|ecma)script/i,bf=/^\s*<!(?:\[CDATA\[|\-\-)/,bg={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},bh=U(c);bg.optgroup=bg.option,bg.tbody=bg.tfoot=bg.colgroup=bg.caption=bg.thead,bg.th=bg.td,f.support.htmlSerialize||(bg._default=[1,"div<div>","</div>"]),f.fn.extend({text:function(a){if(f.isFunction(a))return this.each(function(b){var c=f(this);c.text(a.call(this,b,c.text()))});if(typeof a!="object"&&a!==b)return this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a));return f.text(this)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=f.isFunction(a);return this.each(function(c){f(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f.clean(arguments);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f.clean(arguments));return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),
+f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function()
+{for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){if(a===b)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(W,""):null;if(typeof a=="string"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&!bg[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"<$1></$2>");try{for(var c=0,d=this.length;c<d;c++)this[c].nodeType===1&&(f.cleanData(this[c].getElementsByTagName("*")),this[c].innerHTML=a)}catch(e){this.empty().append(a)}}else f.isFunction(a)?this.each(function(b){var c=f(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bd.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bi(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,bp)}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i,j=a[0];b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof j=="string"&&j.length<512&&i===c&&j.charAt(0)==="<"&&!bb.test(j)&&(f.support.checkClone||!bd.test(j))&&(f.support.html5Clone||!bc.test(j))&&(g=!0,h=f.fragments[j],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[j]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d,e,g,h=f.support.html5Clone||!bc.test("<"+a.nodeName)?a.cloneNode(!0):bo(a);if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bk(a,h),d=bl(a),e=bl(h);for(g=0;d[g];++g)e[g]&&bk(d[g],e[g])}if(b){bj(a,h);if(c){d=bl(a),e=bl(h);for(g=0;d[g];++g)bj(d[g],e[g])}}d=e=null;return h},clean:function(a,b,d,e){var g;b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);var h=[],i;for(var j=0,k;(k=a[j])!=null;j++){typeof k=="number"&&(k+="");if(!k)continue;if(typeof k=="string")if(!_.test(k))k=b.createTextNode(k);else{k=k.replace(Y,"<$1></$2>");var l=(Z.exec(k)||["",""])[1].toLowerCase(),m=bg[l]||bg._default,n=m[0],o=b.createElement("div");b===c?bh.appendChild(o):U(b).appendChild(o),o.innerHTML=m[1]+k+m[2];while(n--)o=o.lastChild;if(!f.support.tbody){var p=$.test(k),q=l==="table"&&!p?o.firstChild&&o.firstChild.childNodes:m[1]==="<table>"&&!p?o.childNodes:[];for(i=q.length-1;i>=0;--i)f.nodeName(q[i],"tbody")&&!q[i].childNodes.length&&q[i].parentNode.removeChild(q[i])}!f.support.leadingWhitespace&&X.test(k)&&o.insertBefore(b.createTextNode(X.exec(k)[0]),o.firstChild),k=o.childNodes}var r;if(!f.support.appendChecked)if(k[0]&&typeof (r=k.length)=="number")for(i=0;i<r;i++)bn(k[i]);else bn(k);k.nodeType?h.push(k):h=f.merge(h,k)}if(d){g=function(a){return!a.type||be.test(a.type)};for(j=0;h[j];j++)if(e&&f.nodeName(h[j],"script")&&(!h[j].type||h[j].type.toLowerCase()==="text/javascript"))e.push(h[j].parentNode?h[j].parentNode.removeChild(h[j]):h[j]);else{if(h[j].nodeType===1){var s=f.grep(h[j].getElementsByTagName("script"),g);h.splice.apply(h,[j+1,0].concat(s))}d.appendChild(h[j])}}return h},cleanData:function(a){var b,c,d=f.cache,e=f.event.special,g=f.support.deleteExpando;for(var h=0,i;(i=a[h])!=null;h++){if(i.nodeName&&f.noData[i.nodeName.toLowerCase()])continue;c=i[f.expando];if(c){b=d[c];if(b&&b.events){for(var j in b.events)e[j]?f.event.remove(i,j):f.removeEvent(i,j,b.handle);b.handle&&(b.handle.elem=null)}g?delete i[f.expando]:i.removeAttribute&&i.removeAttribute(f.expando),delete d[c]}}}});var bq=/alpha\([^)]*\)/i,br=/opacity=([^)]*)/,bs=/([A-Z]|^ms)/g,bt=/^-?\d+(?:px)?$/i,bu=/^-?\d/,bv=/^([\-+])=([\-+.\de]+)/,bw={position:"absolute",visibility:"hidden",display:"block"},bx=["Left","Right"],by=["Top","Bottom"],bz,bA,bB;f.fn.css=function(a,c){if(arguments.length===2&&c===b)return this;return f.access(this,a,c,!0,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)})},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bz(a,"opacity","opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&&(g=bv.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&&isNaN(d))return;h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(bz)return bz(a,c)},swap:function(a,b,c){var d={};for(var e in b)d[e]=a.style[e],a.style[e]=b[e];c.call(a);for(e in b)a.style[e]=d[e]}}),f.curCSS=f.css,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){var e;if(c){if(a.offsetWidth!==0)return bC(a,b,d);f.swap(a,bw,function(){e=bC(a,b,d)});return e}},set:function(a,b){if(!bt.test(b))return b;b=parseFloat(b);if(b>=0)return b+"px"}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return br.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNumeric(b)?"alpha(opacity="+b*100+")":"",g=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&f.trim(g.replace(bq,""))===""){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bq.test(g)?g.replace(bq,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){var c;f.swap(a,{display:"inline-block"},function(){b?c=bz(a,"margin-right","marginRight"):c=a.style.marginRight});return c}})}),c.defaultView&&c.defaultView.getComputedStyle&&(bA=function(a,b){var c,d,e;b=b.replace(bs,"-$1").toLowerCase(),(d=a.ownerDocument.defaultView)&&(e=d.getComputedStyle(a,null))&&(c=e.getPropertyValue(b),c===""&&!f.contains(a.ownerDocument.documentElement,a)&&(c=f.style(a,b)));return c}),c.documentElement.currentStyle&&(bB=function(a,b){var c,d,e,f=a.currentStyle&&a.currentStyle[b],g=a.style;f===null&&g&&(e=g[b])&&(f=e),!bt.test(f)&&bu.test(f)&&(c=g.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),g.left=b==="fontSize"?"1em":f||0,f=g.pixelLeft+"px",g.left=c,d&&(a.runtimeStyle.left=d));return f===""?"auto":f}),bz=bA||bB,f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style&&a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)});var bD=/%20/g,bE=/\[\]$/,bF=/\r?\n/g,bG=/#.*$/,bH=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bI=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bJ=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bK=/^(?:GET|HEAD)$/,bL=/^\/\//,bM=/\?/,bN=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bO=/^(?:select|textarea)/i,bP=/\s+/,bQ=/([?&])_=[^&]*/,bR=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bS=f.fn.load,bT={},bU={},bV,bW,bX=["*/"]+["*"];try{bV=e.href}catch(bY){bV=c.createElement("a"),bV.href="",bV=bV.href}bW=bR.exec(bV.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&&bS)return bS.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("<div>").append(c.replace(bN,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bO.test(this.nodeName)||bI.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bF,"\r\n")}}):{name:b.name,value:c.replace(bF,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.on(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?b_(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),b_(a,b);return a},ajaxSettings:{url:bV,isLocal:bJ.test(bW[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bX},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bZ(bT),ajaxTransport:bZ(bU),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a>0?4:0;var o,r,u,w=c,x=l?cb(d,v,l):b,y,z;if(a>=200&&a<300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=cc(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a<0&&(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.fireWith(e,[v,w]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f.Callbacks("once memory"),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bH.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.add,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bG,"").replace(bL,bW[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bP),d.crossDomain==null&&(r=bR.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bW[1]&&r[2]==bW[2]&&(r[3]||(r[1]==="http:"?80:443))==(bW[3]||(bW[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),b$(bT,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bK.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bM.test(d.url)?"&":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bQ,"$1_="+x);d.url=y+(y===d.url?(bM.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bX+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=b$(bU,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){if(s<2)w(-1,z);else throw z}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)ca(g,a[g],c,e);return d.join("&").replace(bD,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var cd=f.now(),ce=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+cd++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=b.contentType==="application/x-www-form-urlencoded"&&typeof b.data=="string";if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(ce.test(b.url)||e&&ce.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(ce,l),b.url===j&&(e&&(k=k.replace(ce,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var cf=a.ActiveXObject?function(){for(var a in ch)ch[a](0,1)}:!1,cg=0,ch;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ci()||cj()}:ci,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c)
+{if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,cf&&delete ch[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n),m.text=h.responseText;try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cg,cf&&(ch||(ch={},f(a).unload(cf)),ch[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var ck={},cl,cm,cn=/^(?:toggle|show|hide)$/,co=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,cp,cq=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cr;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(cu("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),e===""&&f.css(d,"display")==="none"&&f._data(d,"olddisplay",cv(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(cu("hide",3),a,b,c);var d,e,g=0,h=this.length;for(;g<h;g++)d=this[g],d.style&&(e=f.css(d,"display"),e!=="none"&&!f._data(d,"olddisplay")&&f._data(d,"olddisplay",e));for(g=0;g<h;g++)this[g].style&&(this[g].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(cu("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){function g(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]),h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(!f.support.inlineBlockNeedsLayout||cv(this.nodeName)==="inline"?this.style.display="inline-block":this.style.zoom=1))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)j=new f.fx(this,b,i),h=a[i],cn.test(h)?(o=f._data(this,"toggle"+i)||(h==="toggle"?d?"show":"hide":0),o?(f._data(this,"toggle"+i,o==="show"?"hide":"show"),j[o]()):j[h]()):(k=co.exec(h),l=j.cur(),k?(m=parseFloat(k[2]),n=k[3]||(f.cssNumber[i]?"":"px"),n!=="px"&&(f.style(this,i,(m||1)+n),l=(m||1)/j.cur()*l,f.style(this,i,l+n)),k[1]&&(m=(k[1]==="-="?-1:1)*m+l),j.custom(l,m,n)):j.custom(l,h,""));return!0}var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return e.queue===!1?this.each(g):this.queue(e.queue,g)},stop:function(a,c,d){typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]);return this.each(function(){function h(a,b,c){var e=b[c];f.removeData(a,c,!0),e.stop(d)}var b,c=!1,e=f.timers,g=f._data(this);d||f._unmark(!0,this);if(a==null)for(b in g)g[b]&&g[b].stop&&b.indexOf(".run")===b.length-4&&h(this,g,b);else g[b=a+".run"]&&g[b].stop&&h(this,g,b);for(b=e.length;b--;)e[b].elem===this&&(a==null||e[b].queue===a)&&(d?e[b](!0):e[b].saveState(),c=!0,e.splice(b,1));(!d||!c)&&f.dequeue(this,a)})}}),f.each({slideDown:cu("show",1),slideUp:cu("hide",1),slideToggle:cu("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue?f.dequeue(this,d.queue):a!==!1&&f._unmark(this)};return d},easing:{linear:function(a,b,c,d){return c+d*a},swing:function(a,b,c,d){return(-Math.cos(a*Math.PI)/2+.5)*d+c}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,c,d){function h(a){return e.step(a)}var e=this,g=f.fx;this.startTime=cr||cs(),this.end=c,this.now=this.start=a,this.pos=this.state=0,this.unit=d||this.unit||(f.cssNumber[this.prop]?"":"px"),h.queue=this.options.queue,h.elem=this.elem,h.saveState=function(){e.options.hide&&f._data(e.elem,"fxshow"+e.prop)===b&&f._data(e.elem,"fxshow"+e.prop,e.start)},h()&&f.timers.push(h)&&!cp&&(cp=setInterval(g.tick,g.interval))},show:function(){var a=f._data(this.elem,"fxshow"+this.prop);this.options.orig[this.prop]=a||f.style(this.elem,this.prop),this.options.show=!0,a!==b?this.custom(this.cur(),a):this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f._data(this.elem,"fxshow"+this.prop)||f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b,c,d,e=cr||cs(),g=!0,h=this.elem,i=this.options;if(a||e>=i.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),i.animatedProperties[this.prop]=!0;for(b in i.animatedProperties)i.animatedProperties[b]!==!0&&(g=!1);if(g){i.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){h.style["overflow"+b]=i.overflow[a]}),i.hide&&f(h).hide();if(i.hide||i.show)for(b in i.animatedProperties)f.style(h,b,i.orig[b]),f.removeData(h,"fxshow"+b,!0),f.removeData(h,"toggle"+b,!0);d=i.complete,d&&(i.complete=!1,d.call(h))}return!1}i.duration==Infinity?this.now=e:(c=e-this.startTime,this.state=c/i.duration,this.pos=f.easing[i.animatedProperties[this.prop]](this.state,c,0,1,i.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){var a,b=f.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||f.fx.stop()},interval:13,stop:function(){clearInterval(cp),cp=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=a.now+a.unit:a.elem[a.prop]=a.now}}}),f.each(["width","height"],function(a,b){f.fx.step[b]=function(a){f.style(a.elem,b,Math.max(0,a.now)+a.unit)}}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cw=/^t(?:able|d|h)$/i,cx=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?f.fn.offset=function(a){var b=this[0],c;if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);try{c=b.getBoundingClientRect()}catch(d){}var e=b.ownerDocument,g=e.documentElement;if(!c||!f.contains(g,b))return c?{top:c.top,left:c.left}:{top:0,left:0};var h=e.body,i=cy(e),j=g.clientTop||h.clientTop||0,k=g.clientLeft||h.clientLeft||0,l=i.pageYOffset||f.support.boxModel&&g.scrollTop||h.scrollTop,m=i.pageXOffset||f.support.boxModel&&g.scrollLeft||h.scrollLeft,n=c.top+l-j,o=c.left+m-k;return{top:n,left:o}}:f.fn.offset=function(a){var b=this[0];if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);var c,d=b.offsetParent,e=b,g=b.ownerDocument,h=g.documentElement,i=g.body,j=g.defaultView,k=j?j.getComputedStyle(b,null):b.currentStyle,l=b.offsetTop,m=b.offsetLeft;while((b=b.parentNode)&&b!==i&&b!==h){if(f.support.fixedPosition&&k.position==="fixed")break;c=j?j.getComputedStyle(b,null):b.currentStyle,l-=b.scrollTop,m-=b.scrollLeft,b===d&&(l+=b.offsetTop,m+=b.offsetLeft,f.support.doesNotAddBorder&&(!f.support.doesAddBorderForTableAndCells||!cw.test(b.nodeName))&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),e=d,d=b.offsetParent),f.support.subtractsBorderForOverflowNotVisible&&c.overflow!=="visible"&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),k=c}if(k.position==="relative"||k.position==="static")l+=i.offsetTop,m+=i.offsetLeft;f.support.fixedPosition&&k.position==="fixed"&&(l+=Math.max(h.scrollTop,i.scrollTop),m+=Math.max(h.scrollLeft,i.scrollLeft));return{top:l,left:m}},f.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=cx.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!cx.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each(["Left","Top"],function(a,c){var d="scroll"+c;f.fn[d]=function(c){var e,g;if(c===b){e=this[0];if(!e)return null;g=cy(e);return g?"pageXOffset"in g?g[a?"pageYOffset":"pageXOffset"]:f.support.boxModel&&g.document.documentElement[d]||g.document.body[d]:e[d]}return this.each(function(){g=cy(this),g?g.scrollTo(a?f(g).scrollLeft():c,a?c:f(g).scrollTop()):this[d]=c})}}),f.each(["Height","Width"],function(a,c){var d=c.toLowerCase();f.fn["inner"+c]=function(){var a=this[0];return a?a.style?parseFloat(f.css(a,d,"padding")):this[d]():null},f.fn["outer"+c]=function(a){var b=this[0];return b?b.style?parseFloat(f.css(b,d,a?"margin":"border")):this[d]():null},f.fn[d]=function(a){var e=this[0];if(!e)return a==null?null:this;if(f.isFunction(a))return this.each(function(b){var c=f(this);c[d](a.call(this,b,c[d]()))});if(f.isWindow(e)){var g=e.document.documentElement["client"+c],h=e.document.body;return e.document.compatMode==="CSS1Compat"&&g||h&&h["client"+c]||g}if(e.nodeType===9)return Math.max(e.documentElement["client"+c],e.body["scroll"+c],e.documentElement["scroll"+c],e.body["offset"+c],e.documentElement["offset"+c]);if(a===b){var i=f.css(e,d),j=parseFloat(i);return f.isNumeric(j)?j:i}return this.css(d,typeof a=="string"?a:a+"px")}}),a.jQuery=a.$=f,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return f})})(window);
diff --git a/linux-3.17.1/net/gmtp/doc/html/nav_f.png b/linux-3.17.1/net/gmtp/doc/html/nav_f.png
new file mode 100644
index 0000000..72a58a5
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/nav_f.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/nav_g.png b/linux-3.17.1/net/gmtp/doc/html/nav_g.png
new file mode 100644
index 0000000..2093a23
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/nav_g.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/nav_h.png b/linux-3.17.1/net/gmtp/doc/html/nav_h.png
new file mode 100644
index 0000000..33389b1
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/nav_h.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/open.png b/linux-3.17.1/net/gmtp/doc/html/open.png
new file mode 100644
index 0000000..30f75c7
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/open.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/output_8c.html b/linux-3.17.1/net/gmtp/doc/html/output_8c.html
new file mode 100644
index 0000000..dadc3e7
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/output_8c.html
@@ -0,0 +1,264 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: output.c File Reference</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li class="current"><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li><a href="files.html"><span>File&#160;List</span></a></li>
+      <li><a href="globals.html"><span>Globals</span></a></li>
+    </ul>
+  </div>
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+</div><!-- top -->
+<div class="header">
+  <div class="summary">
+<a href="#func-members">Functions</a>  </div>
+  <div class="headertitle">
+<div class="title">output.c File Reference</div>  </div>
+</div><!--header-->
+<div class="contents">
+<div class="textblock"><code>#include &lt;linux/kernel.h&gt;</code><br/>
+<code>#include &lt;linux/skbuff.h&gt;</code><br/>
+<code>#include &lt;linux/slab.h&gt;</code><br/>
+<code>#include &lt;linux/gmtp.h&gt;</code><br/>
+<code>#include &lt;linux/types.h&gt;</code><br/>
+<code>#include &lt;net/inet_sock.h&gt;</code><br/>
+<code>#include &lt;net/sock.h&gt;</code><br/>
+<code>#include &quot;<a class="el" href="gmtp_8h_source.html">gmtp.h</a>&quot;</code><br/>
+</div><div class="textblock"><div class="dynheader">
+Include dependency graph for output.c:</div>
+<div class="dyncontent">
+<div class="center"><iframe scrolling="no" frameborder="0" src="output_8c__incl.svg" width="1199" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
+</div>
+</div><table class="memberdecls">
+<tr class="heading"><td colspan="2"><h2><a name="func-members"></a>
+Functions</h2></td></tr>
+<tr class="memitem:a2df4bd07928440434f3ffc5e9a99e192"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="output_8c.html#a2df4bd07928440434f3ffc5e9a99e192">gmtp_connect</a> (struct sock *sk)</td></tr>
+<tr class="memitem:a8823c64d48b3edf631d90827fe8145a1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="output_8c.html#a8823c64d48b3edf631d90827fe8145a1">EXPORT_SYMBOL_GPL</a> (<a class="el" href="output_8c.html#a2df4bd07928440434f3ffc5e9a99e192">gmtp_connect</a>)</td></tr>
+<tr class="memitem:a8e94a84dd0d5b12f39df23b6c6ff005b"><td class="memItemLeft" align="right" valign="top">struct sk_buff *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="output_8c.html#a8e94a84dd0d5b12f39df23b6c6ff005b">gmtp_make_response</a> (struct sock *sk, struct dst_entry *dst, struct request_sock *req)</td></tr>
+<tr class="memitem:ab51c1008fc15439db56e838547dd798a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="output_8c.html#ab51c1008fc15439db56e838547dd798a">EXPORT_SYMBOL_GPL</a> (<a class="el" href="output_8c.html#a8e94a84dd0d5b12f39df23b6c6ff005b">gmtp_make_response</a>)</td></tr>
+<tr class="memitem:a702ba25884e070b579dcfa4769260847"><td class="memItemLeft" align="right" valign="top">struct sk_buff *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="output_8c.html#a702ba25884e070b579dcfa4769260847">gmtp_ctl_make_reset</a> (struct sock *sk, struct sk_buff *rcv_skb)</td></tr>
+<tr class="memitem:af63283ab704f9c1e284327090204d962"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="output_8c.html#af63283ab704f9c1e284327090204d962">EXPORT_SYMBOL_GPL</a> (<a class="el" href="output_8c.html#a702ba25884e070b579dcfa4769260847">gmtp_ctl_make_reset</a>)</td></tr>
+</table>
+<hr/><h2>Function Documentation</h2>
+<a class="anchor" id="a8823c64d48b3edf631d90827fe8145a1"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="output_8c.html#a2df4bd07928440434f3ffc5e9a99e192">gmtp_connect</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ab51c1008fc15439db56e838547dd798a"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="output_8c.html#a8e94a84dd0d5b12f39df23b6c6ff005b">gmtp_make_response</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="af63283ab704f9c1e284327090204d962"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="output_8c.html#a702ba25884e070b579dcfa4769260847">gmtp_ctl_make_reset</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a2df4bd07928440434f3ffc5e9a99e192"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_connect </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+<p><div class="dynheader">
+Here is the caller graph for this function:</div>
+<div class="dyncontent">
+<div class="center"><iframe scrolling="no" frameborder="0" src="output_8c_a2df4bd07928440434f3ffc5e9a99e192_icgraph.svg" width="288" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
+</div>
+</p>
+
+</div>
+</div>
+<a class="anchor" id="a702ba25884e070b579dcfa4769260847"></a>
+<div class="memitem">
+<div class="memproto">
+<table class="mlabels">
+  <tr>
+  <td class="mlabels-left">
+      <table class="memname">
+        <tr>
+          <td class="memname">struct sk_buff* gmtp_ctl_make_reset </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct sk_buff *&#160;</td>
+          <td class="paramname"><em>rcv_skb</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+  </td>
+  <td class="mlabels-right">
+<span class="mlabels"><span class="mlabel">read</span></span>  </td>
+  </tr>
+</table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a8e94a84dd0d5b12f39df23b6c6ff005b"></a>
+<div class="memitem">
+<div class="memproto">
+<table class="mlabels">
+  <tr>
+  <td class="mlabels-left">
+      <table class="memname">
+        <tr>
+          <td class="memname">struct sk_buff* gmtp_make_response </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct dst_entry *&#160;</td>
+          <td class="paramname"><em>dst</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct request_sock *&#160;</td>
+          <td class="paramname"><em>req</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+  </td>
+  <td class="mlabels-right">
+<span class="mlabels"><span class="mlabel">read</span></span>  </td>
+  </tr>
+</table>
+</div><div class="memdoc">
+
+</div>
+</div>
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/output_8c__incl.map b/linux-3.17.1/net/gmtp/doc/html/output_8c__incl.map
new file mode 100644
index 0000000..6042fa9
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/output_8c__incl.map
@@ -0,0 +1,3 @@
+<map id="G" name="G">
+<area shape="rect" id="node9" href="$gmtp_8h.html" title="gmtp.h" alt="" coords="779,80,842,107"/>
+</map>
diff --git a/linux-3.17.1/net/gmtp/doc/html/output_8c__incl.md5 b/linux-3.17.1/net/gmtp/doc/html/output_8c__incl.md5
new file mode 100644
index 0000000..0c13604
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/output_8c__incl.md5
@@ -0,0 +1 @@
+43eea6629a0cf32d02f6320223d330e3
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/html/output_8c__incl.svg b/linux-3.17.1/net/gmtp/doc/html/output_8c__incl.svg
new file mode 100644
index 0000000..0b5d801
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/output_8c__incl.svg
@@ -0,0 +1,146 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
+ "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Generated by graphviz version 2.38.0 (20140413.2041)
+ -->
+<!-- Title: G Pages: 1 -->
+<svg width="899pt" height="140pt"
+ viewBox="0.00 0.00 899.00 140.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 136)">
+<title>G</title>
+<polygon fill="white" stroke="none" points="-4,4 -4,-136 895,-136 895,4 -4,4"/>
+<!-- Node1 -->
+<g id="node1" class="node"><title>Node1</title>
+<polygon fill="#bfbfbf" stroke="black" points="286,-112.5 286,-131.5 338,-131.5 338,-112.5 286,-112.5"/>
+<text text-anchor="middle" x="312" y="-119.5" font-family="Helvetica,sans-Serif" font-size="10.00">output.c</text>
+</g>
+<!-- Node2 -->
+<g id="node2" class="node"><title>Node2</title>
+<polygon fill="white" stroke="#bfbfbf" points="0,-56.5 0,-75.5 74,-75.5 74,-56.5 0,-56.5"/>
+<text text-anchor="middle" x="37" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">linux/kernel.h</text>
+</g>
+<!-- Node1&#45;&gt;Node2 -->
+<g id="edge1" class="edge"><title>Node1&#45;&gt;Node2</title>
+<path fill="none" stroke="midnightblue" d="M285.632,-115.822C239.216,-106.708 142.335,-87.684 84.1599,-76.2605"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="84.606,-72.7813 74.119,-74.2888 83.2572,-79.6502 84.606,-72.7813"/>
+</g>
+<!-- Node3 -->
+<g id="node3" class="node"><title>Node3</title>
+<polygon fill="white" stroke="#bfbfbf" points="92.5,-56.5 92.5,-75.5 167.5,-75.5 167.5,-56.5 92.5,-56.5"/>
+<text text-anchor="middle" x="130" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">linux/skbuff.h</text>
+</g>
+<!-- Node1&#45;&gt;Node3 -->
+<g id="edge2" class="edge"><title>Node1&#45;&gt;Node3</title>
+<path fill="none" stroke="midnightblue" d="M285.924,-113.263C255.239,-104.159 204.005,-88.9575 168.688,-78.479"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="169.313,-75.0135 158.73,-75.5243 167.322,-81.7243 169.313,-75.0135"/>
+</g>
+<!-- Node4 -->
+<g id="node4" class="node"><title>Node4</title>
+<polygon fill="white" stroke="#bfbfbf" points="186,-56.5 186,-75.5 252,-75.5 252,-56.5 186,-56.5"/>
+<text text-anchor="middle" x="219" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">linux/slab.h</text>
+</g>
+<!-- Node1&#45;&gt;Node4 -->
+<g id="edge3" class="edge"><title>Node1&#45;&gt;Node4</title>
+<path fill="none" stroke="midnightblue" d="M297.058,-112.324C282.415,-103.822 259.866,-90.7288 242.762,-80.7975"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="244.31,-77.6491 233.905,-75.6545 240.795,-83.7027 244.31,-77.6491"/>
+</g>
+<!-- Node5 -->
+<g id="node5" class="node"><title>Node5</title>
+<polygon fill="white" stroke="#bfbfbf" points="263,-0.5 263,-19.5 333,-19.5 333,-0.5 263,-0.5"/>
+<text text-anchor="middle" x="298" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">linux/gmtp.h</text>
+</g>
+<!-- Node1&#45;&gt;Node5 -->
+<g id="edge4" class="edge"><title>Node1&#45;&gt;Node5</title>
+<path fill="none" stroke="midnightblue" d="M308.698,-112.191C305.52,-103.229 300.923,-88.8683 299,-76 296.704,-60.6328 296.588,-42.9955 296.972,-29.974"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="300.473,-30.0302 297.395,-19.8921 293.479,-29.7365 300.473,-30.0302"/>
+</g>
+<!-- Node6 -->
+<g id="node6" class="node"><title>Node6</title>
+<polygon fill="white" stroke="#bfbfbf" points="308,-56.5 308,-75.5 380,-75.5 380,-56.5 308,-56.5"/>
+<text text-anchor="middle" x="344" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">linux/types.h</text>
+</g>
+<!-- Node1&#45;&gt;Node6 -->
+<g id="edge5" class="edge"><title>Node1&#45;&gt;Node6</title>
+<path fill="none" stroke="midnightblue" d="M317.284,-112.083C321.711,-104.613 328.163,-93.7244 333.618,-84.5199"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="336.727,-86.1383 338.814,-75.7511 330.705,-82.5697 336.727,-86.1383"/>
+</g>
+<!-- Node7 -->
+<g id="node7" class="node"><title>Node7</title>
+<polygon fill="white" stroke="#bfbfbf" points="398.5,-56.5 398.5,-75.5 481.5,-75.5 481.5,-56.5 398.5,-56.5"/>
+<text text-anchor="middle" x="440" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/inet_sock.h</text>
+</g>
+<!-- Node1&#45;&gt;Node7 -->
+<g id="edge6" class="edge"><title>Node1&#45;&gt;Node7</title>
+<path fill="none" stroke="midnightblue" d="M332.282,-112.444C353.347,-103.557 386.517,-89.5632 410.486,-79.4514"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="411.96,-82.6283 419.813,-75.5164 409.239,-76.1787 411.96,-82.6283"/>
+</g>
+<!-- Node8 -->
+<g id="node8" class="node"><title>Node8</title>
+<polygon fill="white" stroke="#bfbfbf" points="500,-56.5 500,-75.5 562,-75.5 562,-56.5 500,-56.5"/>
+<text text-anchor="middle" x="531" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/sock.h</text>
+</g>
+<!-- Node1&#45;&gt;Node8 -->
+<g id="edge7" class="edge"><title>Node1&#45;&gt;Node8</title>
+<path fill="none" stroke="midnightblue" d="M338.417,-114.486C376.095,-105.196 445.614,-88.0542 490.012,-77.1066"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="491.032,-80.46 499.903,-74.6677 489.356,-73.6636 491.032,-80.46"/>
+</g>
+<!-- Node9 -->
+<g id="node9" class="node"><title>Node9</title>
+<g id="a_node9"><a xlink:href="gmtp_8h.html" target="_top" xlink:title="gmtp.h">
+<polygon fill="white" stroke="black" points="580.5,-56.5 580.5,-75.5 627.5,-75.5 627.5,-56.5 580.5,-56.5"/>
+<text text-anchor="middle" x="604" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp.h</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node9 -->
+<g id="edge8" class="edge"><title>Node1&#45;&gt;Node9</title>
+<path fill="none" stroke="midnightblue" d="M338.262,-117.274C383.573,-110.666 479.523,-95.8889 570.366,-75.9572"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="571.27,-79.3419 580.274,-73.758 569.753,-72.5083 571.27,-79.3419"/>
+</g>
+<!-- Node9&#45;&gt;Node5 -->
+<g id="edge12" class="edge"><title>Node9&#45;&gt;Node5</title>
+<path fill="none" stroke="midnightblue" d="M580.279,-58.2171C577.17,-57.4204 574.017,-56.6582 571,-56 491.418,-38.6371 397.483,-24.5321 343.127,-16.9871"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="343.509,-13.5067 333.125,-15.6109 342.555,-20.4414 343.509,-13.5067"/>
+</g>
+<!-- Node10 -->
+<g id="node10" class="node"><title>Node10</title>
+<polygon fill="white" stroke="#bfbfbf" points="387.5,-0.5 387.5,-19.5 512.5,-19.5 512.5,-0.5 387.5,-0.5"/>
+<text text-anchor="middle" x="450" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/inet_timewait_sock.h</text>
+</g>
+<!-- Node9&#45;&gt;Node10 -->
+<g id="edge9" class="edge"><title>Node9&#45;&gt;Node10</title>
+<path fill="none" stroke="midnightblue" d="M580.275,-56.6808C554.539,-47.6564 513.228,-33.1709 484.035,-22.9345"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="484.855,-19.5131 474.26,-19.5069 482.539,-26.1188 484.855,-19.5131"/>
+</g>
+<!-- Node11 -->
+<g id="node11" class="node"><title>Node11</title>
+<polygon fill="white" stroke="#bfbfbf" points="531,-0.5 531,-19.5 641,-19.5 641,-0.5 531,-0.5"/>
+<text text-anchor="middle" x="586" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/inet_hashtables.h</text>
+</g>
+<!-- Node9&#45;&gt;Node11 -->
+<g id="edge10" class="edge"><title>Node9&#45;&gt;Node11</title>
+<path fill="none" stroke="midnightblue" d="M601.028,-56.083C598.616,-48.8486 595.136,-38.4087 592.132,-29.3968"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="595.4,-28.1311 588.917,-19.7511 588.759,-30.3447 595.4,-28.1311"/>
+</g>
+<!-- Node12 -->
+<g id="node12" class="node"><title>Node12</title>
+<polygon fill="white" stroke="#bfbfbf" points="659,-0.5 659,-19.5 783,-19.5 783,-0.5 659,-0.5"/>
+<text text-anchor="middle" x="721" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">uapi/asm&#45;generic/errno.h</text>
+</g>
+<!-- Node9&#45;&gt;Node12 -->
+<g id="edge11" class="edge"><title>Node9&#45;&gt;Node12</title>
+<path fill="none" stroke="midnightblue" d="M622.539,-56.4435C641.623,-47.6356 671.575,-33.8116 693.436,-23.722"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="694.935,-26.8849 702.548,-19.5164 692.001,-20.5292 694.935,-26.8849"/>
+</g>
+<!-- Node13 -->
+<g id="node13" class="node"><title>Node13</title>
+<polygon fill="white" stroke="#bfbfbf" points="801,-0.5 801,-19.5 891,-19.5 891,-0.5 801,-0.5"/>
+<text text-anchor="middle" x="846" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/netns/gmtp.h</text>
+</g>
+<!-- Node9&#45;&gt;Node13 -->
+<g id="edge13" class="edge"><title>Node9&#45;&gt;Node13</title>
+<path fill="none" stroke="midnightblue" d="M627.645,-59.7239C666.892,-50.9662 746.257,-33.2568 797.72,-21.7731"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="798.623,-25.1578 807.621,-19.5639 797.099,-18.3258 798.623,-25.1578"/>
+</g>
+</g>
+</svg>
diff --git a/linux-3.17.1/net/gmtp/doc/html/output_8c_a2df4bd07928440434f3ffc5e9a99e192_icgraph.map b/linux-3.17.1/net/gmtp/doc/html/output_8c_a2df4bd07928440434f3ffc5e9a99e192_icgraph.map
new file mode 100644
index 0000000..5321503
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/output_8c_a2df4bd07928440434f3ffc5e9a99e192_icgraph.map
@@ -0,0 +1,3 @@
+<map id="G" name="G">
+<area shape="rect" id="node2" href="$ipv4_8c.html#a3d651b3671bf86675ce95fb92228b6a3" title="gmtp_v4_connect" alt="" coords="157,5,283,32"/>
+</map>
diff --git a/linux-3.17.1/net/gmtp/doc/html/output_8c_a2df4bd07928440434f3ffc5e9a99e192_icgraph.md5 b/linux-3.17.1/net/gmtp/doc/html/output_8c_a2df4bd07928440434f3ffc5e9a99e192_icgraph.md5
new file mode 100644
index 0000000..4173001
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/output_8c_a2df4bd07928440434f3ffc5e9a99e192_icgraph.md5
@@ -0,0 +1 @@
+f0c7eb86baaf47747a7203c9d59f6743
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/html/output_8c_a2df4bd07928440434f3ffc5e9a99e192_icgraph.svg b/linux-3.17.1/net/gmtp/doc/html/output_8c_a2df4bd07928440434f3ffc5e9a99e192_icgraph.svg
new file mode 100644
index 0000000..3c6ae5a
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/output_8c_a2df4bd07928440434f3ffc5e9a99e192_icgraph.svg
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
+ "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Generated by graphviz version 2.38.0 (20140413.2041)
+ -->
+<!-- Title: G Pages: 1 -->
+<svg width="216pt" height="28pt"
+ viewBox="0.00 0.00 216.00 28.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 24)">
+<title>G</title>
+<polygon fill="white" stroke="none" points="-4,4 -4,-24 212,-24 212,4 -4,4"/>
+<!-- Node1 -->
+<g id="node1" class="node"><title>Node1</title>
+<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-19.5 78,-19.5 78,-0.5 0,-0.5"/>
+<text text-anchor="middle" x="39" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_connect</text>
+</g>
+<!-- Node2 -->
+<g id="node2" class="node"><title>Node2</title>
+<g id="a_node2"><a xlink:href="ipv4_8c.html#a3d651b3671bf86675ce95fb92228b6a3" target="_top" xlink:title="gmtp_v4_connect">
+<polygon fill="white" stroke="black" points="114,-0.5 114,-19.5 208,-19.5 208,-0.5 114,-0.5"/>
+<text text-anchor="middle" x="161" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_v4_connect</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node2 -->
+<g id="edge1" class="edge"><title>Node1&#45;&gt;Node2</title>
+<path fill="none" stroke="midnightblue" d="M88.3024,-10C96.6699,-10 105.353,-10 113.667,-10"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="88.2987,-6.5001 78.2987,-10 88.2986,-13.5001 88.2987,-6.5001"/>
+</g>
+</g>
+</svg>
diff --git a/linux-3.17.1/net/gmtp/doc/html/proto_8c.html b/linux-3.17.1/net/gmtp/doc/html/proto_8c.html
new file mode 100644
index 0000000..8e752c6
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/proto_8c.html
@@ -0,0 +1,1025 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<meta http-equiv="X-UA-Compatible" content="IE=9"/>
+<title>gmtp: proto.c File Reference</title>
+<link href="tabs.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="jquery.js"></script>
+<script type="text/javascript" src="dynsections.js"></script>
+<link href="search/search.css" rel="stylesheet" type="text/css"/>
+<script type="text/javascript" src="search/search.js"></script>
+<script type="text/javascript">
+  $(document).ready(function() { searchBox.OnSelectItem(0); });
+</script>
+<link href="doxygen.css" rel="stylesheet" type="text/css" />
+</head>
+<body>
+<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
+<div id="titlearea">
+<table cellspacing="0" cellpadding="0">
+ <tbody>
+ <tr style="height: 56px;">
+  <td style="padding-left: 0.5em;">
+   <div id="projectname">gmtp
+   </div>
+  </td>
+ </tr>
+ </tbody>
+</table>
+</div>
+<!-- end header part -->
+<!-- Generated by Doxygen 1.8.1.1 -->
+<script type="text/javascript">
+var searchBox = new SearchBox("searchBox", "search",false,'Search');
+</script>
+  <div id="navrow1" class="tabs">
+    <ul class="tablist">
+      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
+      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
+      <li class="current"><a href="files.html"><span>Files</span></a></li>
+      <li>
+        <div id="MSearchBox" class="MSearchBoxInactive">
+        <span class="left">
+          <img id="MSearchSelect" src="search/mag_sel.png"
+               onmouseover="return searchBox.OnSearchSelectShow()"
+               onmouseout="return searchBox.OnSearchSelectHide()"
+               alt=""/>
+          <input type="text" id="MSearchField" value="Search" accesskey="S"
+               onfocus="searchBox.OnSearchFieldFocus(true)" 
+               onblur="searchBox.OnSearchFieldFocus(false)" 
+               onkeyup="searchBox.OnSearchFieldChange(event)"/>
+          </span><span class="right">
+            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
+          </span>
+        </div>
+      </li>
+    </ul>
+  </div>
+  <div id="navrow2" class="tabs2">
+    <ul class="tablist">
+      <li><a href="files.html"><span>File&#160;List</span></a></li>
+      <li><a href="globals.html"><span>Globals</span></a></li>
+    </ul>
+  </div>
+<!-- window showing the filter options -->
+<div id="MSearchSelectWindow"
+     onmouseover="return searchBox.OnSearchSelectShow()"
+     onmouseout="return searchBox.OnSearchSelectHide()"
+     onkeydown="return searchBox.OnSearchSelectKey(event)">
+<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a></div>
+
+<!-- iframe showing the search results (closed by default) -->
+<div id="MSearchResultsWindow">
+<iframe src="javascript:void(0)" frameborder="0" 
+        name="MSearchResults" id="MSearchResults">
+</iframe>
+</div>
+
+</div><!-- top -->
+<div class="header">
+  <div class="summary">
+<a href="#func-members">Functions</a> &#124;
+<a href="#var-members">Variables</a>  </div>
+  <div class="headertitle">
+<div class="title">proto.c File Reference</div>  </div>
+</div><!--header-->
+<div class="contents">
+<div class="textblock"><code>#include &lt;asm/ioctls.h&gt;</code><br/>
+<code>#include &lt;linux/init.h&gt;</code><br/>
+<code>#include &lt;linux/module.h&gt;</code><br/>
+<code>#include &lt;linux/types.h&gt;</code><br/>
+<code>#include &lt;net/inet_hashtables.h&gt;</code><br/>
+<code>#include &lt;net/sock.h&gt;</code><br/>
+<code>#include &quot;<a class="el" href="gmtp_8h_source.html">gmtp.h</a>&quot;</code><br/>
+</div><div class="textblock"><div class="dynheader">
+Include dependency graph for proto.c:</div>
+<div class="dyncontent">
+<div class="center"><iframe scrolling="no" frameborder="0" src="proto_8c__incl.svg" width="1166" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
+</div>
+</div><table class="memberdecls">
+<tr class="heading"><td colspan="2"><h2><a name="func-members"></a>
+Functions</h2></td></tr>
+<tr class="memitem:a55eca9800ebea2d452379b6c957e1ae0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a55eca9800ebea2d452379b6c957e1ae0">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#ab43beb876bb256a2f539107b7f589c44">gmtp_hashinfo</a>)</td></tr>
+<tr class="memitem:ab79c6a01f15a2d7a57c601da48518b94"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#ab79c6a01f15a2d7a57c601da48518b94">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#a304672a5f2e443d5c24f0c7d520a2299">gmtp_death_row</a>)</td></tr>
+<tr class="memitem:a232988d276bf40d7c15be1fcd7af9d83"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a232988d276bf40d7c15be1fcd7af9d83">module_param</a> (thash_entries, int, 0444)</td></tr>
+<tr class="memitem:ad4e09849d2bc32d70e247bc5172fcf8b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#ad4e09849d2bc32d70e247bc5172fcf8b">MODULE_PARM_DESC</a> (thash_entries,&quot;Number of ehash buckets&quot;)</td></tr>
+<tr class="memitem:a9984b8752cb8758660297cce25f6dd54"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a9984b8752cb8758660297cce25f6dd54">gmtp_packet_name</a> (const int type)</td></tr>
+<tr class="memitem:a022de102dea8fa0d856b0250705464b7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a022de102dea8fa0d856b0250705464b7">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#a9984b8752cb8758660297cce25f6dd54">gmtp_packet_name</a>)</td></tr>
+<tr class="memitem:a2c20286d5df6e6774719d719be9d3a13"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a2c20286d5df6e6774719d719be9d3a13">gmtp_set_state</a> (struct sock *sk, const int state)</td></tr>
+<tr class="memitem:a7f4fc2baaa902bf0faa4b08718ca48c9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a7f4fc2baaa902bf0faa4b08718ca48c9">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#a2c20286d5df6e6774719d719be9d3a13">gmtp_set_state</a>)</td></tr>
+<tr class="memitem:a1c872c8a33008e99befdb297a6518e03"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a1c872c8a33008e99befdb297a6518e03">gmtp_init_sock</a> (struct sock *sk, const __u8 ctl_sock_initialized)</td></tr>
+<tr class="memitem:a43dd2bf3cf0ea29dc62991109832cf66"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a43dd2bf3cf0ea29dc62991109832cf66">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#a1c872c8a33008e99befdb297a6518e03">gmtp_init_sock</a>)</td></tr>
+<tr class="memitem:ada146a75c7595313fda4021b3d64f2af"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#ada146a75c7595313fda4021b3d64f2af">gmtp_destroy_sock</a> (struct sock *sk)</td></tr>
+<tr class="memitem:a71c81285d972adbb9dac3c2901474913"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a71c81285d972adbb9dac3c2901474913">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#ada146a75c7595313fda4021b3d64f2af">gmtp_destroy_sock</a>)</td></tr>
+<tr class="memitem:aa43e6c6314b0b836ffb2616535879838"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#aa43e6c6314b0b836ffb2616535879838">inet_gmtp_listen</a> (struct socket *sock, int backlog)</td></tr>
+<tr class="memitem:a5e92e64108425c3efcfedafe042b69f5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a5e92e64108425c3efcfedafe042b69f5">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#aa43e6c6314b0b836ffb2616535879838">inet_gmtp_listen</a>)</td></tr>
+<tr class="memitem:a59f856ab28c13b885fbe2c38f7a70a87"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a59f856ab28c13b885fbe2c38f7a70a87">gmtp_close</a> (struct sock *sk, long timeout)</td></tr>
+<tr class="memitem:a62309d17a84cfca80bd5ed64f792b81d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a62309d17a84cfca80bd5ed64f792b81d">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#a59f856ab28c13b885fbe2c38f7a70a87">gmtp_close</a>)</td></tr>
+<tr class="memitem:a8dacfb87447f165efac077aa907a8e27"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a8dacfb87447f165efac077aa907a8e27">gmtp_disconnect</a> (struct sock *sk, int flags)</td></tr>
+<tr class="memitem:a58189c4b73a9797678c889b711c43370"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a58189c4b73a9797678c889b711c43370">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#a8dacfb87447f165efac077aa907a8e27">gmtp_disconnect</a>)</td></tr>
+<tr class="memitem:ab9bd011833dc85384f4d3c6e5c29f6de"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#ab9bd011833dc85384f4d3c6e5c29f6de">gmtp_ioctl</a> (struct sock *sk, int cmd, unsigned long arg)</td></tr>
+<tr class="memitem:aff3994d7b921e54bf48117ad68260008"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#aff3994d7b921e54bf48117ad68260008">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#ab9bd011833dc85384f4d3c6e5c29f6de">gmtp_ioctl</a>)</td></tr>
+<tr class="memitem:a789192a2299f8f626e034ad9c87d99b2"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a789192a2299f8f626e034ad9c87d99b2">gmtp_getsockopt</a> (struct sock *sk, int level, int optname, char __user *optval, int __user *optlen)</td></tr>
+<tr class="memitem:a0c2d8183d16404af5ecc36d7f369d40c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a0c2d8183d16404af5ecc36d7f369d40c">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#a789192a2299f8f626e034ad9c87d99b2">gmtp_getsockopt</a>)</td></tr>
+<tr class="memitem:a76ebcaaace625859ee741e890d7e7da7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a76ebcaaace625859ee741e890d7e7da7">gmtp_sendmsg</a> (struct kiocb *iocb, struct sock *sk, struct msghdr *msg, size_t size)</td></tr>
+<tr class="memitem:a7aa55ae25e24baeabffdcae359c65699"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a7aa55ae25e24baeabffdcae359c65699">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#a76ebcaaace625859ee741e890d7e7da7">gmtp_sendmsg</a>)</td></tr>
+<tr class="memitem:aa5511c6bf84a1956f308ce920a134c29"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#aa5511c6bf84a1956f308ce920a134c29">gmtp_setsockopt</a> (struct sock *sk, int level, int optname, char __user *optval, unsigned int optlen)</td></tr>
+<tr class="memitem:a06f8bada3169d9f63b013280475ee6f0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a06f8bada3169d9f63b013280475ee6f0">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#aa5511c6bf84a1956f308ce920a134c29">gmtp_setsockopt</a>)</td></tr>
+<tr class="memitem:a462ae3f8dd122bdee2af7fd115694db4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a462ae3f8dd122bdee2af7fd115694db4">gmtp_recvmsg</a> (struct kiocb *iocb, struct sock *sk, struct msghdr *msg, size_t len, int nonblock, int flags, int *addr_len)</td></tr>
+<tr class="memitem:a828a1602037d7a1e44abcc0756010e79"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a828a1602037d7a1e44abcc0756010e79">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#a462ae3f8dd122bdee2af7fd115694db4">gmtp_recvmsg</a>)</td></tr>
+<tr class="memitem:ad87dbd137414cabb75038daf5d227af2"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#ad87dbd137414cabb75038daf5d227af2">gmtp_do_rcv</a> (struct sock *sk, struct sk_buff *skb)</td></tr>
+<tr class="memitem:a0530c0aaec158dfb00d2ab15a71c6571"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a0530c0aaec158dfb00d2ab15a71c6571">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#ad87dbd137414cabb75038daf5d227af2">gmtp_do_rcv</a>)</td></tr>
+<tr class="memitem:ae74ac6585ac8e29b98e916f4f29ae3f0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#ae74ac6585ac8e29b98e916f4f29ae3f0">gmtp_shutdown</a> (struct sock *sk, int how)</td></tr>
+<tr class="memitem:a457458302de4290b0602c55c7b619ea0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a457458302de4290b0602c55c7b619ea0">EXPORT_SYMBOL_GPL</a> (<a class="el" href="proto_8c.html#ae74ac6585ac8e29b98e916f4f29ae3f0">gmtp_shutdown</a>)</td></tr>
+<tr class="memitem:a8fe804f33b35ccae3b8c82bee513b750"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a8fe804f33b35ccae3b8c82bee513b750">module_init</a> (gmtp_init)</td></tr>
+<tr class="memitem:a9761956e9851cccd3f1c40d2a6b0fcdd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a9761956e9851cccd3f1c40d2a6b0fcdd">module_exit</a> (gmtp_exit)</td></tr>
+<tr class="memitem:ad94b36675e7eb067ea3ce6ff9e244a44"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#ad94b36675e7eb067ea3ce6ff9e244a44">MODULE_LICENSE</a> (&quot;GPL&quot;)</td></tr>
+<tr class="memitem:ae540d1ed034c92753f40dcc69dc8081b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#ae540d1ed034c92753f40dcc69dc8081b">MODULE_AUTHOR</a> (&quot;Wendell Silva Soares &lt;wss@ic.ufal.br&gt;&quot;)</td></tr>
+<tr class="memitem:a81aa4475647c79e5e7d0050d75deda0b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a81aa4475647c79e5e7d0050d75deda0b">MODULE_DESCRIPTION</a> (&quot;GMTP - Global Media Transmission Protocol&quot;)</td></tr>
+</table><table class="memberdecls">
+<tr class="heading"><td colspan="2"><h2><a name="var-members"></a>
+Variables</h2></td></tr>
+<tr class="memitem:ab43beb876bb256a2f539107b7f589c44"><td class="memItemLeft" align="right" valign="top">struct inet_hashinfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#ab43beb876bb256a2f539107b7f589c44">gmtp_hashinfo</a></td></tr>
+<tr class="memitem:a304672a5f2e443d5c24f0c7d520a2299"><td class="memItemLeft" align="right" valign="top">struct inet_timewait_death_row&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="proto_8c.html#a304672a5f2e443d5c24f0c7d520a2299">gmtp_death_row</a></td></tr>
+</table>
+<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
+<div class="textblock"></div><hr/><h2>Function Documentation</h2>
+<a class="anchor" id="a55eca9800ebea2d452379b6c957e1ae0"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#ab43beb876bb256a2f539107b7f589c44">gmtp_hashinfo</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ab79c6a01f15a2d7a57c601da48518b94"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#a304672a5f2e443d5c24f0c7d520a2299">gmtp_death_row</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a022de102dea8fa0d856b0250705464b7"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#a9984b8752cb8758660297cce25f6dd54">gmtp_packet_name</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a7f4fc2baaa902bf0faa4b08718ca48c9"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#a2c20286d5df6e6774719d719be9d3a13">gmtp_set_state</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a43dd2bf3cf0ea29dc62991109832cf66"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#a1c872c8a33008e99befdb297a6518e03">gmtp_init_sock</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a71c81285d972adbb9dac3c2901474913"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#ada146a75c7595313fda4021b3d64f2af">gmtp_destroy_sock</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a5e92e64108425c3efcfedafe042b69f5"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#aa43e6c6314b0b836ffb2616535879838">inet_gmtp_listen</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a62309d17a84cfca80bd5ed64f792b81d"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#a59f856ab28c13b885fbe2c38f7a70a87">gmtp_close</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a58189c4b73a9797678c889b711c43370"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#a8dacfb87447f165efac077aa907a8e27">gmtp_disconnect</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="aff3994d7b921e54bf48117ad68260008"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#ab9bd011833dc85384f4d3c6e5c29f6de">gmtp_ioctl</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a0c2d8183d16404af5ecc36d7f369d40c"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#a789192a2299f8f626e034ad9c87d99b2">gmtp_getsockopt</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a7aa55ae25e24baeabffdcae359c65699"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#a76ebcaaace625859ee741e890d7e7da7">gmtp_sendmsg</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a06f8bada3169d9f63b013280475ee6f0"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#aa5511c6bf84a1956f308ce920a134c29">gmtp_setsockopt</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a828a1602037d7a1e44abcc0756010e79"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#a462ae3f8dd122bdee2af7fd115694db4">gmtp_recvmsg</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a0530c0aaec158dfb00d2ab15a71c6571"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#ad87dbd137414cabb75038daf5d227af2">gmtp_do_rcv</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a457458302de4290b0602c55c7b619ea0"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">EXPORT_SYMBOL_GPL </td>
+          <td>(</td>
+          <td class="paramtype"><a class="el" href="proto_8c.html#ae74ac6585ac8e29b98e916f4f29ae3f0">gmtp_shutdown</a>&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a59f856ab28c13b885fbe2c38f7a70a87"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">void gmtp_close </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">long&#160;</td>
+          <td class="paramname"><em>timeout</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ada146a75c7595313fda4021b3d64f2af"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">void gmtp_destroy_sock </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a8dacfb87447f165efac077aa907a8e27"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_disconnect </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>flags</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ad87dbd137414cabb75038daf5d227af2"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_do_rcv </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct sk_buff *&#160;</td>
+          <td class="paramname"><em>skb</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a789192a2299f8f626e034ad9c87d99b2"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_getsockopt </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>level</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>optname</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">char __user *&#160;</td>
+          <td class="paramname"><em>optval</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int __user *&#160;</td>
+          <td class="paramname"><em>optlen</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a1c872c8a33008e99befdb297a6518e03"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_init_sock </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">const __u8&#160;</td>
+          <td class="paramname"><em>ctl_sock_initialized</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ab9bd011833dc85384f4d3c6e5c29f6de"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_ioctl </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>cmd</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">unsigned long&#160;</td>
+          <td class="paramname"><em>arg</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a9984b8752cb8758660297cce25f6dd54"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">const char* gmtp_packet_name </td>
+          <td>(</td>
+          <td class="paramtype">const int&#160;</td>
+          <td class="paramname"><em>type</em></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a462ae3f8dd122bdee2af7fd115694db4"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_recvmsg </td>
+          <td>(</td>
+          <td class="paramtype">struct kiocb *&#160;</td>
+          <td class="paramname"><em>iocb</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct msghdr *&#160;</td>
+          <td class="paramname"><em>msg</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">size_t&#160;</td>
+          <td class="paramname"><em>len</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>nonblock</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>flags</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int *&#160;</td>
+          <td class="paramname"><em>addr_len</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a76ebcaaace625859ee741e890d7e7da7"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_sendmsg </td>
+          <td>(</td>
+          <td class="paramtype">struct kiocb *&#160;</td>
+          <td class="paramname"><em>iocb</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">struct msghdr *&#160;</td>
+          <td class="paramname"><em>msg</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">size_t&#160;</td>
+          <td class="paramname"><em>size</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a2c20286d5df6e6774719d719be9d3a13"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">void gmtp_set_state </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">const int&#160;</td>
+          <td class="paramname"><em>state</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+<p><div class="dynheader">
+Here is the caller graph for this function:</div>
+<div class="dyncontent">
+<div class="center"><iframe scrolling="no" frameborder="0" src="proto_8c_a2c20286d5df6e6774719d719be9d3a13_icgraph.svg" width="296" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
+</div>
+</p>
+
+</div>
+</div>
+<a class="anchor" id="aa5511c6bf84a1956f308ce920a134c29"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int gmtp_setsockopt </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>level</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>optname</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">char __user *&#160;</td>
+          <td class="paramname"><em>optval</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">unsigned int&#160;</td>
+          <td class="paramname"><em>optlen</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ae74ac6585ac8e29b98e916f4f29ae3f0"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">void gmtp_shutdown </td>
+          <td>(</td>
+          <td class="paramtype">struct sock *&#160;</td>
+          <td class="paramname"><em>sk</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>how</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="aa43e6c6314b0b836ffb2616535879838"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">int inet_gmtp_listen </td>
+          <td>(</td>
+          <td class="paramtype">struct socket *&#160;</td>
+          <td class="paramname"><em>sock</em>, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname"><em>backlog</em>&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ae540d1ed034c92753f40dcc69dc8081b"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">MODULE_AUTHOR </td>
+          <td>(</td>
+          <td class="paramtype">&quot;Wendell Silva Soares &lt;wss@ic.ufal.br&gt;&quot;&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a81aa4475647c79e5e7d0050d75deda0b"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">MODULE_DESCRIPTION </td>
+          <td>(</td>
+          <td class="paramtype">&quot;GMTP - Global Media Transmission Protocol&quot;&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a9761956e9851cccd3f1c40d2a6b0fcdd"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">module_exit </td>
+          <td>(</td>
+          <td class="paramtype">gmtp_exit&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a8fe804f33b35ccae3b8c82bee513b750"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">module_init </td>
+          <td>(</td>
+          <td class="paramtype">gmtp_init&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ad94b36675e7eb067ea3ce6ff9e244a44"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">MODULE_LICENSE </td>
+          <td>(</td>
+          <td class="paramtype">&quot;GPL&quot;&#160;</td>
+          <td class="paramname"></td><td>)</td>
+          <td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="a232988d276bf40d7c15be1fcd7af9d83"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">module_param </td>
+          <td>(</td>
+          <td class="paramtype">thash_entries&#160;</td>
+          <td class="paramname">, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">int&#160;</td>
+          <td class="paramname">, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">0444&#160;</td>
+          <td class="paramname">&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<a class="anchor" id="ad4e09849d2bc32d70e247bc5172fcf8b"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">MODULE_PARM_DESC </td>
+          <td>(</td>
+          <td class="paramtype">thash_entries&#160;</td>
+          <td class="paramname">, </td>
+        </tr>
+        <tr>
+          <td class="paramkey"></td>
+          <td></td>
+          <td class="paramtype">&quot;Number of ehash buckets&quot;&#160;</td>
+          <td class="paramname">&#160;</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td>)</td>
+          <td></td><td></td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+<hr/><h2>Variable Documentation</h2>
+<a class="anchor" id="a304672a5f2e443d5c24f0c7d520a2299"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">struct inet_timewait_death_row gmtp_death_row</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+<b>Initial value:</b><div class="fragment"><div class="line"> {</div>
+<div class="line">        .sysctl_max_tw_buckets = NR_FILE * 2,</div>
+<div class="line">        .period         = <a class="code" href="gmtp_8h.html#a86aa8330d1bef9cdb384dc6ef9738bcb">GMTP_TIMEWAIT_LEN</a> / INET_TWDR_TWKILL_SLOTS,</div>
+<div class="line">        .death_lock     = __SPIN_LOCK_UNLOCKED(gmpt_death_row.death_lock),</div>
+<div class="line">        .hashinfo       = &amp;<a class="code" href="gmtp_8h.html#ab43beb876bb256a2f539107b7f589c44">gmtp_hashinfo</a>,</div>
+<div class="line">        .tw_timer       = TIMER_INITIALIZER(inet_twdr_hangman, 0,</div>
+<div class="line">                                            (<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>)&amp;<a class="code" href="ipv4_8c.html#a304672a5f2e443d5c24f0c7d520a2299">gmtp_death_row</a>),</div>
+<div class="line">        .twkill_work    = __WORK_INITIALIZER(<a class="code" href="ipv4_8c.html#a304672a5f2e443d5c24f0c7d520a2299">gmtp_death_row</a>.twkill_work,</div>
+<div class="line">                                             inet_twdr_twkill_work),</div>
+<div class="line"></div>
+<div class="line"></div>
+<div class="line">        .twcal_hand     = -1,</div>
+<div class="line">        .twcal_timer    = TIMER_INITIALIZER(inet_twdr_twcal_tick, 0,</div>
+<div class="line">                                            (<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>)&amp;<a class="code" href="ipv4_8c.html#a304672a5f2e443d5c24f0c7d520a2299">gmtp_death_row</a>),</div>
+<div class="line">}</div>
+</div><!-- fragment -->
+</div>
+</div>
+<a class="anchor" id="ab43beb876bb256a2f539107b7f589c44"></a>
+<div class="memitem">
+<div class="memproto">
+      <table class="memname">
+        <tr>
+          <td class="memname">struct inet_hashinfo gmtp_hashinfo</td>
+        </tr>
+      </table>
+</div><div class="memdoc">
+
+</div>
+</div>
+</div><!-- contents -->
+<!-- start footer part -->
+<hr class="footer"/><address class="footer"><small>
+Generated on Thu Dec 18 2014 12:04:43 for gmtp by &#160;<a href="http://www.doxygen.org/index.html">
+<img class="footer" src="doxygen.png" alt="doxygen"/>
+</a> 1.8.1.1
+</small></address>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/proto_8c__incl.map b/linux-3.17.1/net/gmtp/doc/html/proto_8c__incl.map
new file mode 100644
index 0000000..e334820
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/proto_8c__incl.map
@@ -0,0 +1,3 @@
+<map id="G" name="G">
+<area shape="rect" id="node8" href="$gmtp_8h.html" title="gmtp.h" alt="" coords="735,80,798,107"/>
+</map>
diff --git a/linux-3.17.1/net/gmtp/doc/html/proto_8c__incl.md5 b/linux-3.17.1/net/gmtp/doc/html/proto_8c__incl.md5
new file mode 100644
index 0000000..0fb7659
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/proto_8c__incl.md5
@@ -0,0 +1 @@
+28c0c867d037ce9021feeb706e57d4b2
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/html/proto_8c__incl.svg b/linux-3.17.1/net/gmtp/doc/html/proto_8c__incl.svg
new file mode 100644
index 0000000..ab7a081
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/proto_8c__incl.svg
@@ -0,0 +1,136 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
+ "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Generated by graphviz version 2.38.0 (20140413.2041)
+ -->
+<!-- Title: G Pages: 1 -->
+<svg width="874pt" height="140pt"
+ viewBox="0.00 0.00 874.00 140.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 136)">
+<title>G</title>
+<polygon fill="white" stroke="none" points="-4,4 -4,-136 870,-136 870,4 -4,4"/>
+<!-- Node1 -->
+<g id="node1" class="node"><title>Node1</title>
+<polygon fill="#bfbfbf" stroke="black" points="278.5,-112.5 278.5,-131.5 325.5,-131.5 325.5,-112.5 278.5,-112.5"/>
+<text text-anchor="middle" x="302" y="-119.5" font-family="Helvetica,sans-Serif" font-size="10.00">proto.c</text>
+</g>
+<!-- Node2 -->
+<g id="node2" class="node"><title>Node2</title>
+<polygon fill="white" stroke="#bfbfbf" points="0,-56.5 0,-75.5 70,-75.5 70,-56.5 0,-56.5"/>
+<text text-anchor="middle" x="35" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">asm/ioctls.h</text>
+</g>
+<!-- Node1&#45;&gt;Node2 -->
+<g id="edge1" class="edge"><title>Node1&#45;&gt;Node2</title>
+<path fill="none" stroke="midnightblue" d="M278.233,-116.225C239.136,-108.367 158.542,-92.147 80.1109,-76.2217"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="80.5594,-72.7414 70.0627,-74.1806 79.1659,-79.6013 80.5594,-72.7414"/>
+</g>
+<!-- Node3 -->
+<g id="node3" class="node"><title>Node3</title>
+<polygon fill="white" stroke="#bfbfbf" points="88.5,-56.5 88.5,-75.5 149.5,-75.5 149.5,-56.5 88.5,-56.5"/>
+<text text-anchor="middle" x="119" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">linux/init.h</text>
+</g>
+<!-- Node1&#45;&gt;Node3 -->
+<g id="edge2" class="edge"><title>Node1&#45;&gt;Node3</title>
+<path fill="none" stroke="midnightblue" d="M278.451,-114.051C247.92,-105.042 194.267,-89.21 157.707,-78.4217"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="158.463,-74.9958 147.882,-75.5225 156.482,-81.7096 158.463,-74.9958"/>
+</g>
+<!-- Node4 -->
+<g id="node4" class="node"><title>Node4</title>
+<polygon fill="white" stroke="#bfbfbf" points="168,-56.5 168,-75.5 248,-75.5 248,-56.5 168,-56.5"/>
+<text text-anchor="middle" x="208" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">linux/module.h</text>
+</g>
+<!-- Node1&#45;&gt;Node4 -->
+<g id="edge3" class="edge"><title>Node1&#45;&gt;Node4</title>
+<path fill="none" stroke="midnightblue" d="M286.897,-112.324C272.097,-103.822 249.306,-90.7288 232.018,-80.7975"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="233.48,-77.6009 223.065,-75.6545 229.993,-83.6707 233.48,-77.6009"/>
+</g>
+<!-- Node5 -->
+<g id="node5" class="node"><title>Node5</title>
+<polygon fill="white" stroke="#bfbfbf" points="266,-56.5 266,-75.5 338,-75.5 338,-56.5 266,-56.5"/>
+<text text-anchor="middle" x="302" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">linux/types.h</text>
+</g>
+<!-- Node1&#45;&gt;Node5 -->
+<g id="edge4" class="edge"><title>Node1&#45;&gt;Node5</title>
+<path fill="none" stroke="midnightblue" d="M302,-112.083C302,-105.006 302,-94.8611 302,-85.9865"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="305.5,-85.751 302,-75.7511 298.5,-85.7511 305.5,-85.751"/>
+</g>
+<!-- Node6 -->
+<g id="node6" class="node"><title>Node6</title>
+<polygon fill="white" stroke="#bfbfbf" points="274,-0.5 274,-19.5 384,-19.5 384,-0.5 274,-0.5"/>
+<text text-anchor="middle" x="329" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/inet_hashtables.h</text>
+</g>
+<!-- Node1&#45;&gt;Node6 -->
+<g id="edge5" class="edge"><title>Node1&#45;&gt;Node6</title>
+<path fill="none" stroke="midnightblue" d="M315.064,-112.436C325.914,-104.471 340.573,-91.5154 347,-76 353.427,-60.4828 347.001,-41.9482 340.108,-28.649"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="342.955,-26.5771 334.95,-19.6362 336.879,-30.0539 342.955,-26.5771"/>
+</g>
+<!-- Node7 -->
+<g id="node7" class="node"><title>Node7</title>
+<polygon fill="white" stroke="#bfbfbf" points="394,-56.5 394,-75.5 456,-75.5 456,-56.5 394,-56.5"/>
+<text text-anchor="middle" x="425" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/sock.h</text>
+</g>
+<!-- Node1&#45;&gt;Node7 -->
+<g id="edge6" class="edge"><title>Node1&#45;&gt;Node7</title>
+<path fill="none" stroke="midnightblue" d="M321.49,-112.444C341.642,-103.596 373.323,-89.6875 396.331,-79.5865"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="397.852,-82.7411 405.601,-75.5164 395.038,-76.3316 397.852,-82.7411"/>
+</g>
+<!-- Node8 -->
+<g id="node8" class="node"><title>Node8</title>
+<g id="a_node8"><a xlink:href="gmtp_8h.html" target="_top" xlink:title="gmtp.h">
+<polygon fill="white" stroke="black" points="547.5,-56.5 547.5,-75.5 594.5,-75.5 594.5,-56.5 547.5,-56.5"/>
+<text text-anchor="middle" x="571" y="-63.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp.h</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node8 -->
+<g id="edge7" class="edge"><title>Node1&#45;&gt;Node8</title>
+<path fill="none" stroke="midnightblue" d="M325.872,-116.208C373.829,-106.581 481.99,-84.8682 537.197,-73.7856"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="538.066,-77.1812 547.182,-71.7814 536.688,-70.3181 538.066,-77.1812"/>
+</g>
+<!-- Node8&#45;&gt;Node6 -->
+<g id="edge9" class="edge"><title>Node8&#45;&gt;Node6</title>
+<path fill="none" stroke="midnightblue" d="M547.355,-59.7239C508.108,-50.9662 428.743,-33.2568 377.28,-21.7731"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="377.901,-18.3258 367.379,-19.5639 376.377,-25.1578 377.901,-18.3258"/>
+</g>
+<!-- Node9 -->
+<g id="node9" class="node"><title>Node9</title>
+<polygon fill="white" stroke="#bfbfbf" points="402.5,-0.5 402.5,-19.5 527.5,-19.5 527.5,-0.5 402.5,-0.5"/>
+<text text-anchor="middle" x="465" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/inet_timewait_sock.h</text>
+</g>
+<!-- Node8&#45;&gt;Node9 -->
+<g id="edge8" class="edge"><title>Node8&#45;&gt;Node9</title>
+<path fill="none" stroke="midnightblue" d="M553.969,-56.324C536.97,-47.6641 510.624,-34.2424 491.007,-24.249"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="492.488,-21.0752 481.988,-19.6545 489.31,-27.3125 492.488,-21.0752"/>
+</g>
+<!-- Node10 -->
+<g id="node10" class="node"><title>Node10</title>
+<polygon fill="white" stroke="#bfbfbf" points="546,-0.5 546,-19.5 670,-19.5 670,-0.5 546,-0.5"/>
+<text text-anchor="middle" x="608" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">uapi/asm&#45;generic/errno.h</text>
+</g>
+<!-- Node8&#45;&gt;Node10 -->
+<g id="edge10" class="edge"><title>Node8&#45;&gt;Node10</title>
+<path fill="none" stroke="midnightblue" d="M577.11,-56.083C582.282,-48.5341 589.846,-37.4948 596.194,-28.2298"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="599.239,-29.9787 602.004,-19.7511 593.464,-26.0221 599.239,-29.9787"/>
+</g>
+<!-- Node11 -->
+<g id="node11" class="node"><title>Node11</title>
+<polygon fill="white" stroke="#bfbfbf" points="688,-0.5 688,-19.5 758,-19.5 758,-0.5 688,-0.5"/>
+<text text-anchor="middle" x="723" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">linux/gmtp.h</text>
+</g>
+<!-- Node8&#45;&gt;Node11 -->
+<g id="edge11" class="edge"><title>Node8&#45;&gt;Node11</title>
+<path fill="none" stroke="midnightblue" d="M594.75,-56.5625C620.145,-47.5408 660.624,-33.1599 689.306,-22.9702"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="690.664,-26.2022 698.915,-19.5565 688.32,-19.6061 690.664,-26.2022"/>
+</g>
+<!-- Node12 -->
+<g id="node12" class="node"><title>Node12</title>
+<polygon fill="white" stroke="#bfbfbf" points="776,-0.5 776,-19.5 866,-19.5 866,-0.5 776,-0.5"/>
+<text text-anchor="middle" x="821" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">net/netns/gmtp.h</text>
+</g>
+<!-- Node8&#45;&gt;Node12 -->
+<g id="edge12" class="edge"><title>Node8&#45;&gt;Node12</title>
+<path fill="none" stroke="midnightblue" d="M594.519,-59.9198C634.829,-51.2129 717.935,-33.2619 771.488,-21.6946"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="772.419,-25.0743 781.455,-19.5418 770.941,-18.2321 772.419,-25.0743"/>
+</g>
+</g>
+</svg>
diff --git a/linux-3.17.1/net/gmtp/doc/html/proto_8c_a2c20286d5df6e6774719d719be9d3a13_icgraph.map b/linux-3.17.1/net/gmtp/doc/html/proto_8c_a2c20286d5df6e6774719d719be9d3a13_icgraph.map
new file mode 100644
index 0000000..bb5b94c
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/proto_8c_a2c20286d5df6e6774719d719be9d3a13_icgraph.map
@@ -0,0 +1,3 @@
+<map id="G" name="G">
+<area shape="rect" id="node2" href="$ipv4_8c.html#a3d651b3671bf86675ce95fb92228b6a3" title="gmtp_v4_connect" alt="" coords="165,5,291,32"/>
+</map>
diff --git a/linux-3.17.1/net/gmtp/doc/html/proto_8c_a2c20286d5df6e6774719d719be9d3a13_icgraph.md5 b/linux-3.17.1/net/gmtp/doc/html/proto_8c_a2c20286d5df6e6774719d719be9d3a13_icgraph.md5
new file mode 100644
index 0000000..278551d
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/proto_8c_a2c20286d5df6e6774719d719be9d3a13_icgraph.md5
@@ -0,0 +1 @@
+f6d745b65ec160aa4d8af64b0bd81d63
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/html/proto_8c_a2c20286d5df6e6774719d719be9d3a13_icgraph.svg b/linux-3.17.1/net/gmtp/doc/html/proto_8c_a2c20286d5df6e6774719d719be9d3a13_icgraph.svg
new file mode 100644
index 0000000..cf29caa
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/proto_8c_a2c20286d5df6e6774719d719be9d3a13_icgraph.svg
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
+ "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Generated by graphviz version 2.38.0 (20140413.2041)
+ -->
+<!-- Title: G Pages: 1 -->
+<svg width="222pt" height="28pt"
+ viewBox="0.00 0.00 222.00 28.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 24)">
+<title>G</title>
+<polygon fill="white" stroke="none" points="-4,4 -4,-24 218,-24 218,4 -4,4"/>
+<!-- Node1 -->
+<g id="node1" class="node"><title>Node1</title>
+<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-19.5 84,-19.5 84,-0.5 0,-0.5"/>
+<text text-anchor="middle" x="42" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_set_state</text>
+</g>
+<!-- Node2 -->
+<g id="node2" class="node"><title>Node2</title>
+<g id="a_node2"><a xlink:href="ipv4_8c.html#a3d651b3671bf86675ce95fb92228b6a3" target="_top" xlink:title="gmtp_v4_connect">
+<polygon fill="white" stroke="black" points="120,-0.5 120,-19.5 214,-19.5 214,-0.5 120,-0.5"/>
+<text text-anchor="middle" x="167" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">gmtp_v4_connect</text>
+</a>
+</g>
+</g>
+<!-- Node1&#45;&gt;Node2 -->
+<g id="edge1" class="edge"><title>Node1&#45;&gt;Node2</title>
+<path fill="none" stroke="midnightblue" d="M94.4435,-10C102.903,-10 111.623,-10 119.94,-10"/>
+<polygon fill="midnightblue" stroke="midnightblue" points="94.2994,-6.5001 84.2994,-10 94.2994,-13.5001 94.2994,-6.5001"/>
+</g>
+</g>
+</svg>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_5f.html b/linux-3.17.1/net/gmtp/doc/html/search/all_5f.html
new file mode 100644
index 0000000..1f27755
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_5f.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="all_5f.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_5f.js b/linux-3.17.1/net/gmtp/doc/html/search/all_5f.js
new file mode 100644
index 0000000..3ec5d44
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_5f.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['_5f_5fread_5fmostly',['__read_mostly',['../ipv4_8c.html#a32e197949743cd2e118c0724f2069d67',1,'ipv4.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_62.html b/linux-3.17.1/net/gmtp/doc/html/search/all_62.html
new file mode 100644
index 0000000..ee8871c
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_62.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="all_62.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_62.js b/linux-3.17.1/net/gmtp/doc/html/search/all_62.js
new file mode 100644
index 0000000..bbbdcd3
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_62.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['body',['body',['../input_8c.html#a14d48c2e9f05d0b03044eb45f308fcb0',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_63.html b/linux-3.17.1/net/gmtp/doc/html/search/all_63.html
new file mode 100644
index 0000000..56b5ad1
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_63.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="all_63.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_63.js b/linux-3.17.1/net/gmtp/doc/html/search/all_63.js
new file mode 100644
index 0000000..98e41cd
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_63.js
@@ -0,0 +1,5 @@
+var searchData=
+[
+  ['code',['code',['../input_8c.html#a8aac502ae7db0ae611e00082aa682158',1,'input.c']]],
+  ['coderef',['codeRef',['../input_8c.html#a31f1a4bde92d4c390bf0e584473ee0da',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_64.html b/linux-3.17.1/net/gmtp/doc/html/search/all_64.html
new file mode 100644
index 0000000..b53ff08
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_64.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="all_64.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_64.js b/linux-3.17.1/net/gmtp/doc/html/search/all_64.js
new file mode 100644
index 0000000..e92ad75
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_64.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['div',['div',['../input_8c.html#a00b49825eb9b4ffce1a4877d83ce126c',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_65.html b/linux-3.17.1/net/gmtp/doc/html/search/all_65.html
new file mode 100644
index 0000000..66cc834
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_65.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="all_65.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_65.js b/linux-3.17.1/net/gmtp/doc/html/search/all_65.js
new file mode 100644
index 0000000..ed0ea36
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_65.js
@@ -0,0 +1,5 @@
+var searchData=
+[
+  ['exception',['exception',['../input_8c.html#aec2b4fd1f327cbebb003cfc415e8bccb',1,'input.c']]],
+  ['export_5fsymbol_5fgpl',['EXPORT_SYMBOL_GPL',['../ipv4_8c.html#aba729ce082e122d7aec35777ade6e7fb',1,'EXPORT_SYMBOL_GPL(gmtp_v4_connect):&#160;ipv4.c'],['../ipv4_8c.html#a836df2e24d1d747e76c1839b38627b1d',1,'EXPORT_SYMBOL_GPL(gmtp_v4_err):&#160;ipv4.c'],['../ipv4_8c.html#a81ef47c46ddfba18451d4e991c61996b',1,'EXPORT_SYMBOL_GPL(gmtp_v4_rcv):&#160;ipv4.c'],['../ipv4_8c.html#a0a0fd79e581d8bc33ebe57cfd4c6ee59',1,'EXPORT_SYMBOL_GPL(gmtp_v4_conn_request):&#160;ipv4.c'],['../ipv4_8c.html#a02a246e3f177672e943fa02d76c61792',1,'EXPORT_SYMBOL_GPL(gmtp_v4_do_rcv):&#160;ipv4.c'],['../output_8c.html#a8823c64d48b3edf631d90827fe8145a1',1,'EXPORT_SYMBOL_GPL(gmtp_connect):&#160;output.c'],['../output_8c.html#ab51c1008fc15439db56e838547dd798a',1,'EXPORT_SYMBOL_GPL(gmtp_make_response):&#160;output.c'],['../output_8c.html#af63283ab704f9c1e284327090204d962',1,'EXPORT_SYMBOL_GPL(gmtp_ctl_make_reset):&#160;output.c'],['../proto_8c.html#a55eca9800ebea2d452379b6c957e1ae0',1,'EXPORT_SYMBOL_GPL(gmtp_hashinfo):&#160;proto.c'],['../proto_8c.html#ab79c6a01f15a2d7a57c601da48518b94',1,'EXPORT_SYMBOL_GPL(gmtp_death_row):&#160;proto.c'],['../proto_8c.html#a022de102dea8fa0d856b0250705464b7',1,'EXPORT_SYMBOL_GPL(gmtp_packet_name):&#160;proto.c'],['../proto_8c.html#a7f4fc2baaa902bf0faa4b08718ca48c9',1,'EXPORT_SYMBOL_GPL(gmtp_set_state):&#160;proto.c'],['../proto_8c.html#a43dd2bf3cf0ea29dc62991109832cf66',1,'EXPORT_SYMBOL_GPL(gmtp_init_sock):&#160;proto.c'],['../proto_8c.html#a71c81285d972adbb9dac3c2901474913',1,'EXPORT_SYMBOL_GPL(gmtp_destroy_sock):&#160;proto.c'],['../proto_8c.html#a5e92e64108425c3efcfedafe042b69f5',1,'EXPORT_SYMBOL_GPL(inet_gmtp_listen):&#160;proto.c'],['../proto_8c.html#a62309d17a84cfca80bd5ed64f792b81d',1,'EXPORT_SYMBOL_GPL(gmtp_close):&#160;proto.c'],['../proto_8c.html#a58189c4b73a9797678c889b711c43370',1,'EXPORT_SYMBOL_GPL(gmtp_disconnect):&#160;proto.c'],['../proto_8c.html#aff3994d7b921e54bf48117ad68260008',1,'EXPORT_SYMBOL_GPL(gmtp_ioctl):&#160;proto.c'],['../proto_8c.html#a0c2d8183d16404af5ecc36d7f369d40c',1,'EXPORT_SYMBOL_GPL(gmtp_getsockopt):&#160;proto.c'],['../proto_8c.html#a7aa55ae25e24baeabffdcae359c65699',1,'EXPORT_SYMBOL_GPL(gmtp_sendmsg):&#160;proto.c'],['../proto_8c.html#a06f8bada3169d9f63b013280475ee6f0',1,'EXPORT_SYMBOL_GPL(gmtp_setsockopt):&#160;proto.c'],['../proto_8c.html#a828a1602037d7a1e44abcc0756010e79',1,'EXPORT_SYMBOL_GPL(gmtp_recvmsg):&#160;proto.c'],['../proto_8c.html#a0530c0aaec158dfb00d2ab15a71c6571',1,'EXPORT_SYMBOL_GPL(gmtp_do_rcv):&#160;proto.c'],['../proto_8c.html#a457458302de4290b0602c55c7b619ea0',1,'EXPORT_SYMBOL_GPL(gmtp_shutdown):&#160;proto.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_67.html b/linux-3.17.1/net/gmtp/doc/html/search/all_67.html
new file mode 100644
index 0000000..41a459a
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_67.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="all_67.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_67.js b/linux-3.17.1/net/gmtp/doc/html/search/all_67.js
new file mode 100644
index 0000000..8c42e11
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_67.js
@@ -0,0 +1,47 @@
+var searchData=
+[
+  ['glow',['glow',['../input_8c.html#a4e8818cd817685ac2ce39fc911f9d42f',1,'input.c']]],
+  ['gmtp_2eh',['gmtp.h',['../gmtp_8h.html',1,'']]],
+  ['gmtp_2emod_2ec',['gmtp.mod.c',['../gmtp_8mod_8c.html',1,'']]],
+  ['gmtp_5fclose',['gmtp_close',['../gmtp_8h.html#a59f856ab28c13b885fbe2c38f7a70a87',1,'gmtp_close(struct sock *sk, long timeout):&#160;proto.c'],['../proto_8c.html#a59f856ab28c13b885fbe2c38f7a70a87',1,'gmtp_close(struct sock *sk, long timeout):&#160;proto.c']]],
+  ['gmtp_5fconnect',['gmtp_connect',['../gmtp_8h.html#a2df4bd07928440434f3ffc5e9a99e192',1,'gmtp_connect(struct sock *sk):&#160;output.c'],['../output_8c.html#a2df4bd07928440434f3ffc5e9a99e192',1,'gmtp_connect(struct sock *sk):&#160;output.c']]],
+  ['gmtp_5fctl_5fmake_5freset',['gmtp_ctl_make_reset',['../gmtp_8h.html#a702ba25884e070b579dcfa4769260847',1,'gmtp_ctl_make_reset(struct sock *sk, struct sk_buff *rcv_skb):&#160;output.c'],['../output_8c.html#a702ba25884e070b579dcfa4769260847',1,'gmtp_ctl_make_reset(struct sock *sk, struct sk_buff *rcv_skb):&#160;output.c']]],
+  ['gmtp_5fdeath_5frow',['gmtp_death_row',['../ipv4_8c.html#a304672a5f2e443d5c24f0c7d520a2299',1,'gmtp_death_row():&#160;proto.c'],['../proto_8c.html#a304672a5f2e443d5c24f0c7d520a2299',1,'gmtp_death_row():&#160;proto.c']]],
+  ['gmtp_5fdestroy_5fsock',['gmtp_destroy_sock',['../gmtp_8h.html#ada146a75c7595313fda4021b3d64f2af',1,'gmtp_destroy_sock(struct sock *sk):&#160;proto.c'],['../proto_8c.html#ada146a75c7595313fda4021b3d64f2af',1,'gmtp_destroy_sock(struct sock *sk):&#160;proto.c']]],
+  ['gmtp_5fdisconnect',['gmtp_disconnect',['../gmtp_8h.html#a8dacfb87447f165efac077aa907a8e27',1,'gmtp_disconnect(struct sock *sk, int flags):&#160;proto.c'],['../proto_8c.html#a8dacfb87447f165efac077aa907a8e27',1,'gmtp_disconnect(struct sock *sk, int flags):&#160;proto.c']]],
+  ['gmtp_5fdo_5frcv',['gmtp_do_rcv',['../proto_8c.html#ad87dbd137414cabb75038daf5d227af2',1,'proto.c']]],
+  ['gmtp_5ferror',['GMTP_ERROR',['../gmtp_8h.html#a8f042630afadb776c9fe83ace47fac92',1,'gmtp.h']]],
+  ['gmtp_5fgetsockopt',['gmtp_getsockopt',['../gmtp_8h.html#a789192a2299f8f626e034ad9c87d99b2',1,'gmtp_getsockopt(struct sock *sk, int level, int optname, char __user *optval, int __user *optlen):&#160;proto.c'],['../proto_8c.html#a789192a2299f8f626e034ad9c87d99b2',1,'gmtp_getsockopt(struct sock *sk, int level, int optname, char __user *optval, int __user *optlen):&#160;proto.c']]],
+  ['gmtp_5fhashinfo',['gmtp_hashinfo',['../gmtp_8h.html#ab43beb876bb256a2f539107b7f589c44',1,'gmtp_hashinfo():&#160;proto.c'],['../proto_8c.html#ab43beb876bb256a2f539107b7f589c44',1,'gmtp_hashinfo():&#160;proto.c']]],
+  ['gmtp_5finfo',['GMTP_INFO',['../gmtp_8h.html#ac4d88ba4957c61fad1b1e81e86e26d25',1,'gmtp.h']]],
+  ['gmtp_5finit_5fsock',['gmtp_init_sock',['../gmtp_8h.html#a1c872c8a33008e99befdb297a6518e03',1,'gmtp_init_sock(struct sock *sk, const __u8 ctl_sock_initialized):&#160;proto.c'],['../proto_8c.html#a1c872c8a33008e99befdb297a6518e03',1,'gmtp_init_sock(struct sock *sk, const __u8 ctl_sock_initialized):&#160;proto.c']]],
+  ['gmtp_5finsert_5foptions',['gmtp_insert_options',['../gmtp_8h.html#a706d0cdecf4e871e347de22e69eed8ee',1,'gmtp.h']]],
+  ['gmtp_5finvalid_5fpacket',['gmtp_invalid_packet',['../ipv4_8c.html#ac0518e2de9174312756a485345984ba5',1,'ipv4.c']]],
+  ['gmtp_5fioctl',['gmtp_ioctl',['../gmtp_8h.html#ab9bd011833dc85384f4d3c6e5c29f6de',1,'gmtp_ioctl(struct sock *sk, int cmd, unsigned long arg):&#160;proto.c'],['../proto_8c.html#ab9bd011833dc85384f4d3c6e5c29f6de',1,'gmtp_ioctl(struct sock *sk, int cmd, unsigned long arg):&#160;proto.c']]],
+  ['gmtp_5fipv4_2emod_2ec',['gmtp_ipv4.mod.c',['../gmtp__ipv4_8mod_8c.html',1,'']]],
+  ['gmtp_5fmake_5fresponse',['gmtp_make_response',['../gmtp_8h.html#a8e94a84dd0d5b12f39df23b6c6ff005b',1,'gmtp_make_response(struct sock *sk, struct dst_entry *dst, struct request_sock *req):&#160;output.c'],['../output_8c.html#a8e94a84dd0d5b12f39df23b6c6ff005b',1,'gmtp_make_response(struct sock *sk, struct dst_entry *dst, struct request_sock *req):&#160;output.c']]],
+  ['gmtp_5forphan_5fcount',['gmtp_orphan_count',['../gmtp_8h.html#acab13337f0e829de92aa24505a723eae',1,'gmtp.h']]],
+  ['gmtp_5fpacket_5fname',['gmtp_packet_name',['../gmtp_8h.html#a181e0298f75786ee945b7dcd06adaf1b',1,'gmtp_packet_name(const int):&#160;proto.c'],['../proto_8c.html#a9984b8752cb8758660297cce25f6dd54',1,'gmtp_packet_name(const int type):&#160;proto.c']]],
+  ['gmtp_5fprint_5fdebug',['gmtp_print_debug',['../gmtp_8h.html#acb14405c3e3845ce630b3330c048d3e8',1,'gmtp.h']]],
+  ['gmtp_5fprint_5ferror',['gmtp_print_error',['../gmtp_8h.html#aef36831848715ac98879ce5642229e14',1,'gmtp.h']]],
+  ['gmtp_5fprint_5fwarning',['gmtp_print_warning',['../gmtp_8h.html#a4e56790f2f3dc1623fbd978467ac614d',1,'gmtp.h']]],
+  ['gmtp_5frcv_5festablished',['gmtp_rcv_established',['../gmtp_8h.html#a3d9324eca652acd36308327a06050473',1,'gmtp.h']]],
+  ['gmtp_5frcv_5fstate_5fprocess',['gmtp_rcv_state_process',['../gmtp_8h.html#a212e85de01d9dd2c64578b4a61020f18',1,'gmtp.h']]],
+  ['gmtp_5frecvmsg',['gmtp_recvmsg',['../gmtp_8h.html#a462ae3f8dd122bdee2af7fd115694db4',1,'gmtp_recvmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg, size_t len, int nonblock, int flags, int *addr_len):&#160;proto.c'],['../proto_8c.html#a462ae3f8dd122bdee2af7fd115694db4',1,'gmtp_recvmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg, size_t len, int nonblock, int flags, int *addr_len):&#160;proto.c']]],
+  ['gmtp_5fsendmsg',['gmtp_sendmsg',['../gmtp_8h.html#a76ebcaaace625859ee741e890d7e7da7',1,'gmtp_sendmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg, size_t size):&#160;proto.c'],['../proto_8c.html#a76ebcaaace625859ee741e890d7e7da7',1,'gmtp_sendmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg, size_t size):&#160;proto.c']]],
+  ['gmtp_5fset_5fstate',['gmtp_set_state',['../gmtp_8h.html#ad4d2e06e572fc5135a3a2636b629b8f2',1,'gmtp_set_state(struct sock *, const int):&#160;proto.c'],['../proto_8c.html#a2c20286d5df6e6774719d719be9d3a13',1,'gmtp_set_state(struct sock *sk, const int state):&#160;proto.c']]],
+  ['gmtp_5fsetsockopt',['gmtp_setsockopt',['../gmtp_8h.html#aa5511c6bf84a1956f308ce920a134c29',1,'gmtp_setsockopt(struct sock *sk, int level, int optname, char __user *optval, unsigned int optlen):&#160;proto.c'],['../proto_8c.html#aa5511c6bf84a1956f308ce920a134c29',1,'gmtp_setsockopt(struct sock *sk, int level, int optname, char __user *optval, unsigned int optlen):&#160;proto.c']]],
+  ['gmtp_5fshutdown',['gmtp_shutdown',['../gmtp_8h.html#ae74ac6585ac8e29b98e916f4f29ae3f0',1,'gmtp_shutdown(struct sock *sk, int how):&#160;proto.c'],['../proto_8c.html#ae74ac6585ac8e29b98e916f4f29ae3f0',1,'gmtp_shutdown(struct sock *sk, int how):&#160;proto.c']]],
+  ['gmtp_5fskb_5fcb',['gmtp_skb_cb',['../gmtp_8h.html#structgmtp__skb__cb',1,'gmtp_skb_cb'],['../gmtp_8h.html#a973dbe6c782d6d3a6b8fb1a2d15d0825',1,'GMTP_SKB_CB():&#160;gmtp.h']]],
+  ['gmtp_5ftimeout_5finit',['GMTP_TIMEOUT_INIT',['../gmtp_8h.html#a5b5fd1251f0fec5bc8dda21b11d57de4',1,'gmtp.h']]],
+  ['gmtp_5ftimewait_5flen',['GMTP_TIMEWAIT_LEN',['../gmtp_8h.html#a86aa8330d1bef9cdb384dc6ef9738bcb',1,'gmtp.h']]],
+  ['gmtp_5fv4_5fconn_5frequest',['gmtp_v4_conn_request',['../ipv4_8c.html#ac00f58e15e1908bc8f01439f25266cea',1,'ipv4.c']]],
+  ['gmtp_5fv4_5fconnect',['gmtp_v4_connect',['../gmtp_8h.html#a3d651b3671bf86675ce95fb92228b6a3',1,'gmtp_v4_connect(struct sock *sk, struct sockaddr *uaddr, int addr_len):&#160;ipv4.c'],['../ipv4_8c.html#a3d651b3671bf86675ce95fb92228b6a3',1,'gmtp_v4_connect(struct sock *sk, struct sockaddr *uaddr, int addr_len):&#160;ipv4.c']]],
+  ['gmtp_5fv4_5fdo_5frcv',['gmtp_v4_do_rcv',['../ipv4_8c.html#a96e77cd9da9396b4e3e9d2ca1bdd62ef',1,'ipv4.c']]],
+  ['gmtp_5fv4_5ferr',['gmtp_v4_err',['../ipv4_8c.html#a5257b59975805a2ab1fe3a97bc9a0f42',1,'ipv4.c']]],
+  ['gmtp_5fwarning',['GMTP_WARNING',['../gmtp_8h.html#a9bdaefac28c54404d5d18bf9f4df448f',1,'gmtp.h']]],
+  ['gmtpd_5freset_5fcode',['gmtpd_reset_code',['../gmtp_8h.html#a5f970494c68fc06c84823c233ed9d6a8',1,'gmtp_skb_cb']]],
+  ['gmtpd_5freset_5fdata',['gmtpd_reset_data',['../gmtp_8h.html#a766db441c404018311173c1171ef917a',1,'gmtp_skb_cb']]],
+  ['gmtpd_5fseq',['gmtpd_seq',['../gmtp_8h.html#ac2ed3bbe3289ce05b2fa7847c5e67da6',1,'gmtp_skb_cb']]],
+  ['gmtpd_5ftype',['gmtpd_type',['../gmtp_8h.html#a40635375f5d8223a8de70b79833c32c2',1,'gmtp_skb_cb']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_68.html b/linux-3.17.1/net/gmtp/doc/html/search/all_68.html
new file mode 100644
index 0000000..6df9097
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_68.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="all_68.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_68.js b/linux-3.17.1/net/gmtp/doc/html/search/all_68.js
new file mode 100644
index 0000000..47c71dd
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_68.js
@@ -0,0 +1,7 @@
+var searchData=
+[
+  ['h2',['h2',['../input_8c.html#ac9e7e0722796a9a2748cfe71e5c1eacb',1,'input.c']]],
+  ['h3',['h3',['../input_8c.html#ad8bba894a37a322932dc80e05de59fe3',1,'input.c']]],
+  ['h4',['h4',['../input_8c.html#af78ff2250f8c44a8f1d4533787151cda',1,'input.c']]],
+  ['h5',['h5',['../input_8c.html#ab30ad01496f14e60d923a1937ffc98d4',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_69.html b/linux-3.17.1/net/gmtp/doc/html/search/all_69.html
new file mode 100644
index 0000000..1a00b55
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_69.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="all_69.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_69.js b/linux-3.17.1/net/gmtp/doc/html/search/all_69.js
new file mode 100644
index 0000000..d786cbd
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_69.js
@@ -0,0 +1,6 @@
+var searchData=
+[
+  ['inet_5fgmtp_5flisten',['inet_gmtp_listen',['../gmtp_8h.html#aa43e6c6314b0b836ffb2616535879838',1,'inet_gmtp_listen(struct socket *sock, int backlog):&#160;proto.c'],['../proto_8c.html#aa43e6c6314b0b836ffb2616535879838',1,'inet_gmtp_listen(struct socket *sock, int backlog):&#160;proto.c']]],
+  ['input_2ec',['input.c',['../input_8c.html',1,'']]],
+  ['ipv4_2ec',['ipv4.c',['../ipv4_8c.html',1,'']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_6d.html b/linux-3.17.1/net/gmtp/doc/html/search/all_6d.html
new file mode 100644
index 0000000..2e27d4d
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_6d.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="all_6d.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_6d.js b/linux-3.17.1/net/gmtp/doc/html/search/all_6d.js
new file mode 100644
index 0000000..012df20
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_6d.js
@@ -0,0 +1,19 @@
+var searchData=
+[
+  ['max_5fgmtp_5fheader',['MAX_GMTP_HEADER',['../gmtp_8h.html#aaa9538bb543aaffa4731989fc7ddc0d8',1,'gmtp.h']]],
+  ['max_5fgmtp_5fspecific_5fheader',['MAX_GMTP_SPECIFIC_HEADER',['../gmtp_8h.html#afb9f06378ed5523a74a21aedc7f34ea6',1,'gmtp.h']]],
+  ['max_5fgmtp_5fvariable_5fheader',['MAX_GMTP_VARIABLE_HEADER',['../gmtp_8h.html#aed94c10b0d5306f67874e039a60f7907',1,'gmtp.h']]],
+  ['mdescright',['mdescRight',['../input_8c.html#a4591bd51e10e1bcc441acd6d675fbaa9',1,'input.c']]],
+  ['memitemleft',['memItemLeft',['../input_8c.html#a0407e3019d5f5cf8b15fe00d27e91fdd',1,'input.c']]],
+  ['memitemright',['memItemRight',['../input_8c.html#a2fde2671b1dacc9d87f4268184483eef',1,'input.c']]],
+  ['memtemplitemleft',['memTemplItemLeft',['../input_8c.html#a16459c9f19af9d4e45fa309d4c3d88dc',1,'input.c']]],
+  ['memtemplitemright',['memTemplItemRight',['../input_8c.html#af091022274dd4a202d587f3acae35aa9',1,'input.c']]],
+  ['module_5falias_5fnet_5fpf_5fproto_5ftype',['MODULE_ALIAS_NET_PF_PROTO_TYPE',['../ipv4_8c.html#a3b891be0948d683a3f0c879702d3b9cb',1,'MODULE_ALIAS_NET_PF_PROTO_TYPE(PF_INET, IPPROTO_GMTP, SOCK_GMTP):&#160;ipv4.c'],['../ipv4_8c.html#a0f9c0987d62a80d96fc8a4859950c9b5',1,'MODULE_ALIAS_NET_PF_PROTO_TYPE(PF_INET, 0, SOCK_GMTP):&#160;ipv4.c']]],
+  ['module_5fauthor',['MODULE_AUTHOR',['../ipv4_8c.html#ae540d1ed034c92753f40dcc69dc8081b',1,'MODULE_AUTHOR(&quot;Wendell Silva Soares &lt;wss@ic.ufal.br&gt;&quot;):&#160;ipv4.c'],['../proto_8c.html#ae540d1ed034c92753f40dcc69dc8081b',1,'MODULE_AUTHOR(&quot;Wendell Silva Soares &lt;wss@ic.ufal.br&gt;&quot;):&#160;proto.c']]],
+  ['module_5fdescription',['MODULE_DESCRIPTION',['../ipv4_8c.html#a81aa4475647c79e5e7d0050d75deda0b',1,'MODULE_DESCRIPTION(&quot;GMTP - Global Media Transmission Protocol&quot;):&#160;ipv4.c'],['../proto_8c.html#a81aa4475647c79e5e7d0050d75deda0b',1,'MODULE_DESCRIPTION(&quot;GMTP - Global Media Transmission Protocol&quot;):&#160;proto.c']]],
+  ['module_5fexit',['module_exit',['../ipv4_8c.html#a506da21c4f1be9b593d04268f6f813e0',1,'module_exit(gmtp_v4_exit):&#160;ipv4.c'],['../proto_8c.html#a9761956e9851cccd3f1c40d2a6b0fcdd',1,'module_exit(gmtp_exit):&#160;proto.c']]],
+  ['module_5finit',['module_init',['../ipv4_8c.html#aa732797a38fdc3a4052d4ac3b0e17a90',1,'module_init(gmtp_v4_init):&#160;ipv4.c'],['../proto_8c.html#a8fe804f33b35ccae3b8c82bee513b750',1,'module_init(gmtp_init):&#160;proto.c']]],
+  ['module_5flicense',['MODULE_LICENSE',['../ipv4_8c.html#ad94b36675e7eb067ea3ce6ff9e244a44',1,'MODULE_LICENSE(&quot;GPL&quot;):&#160;ipv4.c'],['../proto_8c.html#ad94b36675e7eb067ea3ce6ff9e244a44',1,'MODULE_LICENSE(&quot;GPL&quot;):&#160;proto.c']]],
+  ['module_5fparam',['module_param',['../proto_8c.html#a232988d276bf40d7c15be1fcd7af9d83',1,'proto.c']]],
+  ['module_5fparm_5fdesc',['MODULE_PARM_DESC',['../proto_8c.html#ad4e09849d2bc32d70e247bc5172fcf8b',1,'proto.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_6f.html b/linux-3.17.1/net/gmtp/doc/html/search/all_6f.html
new file mode 100644
index 0000000..61827e8
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_6f.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="all_6f.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_6f.js b/linux-3.17.1/net/gmtp/doc/html/search/all_6f.js
new file mode 100644
index 0000000..f1f5788
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_6f.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['output_2ec',['output.c',['../output_8c.html',1,'']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_70.html b/linux-3.17.1/net/gmtp/doc/html/search/all_70.html
new file mode 100644
index 0000000..0340151
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_70.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="all_70.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_70.js b/linux-3.17.1/net/gmtp/doc/html/search/all_70.js
new file mode 100644
index 0000000..e0faa8a
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_70.js
@@ -0,0 +1,7 @@
+var searchData=
+[
+  ['p',['p',['../input_8c.html#ac483f6ce851c9ecd9fb835ff7551737c',1,'input.c']]],
+  ['post',['post',['../input_8c.html#aaea8ed8d01160ec7de3bdcf28525449c',1,'input.c']]],
+  ['pra_5ftestar',['pra_testar',['../namespace_3globalScope_4.html#classpra__testar',1,'']]],
+  ['proto_2ec',['proto.c',['../proto_8c.html',1,'']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_72.html b/linux-3.17.1/net/gmtp/doc/html/search/all_72.html
new file mode 100644
index 0000000..0ab18d6
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_72.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="all_72.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_72.js b/linux-3.17.1/net/gmtp/doc/html/search/all_72.js
new file mode 100644
index 0000000..3c7cb7a
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_72.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['retval',['retval',['../input_8c.html#a7f3fcc3b39464696f5682f787eb99368',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_73.html b/linux-3.17.1/net/gmtp/doc/html/search/all_73.html
new file mode 100644
index 0000000..1ec8f17
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_73.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="all_73.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_73.js b/linux-3.17.1/net/gmtp/doc/html/search/all_73.js
new file mode 100644
index 0000000..10741de
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_73.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['startdd',['startdd',['../input_8c.html#acb48d3101db87d75430b587051623cb1',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_74.html b/linux-3.17.1/net/gmtp/doc/html/search/all_74.html
new file mode 100644
index 0000000..fdc6589
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_74.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="all_74.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/all_74.js b/linux-3.17.1/net/gmtp/doc/html/search/all_74.js
new file mode 100644
index 0000000..0a7d3a5
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/all_74.js
@@ -0,0 +1,5 @@
+var searchData=
+[
+  ['table',['table',['../input_8c.html#ab172ed3d3d31ff02fc5f798fe7e1bfb8',1,'input.c']]],
+  ['this_2dp',['This-p',['../namespace_3globalScope_4.html#protocolThis-p',1,'']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/classes_67.html b/linux-3.17.1/net/gmtp/doc/html/search/classes_67.html
new file mode 100644
index 0000000..78b514d
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/classes_67.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="classes_67.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/classes_67.js b/linux-3.17.1/net/gmtp/doc/html/search/classes_67.js
new file mode 100644
index 0000000..b583f35
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/classes_67.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['gmtp_5fskb_5fcb',['gmtp_skb_cb',['../gmtp_8h.html#structgmtp__skb__cb',1,'']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/classes_70.html b/linux-3.17.1/net/gmtp/doc/html/search/classes_70.html
new file mode 100644
index 0000000..e4b5208
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/classes_70.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="classes_70.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/classes_70.js b/linux-3.17.1/net/gmtp/doc/html/search/classes_70.js
new file mode 100644
index 0000000..923422f
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/classes_70.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['pra_5ftestar',['pra_testar',['../namespace_3globalScope_4.html#classpra__testar',1,'']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/classes_74.html b/linux-3.17.1/net/gmtp/doc/html/search/classes_74.html
new file mode 100644
index 0000000..f7f27ce
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/classes_74.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="classes_74.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/classes_74.js b/linux-3.17.1/net/gmtp/doc/html/search/classes_74.js
new file mode 100644
index 0000000..9819a0f
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/classes_74.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['this_2dp',['This-p',['../namespace_3globalScope_4.html#protocolThis-p',1,'']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/close.png b/linux-3.17.1/net/gmtp/doc/html/search/close.png
new file mode 100644
index 0000000..9342d3d
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/search/close.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/defines_67.html b/linux-3.17.1/net/gmtp/doc/html/search/defines_67.html
new file mode 100644
index 0000000..d211bf1
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/defines_67.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="defines_67.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/defines_67.js b/linux-3.17.1/net/gmtp/doc/html/search/defines_67.js
new file mode 100644
index 0000000..ab1a817
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/defines_67.js
@@ -0,0 +1,12 @@
+var searchData=
+[
+  ['gmtp_5ferror',['GMTP_ERROR',['../gmtp_8h.html#a8f042630afadb776c9fe83ace47fac92',1,'gmtp.h']]],
+  ['gmtp_5finfo',['GMTP_INFO',['../gmtp_8h.html#ac4d88ba4957c61fad1b1e81e86e26d25',1,'gmtp.h']]],
+  ['gmtp_5fprint_5fdebug',['gmtp_print_debug',['../gmtp_8h.html#acb14405c3e3845ce630b3330c048d3e8',1,'gmtp.h']]],
+  ['gmtp_5fprint_5ferror',['gmtp_print_error',['../gmtp_8h.html#aef36831848715ac98879ce5642229e14',1,'gmtp.h']]],
+  ['gmtp_5fprint_5fwarning',['gmtp_print_warning',['../gmtp_8h.html#a4e56790f2f3dc1623fbd978467ac614d',1,'gmtp.h']]],
+  ['gmtp_5fskb_5fcb',['GMTP_SKB_CB',['../gmtp_8h.html#a973dbe6c782d6d3a6b8fb1a2d15d0825',1,'gmtp.h']]],
+  ['gmtp_5ftimeout_5finit',['GMTP_TIMEOUT_INIT',['../gmtp_8h.html#a5b5fd1251f0fec5bc8dda21b11d57de4',1,'gmtp.h']]],
+  ['gmtp_5ftimewait_5flen',['GMTP_TIMEWAIT_LEN',['../gmtp_8h.html#a86aa8330d1bef9cdb384dc6ef9738bcb',1,'gmtp.h']]],
+  ['gmtp_5fwarning',['GMTP_WARNING',['../gmtp_8h.html#a9bdaefac28c54404d5d18bf9f4df448f',1,'gmtp.h']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/defines_6d.html b/linux-3.17.1/net/gmtp/doc/html/search/defines_6d.html
new file mode 100644
index 0000000..d282702
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/defines_6d.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="defines_6d.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/defines_6d.js b/linux-3.17.1/net/gmtp/doc/html/search/defines_6d.js
new file mode 100644
index 0000000..faa26ea
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/defines_6d.js
@@ -0,0 +1,6 @@
+var searchData=
+[
+  ['max_5fgmtp_5fheader',['MAX_GMTP_HEADER',['../gmtp_8h.html#aaa9538bb543aaffa4731989fc7ddc0d8',1,'gmtp.h']]],
+  ['max_5fgmtp_5fspecific_5fheader',['MAX_GMTP_SPECIFIC_HEADER',['../gmtp_8h.html#afb9f06378ed5523a74a21aedc7f34ea6',1,'gmtp.h']]],
+  ['max_5fgmtp_5fvariable_5fheader',['MAX_GMTP_VARIABLE_HEADER',['../gmtp_8h.html#aed94c10b0d5306f67874e039a60f7907',1,'gmtp.h']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/files_67.html b/linux-3.17.1/net/gmtp/doc/html/search/files_67.html
new file mode 100644
index 0000000..d5df283
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/files_67.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="files_67.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/files_67.js b/linux-3.17.1/net/gmtp/doc/html/search/files_67.js
new file mode 100644
index 0000000..c4528d9
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/files_67.js
@@ -0,0 +1,6 @@
+var searchData=
+[
+  ['gmtp_2eh',['gmtp.h',['../gmtp_8h.html',1,'']]],
+  ['gmtp_2emod_2ec',['gmtp.mod.c',['../gmtp_8mod_8c.html',1,'']]],
+  ['gmtp_5fipv4_2emod_2ec',['gmtp_ipv4.mod.c',['../gmtp__ipv4_8mod_8c.html',1,'']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/files_69.html b/linux-3.17.1/net/gmtp/doc/html/search/files_69.html
new file mode 100644
index 0000000..7fbd757
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/files_69.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="files_69.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/files_69.js b/linux-3.17.1/net/gmtp/doc/html/search/files_69.js
new file mode 100644
index 0000000..693f5e3
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/files_69.js
@@ -0,0 +1,5 @@
+var searchData=
+[
+  ['input_2ec',['input.c',['../input_8c.html',1,'']]],
+  ['ipv4_2ec',['ipv4.c',['../ipv4_8c.html',1,'']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/files_6f.html b/linux-3.17.1/net/gmtp/doc/html/search/files_6f.html
new file mode 100644
index 0000000..127aac1
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/files_6f.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="files_6f.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/files_6f.js b/linux-3.17.1/net/gmtp/doc/html/search/files_6f.js
new file mode 100644
index 0000000..f1f5788
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/files_6f.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['output_2ec',['output.c',['../output_8c.html',1,'']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/files_70.html b/linux-3.17.1/net/gmtp/doc/html/search/files_70.html
new file mode 100644
index 0000000..abcae9a
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/files_70.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="files_70.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/files_70.js b/linux-3.17.1/net/gmtp/doc/html/search/files_70.js
new file mode 100644
index 0000000..d822f5b
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/files_70.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['proto_2ec',['proto.c',['../proto_8c.html',1,'']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/functions_65.html b/linux-3.17.1/net/gmtp/doc/html/search/functions_65.html
new file mode 100644
index 0000000..a77deba
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/functions_65.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="functions_65.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/functions_65.js b/linux-3.17.1/net/gmtp/doc/html/search/functions_65.js
new file mode 100644
index 0000000..a301877
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/functions_65.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['export_5fsymbol_5fgpl',['EXPORT_SYMBOL_GPL',['../ipv4_8c.html#aba729ce082e122d7aec35777ade6e7fb',1,'EXPORT_SYMBOL_GPL(gmtp_v4_connect):&#160;ipv4.c'],['../ipv4_8c.html#a836df2e24d1d747e76c1839b38627b1d',1,'EXPORT_SYMBOL_GPL(gmtp_v4_err):&#160;ipv4.c'],['../ipv4_8c.html#a81ef47c46ddfba18451d4e991c61996b',1,'EXPORT_SYMBOL_GPL(gmtp_v4_rcv):&#160;ipv4.c'],['../ipv4_8c.html#a0a0fd79e581d8bc33ebe57cfd4c6ee59',1,'EXPORT_SYMBOL_GPL(gmtp_v4_conn_request):&#160;ipv4.c'],['../ipv4_8c.html#a02a246e3f177672e943fa02d76c61792',1,'EXPORT_SYMBOL_GPL(gmtp_v4_do_rcv):&#160;ipv4.c'],['../output_8c.html#a8823c64d48b3edf631d90827fe8145a1',1,'EXPORT_SYMBOL_GPL(gmtp_connect):&#160;output.c'],['../output_8c.html#ab51c1008fc15439db56e838547dd798a',1,'EXPORT_SYMBOL_GPL(gmtp_make_response):&#160;output.c'],['../output_8c.html#af63283ab704f9c1e284327090204d962',1,'EXPORT_SYMBOL_GPL(gmtp_ctl_make_reset):&#160;output.c'],['../proto_8c.html#a55eca9800ebea2d452379b6c957e1ae0',1,'EXPORT_SYMBOL_GPL(gmtp_hashinfo):&#160;proto.c'],['../proto_8c.html#ab79c6a01f15a2d7a57c601da48518b94',1,'EXPORT_SYMBOL_GPL(gmtp_death_row):&#160;proto.c'],['../proto_8c.html#a022de102dea8fa0d856b0250705464b7',1,'EXPORT_SYMBOL_GPL(gmtp_packet_name):&#160;proto.c'],['../proto_8c.html#a7f4fc2baaa902bf0faa4b08718ca48c9',1,'EXPORT_SYMBOL_GPL(gmtp_set_state):&#160;proto.c'],['../proto_8c.html#a43dd2bf3cf0ea29dc62991109832cf66',1,'EXPORT_SYMBOL_GPL(gmtp_init_sock):&#160;proto.c'],['../proto_8c.html#a71c81285d972adbb9dac3c2901474913',1,'EXPORT_SYMBOL_GPL(gmtp_destroy_sock):&#160;proto.c'],['../proto_8c.html#a5e92e64108425c3efcfedafe042b69f5',1,'EXPORT_SYMBOL_GPL(inet_gmtp_listen):&#160;proto.c'],['../proto_8c.html#a62309d17a84cfca80bd5ed64f792b81d',1,'EXPORT_SYMBOL_GPL(gmtp_close):&#160;proto.c'],['../proto_8c.html#a58189c4b73a9797678c889b711c43370',1,'EXPORT_SYMBOL_GPL(gmtp_disconnect):&#160;proto.c'],['../proto_8c.html#aff3994d7b921e54bf48117ad68260008',1,'EXPORT_SYMBOL_GPL(gmtp_ioctl):&#160;proto.c'],['../proto_8c.html#a0c2d8183d16404af5ecc36d7f369d40c',1,'EXPORT_SYMBOL_GPL(gmtp_getsockopt):&#160;proto.c'],['../proto_8c.html#a7aa55ae25e24baeabffdcae359c65699',1,'EXPORT_SYMBOL_GPL(gmtp_sendmsg):&#160;proto.c'],['../proto_8c.html#a06f8bada3169d9f63b013280475ee6f0',1,'EXPORT_SYMBOL_GPL(gmtp_setsockopt):&#160;proto.c'],['../proto_8c.html#a828a1602037d7a1e44abcc0756010e79',1,'EXPORT_SYMBOL_GPL(gmtp_recvmsg):&#160;proto.c'],['../proto_8c.html#a0530c0aaec158dfb00d2ab15a71c6571',1,'EXPORT_SYMBOL_GPL(gmtp_do_rcv):&#160;proto.c'],['../proto_8c.html#a457458302de4290b0602c55c7b619ea0',1,'EXPORT_SYMBOL_GPL(gmtp_shutdown):&#160;proto.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/functions_67.html b/linux-3.17.1/net/gmtp/doc/html/search/functions_67.html
new file mode 100644
index 0000000..d0ab42a
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/functions_67.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="functions_67.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/functions_67.js b/linux-3.17.1/net/gmtp/doc/html/search/functions_67.js
new file mode 100644
index 0000000..d3327f3
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/functions_67.js
@@ -0,0 +1,27 @@
+var searchData=
+[
+  ['gmtp_5fclose',['gmtp_close',['../gmtp_8h.html#a59f856ab28c13b885fbe2c38f7a70a87',1,'gmtp_close(struct sock *sk, long timeout):&#160;proto.c'],['../proto_8c.html#a59f856ab28c13b885fbe2c38f7a70a87',1,'gmtp_close(struct sock *sk, long timeout):&#160;proto.c']]],
+  ['gmtp_5fconnect',['gmtp_connect',['../gmtp_8h.html#a2df4bd07928440434f3ffc5e9a99e192',1,'gmtp_connect(struct sock *sk):&#160;output.c'],['../output_8c.html#a2df4bd07928440434f3ffc5e9a99e192',1,'gmtp_connect(struct sock *sk):&#160;output.c']]],
+  ['gmtp_5fctl_5fmake_5freset',['gmtp_ctl_make_reset',['../gmtp_8h.html#a702ba25884e070b579dcfa4769260847',1,'gmtp_ctl_make_reset(struct sock *sk, struct sk_buff *rcv_skb):&#160;output.c'],['../output_8c.html#a702ba25884e070b579dcfa4769260847',1,'gmtp_ctl_make_reset(struct sock *sk, struct sk_buff *rcv_skb):&#160;output.c']]],
+  ['gmtp_5fdestroy_5fsock',['gmtp_destroy_sock',['../gmtp_8h.html#ada146a75c7595313fda4021b3d64f2af',1,'gmtp_destroy_sock(struct sock *sk):&#160;proto.c'],['../proto_8c.html#ada146a75c7595313fda4021b3d64f2af',1,'gmtp_destroy_sock(struct sock *sk):&#160;proto.c']]],
+  ['gmtp_5fdisconnect',['gmtp_disconnect',['../gmtp_8h.html#a8dacfb87447f165efac077aa907a8e27',1,'gmtp_disconnect(struct sock *sk, int flags):&#160;proto.c'],['../proto_8c.html#a8dacfb87447f165efac077aa907a8e27',1,'gmtp_disconnect(struct sock *sk, int flags):&#160;proto.c']]],
+  ['gmtp_5fdo_5frcv',['gmtp_do_rcv',['../proto_8c.html#ad87dbd137414cabb75038daf5d227af2',1,'proto.c']]],
+  ['gmtp_5fgetsockopt',['gmtp_getsockopt',['../gmtp_8h.html#a789192a2299f8f626e034ad9c87d99b2',1,'gmtp_getsockopt(struct sock *sk, int level, int optname, char __user *optval, int __user *optlen):&#160;proto.c'],['../proto_8c.html#a789192a2299f8f626e034ad9c87d99b2',1,'gmtp_getsockopt(struct sock *sk, int level, int optname, char __user *optval, int __user *optlen):&#160;proto.c']]],
+  ['gmtp_5finit_5fsock',['gmtp_init_sock',['../gmtp_8h.html#a1c872c8a33008e99befdb297a6518e03',1,'gmtp_init_sock(struct sock *sk, const __u8 ctl_sock_initialized):&#160;proto.c'],['../proto_8c.html#a1c872c8a33008e99befdb297a6518e03',1,'gmtp_init_sock(struct sock *sk, const __u8 ctl_sock_initialized):&#160;proto.c']]],
+  ['gmtp_5finsert_5foptions',['gmtp_insert_options',['../gmtp_8h.html#a706d0cdecf4e871e347de22e69eed8ee',1,'gmtp.h']]],
+  ['gmtp_5finvalid_5fpacket',['gmtp_invalid_packet',['../ipv4_8c.html#ac0518e2de9174312756a485345984ba5',1,'ipv4.c']]],
+  ['gmtp_5fioctl',['gmtp_ioctl',['../gmtp_8h.html#ab9bd011833dc85384f4d3c6e5c29f6de',1,'gmtp_ioctl(struct sock *sk, int cmd, unsigned long arg):&#160;proto.c'],['../proto_8c.html#ab9bd011833dc85384f4d3c6e5c29f6de',1,'gmtp_ioctl(struct sock *sk, int cmd, unsigned long arg):&#160;proto.c']]],
+  ['gmtp_5fmake_5fresponse',['gmtp_make_response',['../gmtp_8h.html#a8e94a84dd0d5b12f39df23b6c6ff005b',1,'gmtp_make_response(struct sock *sk, struct dst_entry *dst, struct request_sock *req):&#160;output.c'],['../output_8c.html#a8e94a84dd0d5b12f39df23b6c6ff005b',1,'gmtp_make_response(struct sock *sk, struct dst_entry *dst, struct request_sock *req):&#160;output.c']]],
+  ['gmtp_5fpacket_5fname',['gmtp_packet_name',['../gmtp_8h.html#a181e0298f75786ee945b7dcd06adaf1b',1,'gmtp_packet_name(const int):&#160;proto.c'],['../proto_8c.html#a9984b8752cb8758660297cce25f6dd54',1,'gmtp_packet_name(const int type):&#160;proto.c']]],
+  ['gmtp_5frcv_5festablished',['gmtp_rcv_established',['../gmtp_8h.html#a3d9324eca652acd36308327a06050473',1,'gmtp.h']]],
+  ['gmtp_5frcv_5fstate_5fprocess',['gmtp_rcv_state_process',['../gmtp_8h.html#a212e85de01d9dd2c64578b4a61020f18',1,'gmtp.h']]],
+  ['gmtp_5frecvmsg',['gmtp_recvmsg',['../gmtp_8h.html#a462ae3f8dd122bdee2af7fd115694db4',1,'gmtp_recvmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg, size_t len, int nonblock, int flags, int *addr_len):&#160;proto.c'],['../proto_8c.html#a462ae3f8dd122bdee2af7fd115694db4',1,'gmtp_recvmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg, size_t len, int nonblock, int flags, int *addr_len):&#160;proto.c']]],
+  ['gmtp_5fsendmsg',['gmtp_sendmsg',['../gmtp_8h.html#a76ebcaaace625859ee741e890d7e7da7',1,'gmtp_sendmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg, size_t size):&#160;proto.c'],['../proto_8c.html#a76ebcaaace625859ee741e890d7e7da7',1,'gmtp_sendmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg, size_t size):&#160;proto.c']]],
+  ['gmtp_5fset_5fstate',['gmtp_set_state',['../gmtp_8h.html#ad4d2e06e572fc5135a3a2636b629b8f2',1,'gmtp_set_state(struct sock *, const int):&#160;proto.c'],['../proto_8c.html#a2c20286d5df6e6774719d719be9d3a13',1,'gmtp_set_state(struct sock *sk, const int state):&#160;proto.c']]],
+  ['gmtp_5fsetsockopt',['gmtp_setsockopt',['../gmtp_8h.html#aa5511c6bf84a1956f308ce920a134c29',1,'gmtp_setsockopt(struct sock *sk, int level, int optname, char __user *optval, unsigned int optlen):&#160;proto.c'],['../proto_8c.html#aa5511c6bf84a1956f308ce920a134c29',1,'gmtp_setsockopt(struct sock *sk, int level, int optname, char __user *optval, unsigned int optlen):&#160;proto.c']]],
+  ['gmtp_5fshutdown',['gmtp_shutdown',['../gmtp_8h.html#ae74ac6585ac8e29b98e916f4f29ae3f0',1,'gmtp_shutdown(struct sock *sk, int how):&#160;proto.c'],['../proto_8c.html#ae74ac6585ac8e29b98e916f4f29ae3f0',1,'gmtp_shutdown(struct sock *sk, int how):&#160;proto.c']]],
+  ['gmtp_5fv4_5fconn_5frequest',['gmtp_v4_conn_request',['../ipv4_8c.html#ac00f58e15e1908bc8f01439f25266cea',1,'ipv4.c']]],
+  ['gmtp_5fv4_5fconnect',['gmtp_v4_connect',['../gmtp_8h.html#a3d651b3671bf86675ce95fb92228b6a3',1,'gmtp_v4_connect(struct sock *sk, struct sockaddr *uaddr, int addr_len):&#160;ipv4.c'],['../ipv4_8c.html#a3d651b3671bf86675ce95fb92228b6a3',1,'gmtp_v4_connect(struct sock *sk, struct sockaddr *uaddr, int addr_len):&#160;ipv4.c']]],
+  ['gmtp_5fv4_5fdo_5frcv',['gmtp_v4_do_rcv',['../ipv4_8c.html#a96e77cd9da9396b4e3e9d2ca1bdd62ef',1,'ipv4.c']]],
+  ['gmtp_5fv4_5ferr',['gmtp_v4_err',['../ipv4_8c.html#a5257b59975805a2ab1fe3a97bc9a0f42',1,'ipv4.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/functions_69.html b/linux-3.17.1/net/gmtp/doc/html/search/functions_69.html
new file mode 100644
index 0000000..e204197
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/functions_69.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="functions_69.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/functions_69.js b/linux-3.17.1/net/gmtp/doc/html/search/functions_69.js
new file mode 100644
index 0000000..2a5386c
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/functions_69.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['inet_5fgmtp_5flisten',['inet_gmtp_listen',['../gmtp_8h.html#aa43e6c6314b0b836ffb2616535879838',1,'inet_gmtp_listen(struct socket *sock, int backlog):&#160;proto.c'],['../proto_8c.html#aa43e6c6314b0b836ffb2616535879838',1,'inet_gmtp_listen(struct socket *sock, int backlog):&#160;proto.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/functions_6d.html b/linux-3.17.1/net/gmtp/doc/html/search/functions_6d.html
new file mode 100644
index 0000000..d01ac53
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/functions_6d.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="functions_6d.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/functions_6d.js b/linux-3.17.1/net/gmtp/doc/html/search/functions_6d.js
new file mode 100644
index 0000000..a3c7682
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/functions_6d.js
@@ -0,0 +1,11 @@
+var searchData=
+[
+  ['module_5falias_5fnet_5fpf_5fproto_5ftype',['MODULE_ALIAS_NET_PF_PROTO_TYPE',['../ipv4_8c.html#a3b891be0948d683a3f0c879702d3b9cb',1,'MODULE_ALIAS_NET_PF_PROTO_TYPE(PF_INET, IPPROTO_GMTP, SOCK_GMTP):&#160;ipv4.c'],['../ipv4_8c.html#a0f9c0987d62a80d96fc8a4859950c9b5',1,'MODULE_ALIAS_NET_PF_PROTO_TYPE(PF_INET, 0, SOCK_GMTP):&#160;ipv4.c']]],
+  ['module_5fauthor',['MODULE_AUTHOR',['../ipv4_8c.html#ae540d1ed034c92753f40dcc69dc8081b',1,'MODULE_AUTHOR(&quot;Wendell Silva Soares &lt;wss@ic.ufal.br&gt;&quot;):&#160;ipv4.c'],['../proto_8c.html#ae540d1ed034c92753f40dcc69dc8081b',1,'MODULE_AUTHOR(&quot;Wendell Silva Soares &lt;wss@ic.ufal.br&gt;&quot;):&#160;proto.c']]],
+  ['module_5fdescription',['MODULE_DESCRIPTION',['../ipv4_8c.html#a81aa4475647c79e5e7d0050d75deda0b',1,'MODULE_DESCRIPTION(&quot;GMTP - Global Media Transmission Protocol&quot;):&#160;ipv4.c'],['../proto_8c.html#a81aa4475647c79e5e7d0050d75deda0b',1,'MODULE_DESCRIPTION(&quot;GMTP - Global Media Transmission Protocol&quot;):&#160;proto.c']]],
+  ['module_5fexit',['module_exit',['../ipv4_8c.html#a506da21c4f1be9b593d04268f6f813e0',1,'module_exit(gmtp_v4_exit):&#160;ipv4.c'],['../proto_8c.html#a9761956e9851cccd3f1c40d2a6b0fcdd',1,'module_exit(gmtp_exit):&#160;proto.c']]],
+  ['module_5finit',['module_init',['../ipv4_8c.html#aa732797a38fdc3a4052d4ac3b0e17a90',1,'module_init(gmtp_v4_init):&#160;ipv4.c'],['../proto_8c.html#a8fe804f33b35ccae3b8c82bee513b750',1,'module_init(gmtp_init):&#160;proto.c']]],
+  ['module_5flicense',['MODULE_LICENSE',['../ipv4_8c.html#ad94b36675e7eb067ea3ce6ff9e244a44',1,'MODULE_LICENSE(&quot;GPL&quot;):&#160;ipv4.c'],['../proto_8c.html#ad94b36675e7eb067ea3ce6ff9e244a44',1,'MODULE_LICENSE(&quot;GPL&quot;):&#160;proto.c']]],
+  ['module_5fparam',['module_param',['../proto_8c.html#a232988d276bf40d7c15be1fcd7af9d83',1,'proto.c']]],
+  ['module_5fparm_5fdesc',['MODULE_PARM_DESC',['../proto_8c.html#ad4e09849d2bc32d70e247bc5172fcf8b',1,'proto.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/mag_sel.png b/linux-3.17.1/net/gmtp/doc/html/search/mag_sel.png
new file mode 100644
index 0000000..81f6040
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/search/mag_sel.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/nomatches.html b/linux-3.17.1/net/gmtp/doc/html/search/nomatches.html
new file mode 100644
index 0000000..b1ded27
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/nomatches.html
@@ -0,0 +1,12 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="NoMatches">No Matches</div>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/search.css b/linux-3.17.1/net/gmtp/doc/html/search/search.css
new file mode 100644
index 0000000..d18c1da
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/search.css
@@ -0,0 +1,238 @@
+/*---------------- Search Box */
+
+#FSearchBox {
+    float: left;
+}
+
+#MSearchBox {
+    white-space : nowrap;
+    position: absolute;
+    float: none;
+    display: inline;
+    margin-top: 8px;
+    right: 0px;
+    width: 170px;
+    z-index: 102;
+    background-color: white;
+}
+
+#MSearchBox .left
+{
+    display:block;
+    position:absolute;
+    left:10px;
+    width:20px;
+    height:19px;
+    background:url('search_l.png') no-repeat;
+    background-position:right;
+}
+
+#MSearchSelect {
+    display:block;
+    position:absolute;
+    width:20px;
+    height:19px;
+}
+
+.left #MSearchSelect {
+    left:4px;
+}
+
+.right #MSearchSelect {
+    right:5px;
+}
+
+#MSearchField {
+    display:block;
+    position:absolute;
+    height:19px;
+    background:url('search_m.png') repeat-x;
+    border:none;
+    width:116px;
+    margin-left:20px;
+    padding-left:4px;
+    color: #909090;
+    outline: none;
+    font: 9pt Arial, Verdana, sans-serif;
+}
+
+#FSearchBox #MSearchField {
+    margin-left:15px;
+}
+
+#MSearchBox .right {
+    display:block;
+    position:absolute;
+    right:10px;
+    top:0px;
+    width:20px;
+    height:19px;
+    background:url('search_r.png') no-repeat;
+    background-position:left;
+}
+
+#MSearchClose {
+    display: none;
+    position: absolute;
+    top: 4px;
+    background : none;
+    border: none;
+    margin: 0px 4px 0px 0px;
+    padding: 0px 0px;
+    outline: none;
+}
+
+.left #MSearchClose {
+    left: 6px;
+}
+
+.right #MSearchClose {
+    right: 2px;
+}
+
+.MSearchBoxActive #MSearchField {
+    color: #000000;
+}
+
+/*---------------- Search filter selection */
+
+#MSearchSelectWindow {
+    display: none;
+    position: absolute;
+    left: 0; top: 0;
+    border: 1px solid #90A5CE;
+    background-color: #F9FAFC;
+    z-index: 1;
+    padding-top: 4px;
+    padding-bottom: 4px;
+    -moz-border-radius: 4px;
+    -webkit-border-top-left-radius: 4px;
+    -webkit-border-top-right-radius: 4px;
+    -webkit-border-bottom-left-radius: 4px;
+    -webkit-border-bottom-right-radius: 4px;
+    -webkit-box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.15);
+}
+
+.SelectItem {
+    font: 8pt Arial, Verdana, sans-serif;
+    padding-left:  2px;
+    padding-right: 12px;
+    border: 0px;
+}
+
+span.SelectionMark {
+    margin-right: 4px;
+    font-family: monospace;
+    outline-style: none;
+    text-decoration: none;
+}
+
+a.SelectItem {
+    display: block;
+    outline-style: none;
+    color: #000000; 
+    text-decoration: none;
+    padding-left:   6px;
+    padding-right: 12px;
+}
+
+a.SelectItem:focus,
+a.SelectItem:active {
+    color: #000000; 
+    outline-style: none;
+    text-decoration: none;
+}
+
+a.SelectItem:hover {
+    color: #FFFFFF;
+    background-color: #3D578C;
+    outline-style: none;
+    text-decoration: none;
+    cursor: pointer;
+    display: block;
+}
+
+/*---------------- Search results window */
+
+iframe#MSearchResults {
+    width: 60ex;
+    height: 15em;
+}
+
+#MSearchResultsWindow {
+    display: none;
+    position: absolute;
+    left: 0; top: 0;
+    border: 1px solid #000;
+    background-color: #EEF1F7;
+}
+
+/* ----------------------------------- */
+
+
+#SRIndex {
+    clear:both; 
+    padding-bottom: 15px;
+}
+
+.SREntry {
+    font-size: 10pt;
+    padding-left: 1ex;
+}
+
+.SRPage .SREntry {
+    font-size: 8pt;
+    padding: 1px 5px;
+}
+
+body.SRPage {
+    margin: 5px 2px;
+}
+
+.SRChildren {
+    padding-left: 3ex; padding-bottom: .5em 
+}
+
+.SRPage .SRChildren {
+    display: none;
+}
+
+.SRSymbol {
+    font-weight: bold; 
+    color: #425E97;
+    font-family: Arial, Verdana, sans-serif;
+    text-decoration: none;
+    outline: none;
+}
+
+a.SRScope {
+    display: block;
+    color: #425E97; 
+    font-family: Arial, Verdana, sans-serif;
+    text-decoration: none;
+    outline: none;
+}
+
+a.SRSymbol:focus, a.SRSymbol:active,
+a.SRScope:focus, a.SRScope:active {
+    text-decoration: underline;
+}
+
+span.SRScope {
+    padding-left: 4px;
+}
+
+.SRPage .SRStatus {
+    padding: 2px 5px;
+    font-size: 8pt;
+    font-style: italic;
+}
+
+.SRResult {
+    display: none;
+}
+
+DIV.searchresults {
+    margin-left: 10px;
+    margin-right: 10px;
+}
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/search.js b/linux-3.17.1/net/gmtp/doc/html/search/search.js
new file mode 100644
index 0000000..9203d48
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/search.js
@@ -0,0 +1,805 @@
+// Search script generated by doxygen
+// Copyright (C) 2009 by Dimitri van Heesch.
+
+// The code in this file is loosly based on main.js, part of Natural Docs,
+// which is Copyright (C) 2003-2008 Greg Valure
+// Natural Docs is licensed under the GPL.
+
+var indexSectionsWithContent =
+{
+  0: "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011110111000101101110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
+  1: "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
+  2: "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
+  3: "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
+  4: "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011110110000100101110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
+  5: "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
+};
+
+var indexSectionNames =
+{
+  0: "all",
+  1: "classes",
+  2: "files",
+  3: "functions",
+  4: "variables",
+  5: "defines"
+};
+
+function convertToId(search)
+{
+  var result = '';
+  for (i=0;i<search.length;i++)
+  {
+    var c = search.charAt(i);
+    var cn = c.charCodeAt(0);
+    if (c.match(/[a-z0-9]/))
+    {
+      result+=c;
+    }
+    else if (cn<16) 
+    {
+      result+="_0"+cn.toString(16);
+    }
+    else 
+    {
+      result+="_"+cn.toString(16);
+    }
+  }
+  return result;
+}
+
+function getXPos(item)
+{
+  var x = 0;
+  if (item.offsetWidth)
+  {
+    while (item && item!=document.body)
+    {
+      x   += item.offsetLeft;
+      item = item.offsetParent;
+    }
+  }
+  return x;
+}
+
+function getYPos(item)
+{
+  var y = 0;
+  if (item.offsetWidth)
+  {
+     while (item && item!=document.body)
+     {
+       y   += item.offsetTop;
+       item = item.offsetParent;
+     }
+  }
+  return y;
+}
+
+/* A class handling everything associated with the search panel.
+
+   Parameters:
+   name - The name of the global variable that will be 
+          storing this instance.  Is needed to be able to set timeouts.
+   resultPath - path to use for external files
+*/
+function SearchBox(name, resultsPath, inFrame, label)
+{
+  if (!name || !resultsPath) {  alert("Missing parameters to SearchBox."); }
+   
+  // ---------- Instance variables
+  this.name                  = name;
+  this.resultsPath           = resultsPath;
+  this.keyTimeout            = 0;
+  this.keyTimeoutLength      = 500;
+  this.closeSelectionTimeout = 300;
+  this.lastSearchValue       = "";
+  this.lastResultsPage       = "";
+  this.hideTimeout           = 0;
+  this.searchIndex           = 0;
+  this.searchActive          = false;
+  this.insideFrame           = inFrame;
+  this.searchLabel           = label;
+
+  // ----------- DOM Elements
+
+  this.DOMSearchField = function()
+  {  return document.getElementById("MSearchField");  }
+
+  this.DOMSearchSelect = function()
+  {  return document.getElementById("MSearchSelect");  }
+
+  this.DOMSearchSelectWindow = function()
+  {  return document.getElementById("MSearchSelectWindow");  }
+
+  this.DOMPopupSearchResults = function()
+  {  return document.getElementById("MSearchResults");  }
+
+  this.DOMPopupSearchResultsWindow = function()
+  {  return document.getElementById("MSearchResultsWindow");  }
+
+  this.DOMSearchClose = function()
+  {  return document.getElementById("MSearchClose"); }
+
+  this.DOMSearchBox = function()
+  {  return document.getElementById("MSearchBox");  }
+
+  // ------------ Event Handlers
+
+  // Called when focus is added or removed from the search field.
+  this.OnSearchFieldFocus = function(isActive)
+  {
+    this.Activate(isActive);
+  }
+
+  this.OnSearchSelectShow = function()
+  {
+    var searchSelectWindow = this.DOMSearchSelectWindow();
+    var searchField        = this.DOMSearchSelect();
+
+    if (this.insideFrame)
+    {
+      var left = getXPos(searchField);
+      var top  = getYPos(searchField);
+      left += searchField.offsetWidth + 6;
+      top += searchField.offsetHeight;
+
+      // show search selection popup
+      searchSelectWindow.style.display='block';
+      left -= searchSelectWindow.offsetWidth;
+      searchSelectWindow.style.left =  left + 'px';
+      searchSelectWindow.style.top  =  top  + 'px';
+    }
+    else
+    {
+      var left = getXPos(searchField);
+      var top  = getYPos(searchField);
+      top += searchField.offsetHeight;
+
+      // show search selection popup
+      searchSelectWindow.style.display='block';
+      searchSelectWindow.style.left =  left + 'px';
+      searchSelectWindow.style.top  =  top  + 'px';
+    }
+
+    // stop selection hide timer
+    if (this.hideTimeout) 
+    {
+      clearTimeout(this.hideTimeout);
+      this.hideTimeout=0;
+    }
+    return false; // to avoid "image drag" default event
+  }
+
+  this.OnSearchSelectHide = function()
+  {
+    this.hideTimeout = setTimeout(this.name +".CloseSelectionWindow()",
+                                  this.closeSelectionTimeout);
+  }
+
+  // Called when the content of the search field is changed.
+  this.OnSearchFieldChange = function(evt)
+  {
+    if (this.keyTimeout) // kill running timer
+    {
+      clearTimeout(this.keyTimeout);
+      this.keyTimeout = 0;
+    }
+
+    var e  = (evt) ? evt : window.event; // for IE
+    if (e.keyCode==40 || e.keyCode==13)
+    {
+      if (e.shiftKey==1)
+      {
+        this.OnSearchSelectShow();
+        var win=this.DOMSearchSelectWindow(); 
+        for (i=0;i<win.childNodes.length;i++)
+        {
+          var child = win.childNodes[i]; // get span within a
+          if (child.className=='SelectItem')
+          {
+            child.focus();
+            return;
+          }
+        }
+        return;
+      }
+      else if (window.frames.MSearchResults.searchResults)
+      {
+        var elem = window.frames.MSearchResults.searchResults.NavNext(0);
+        if (elem) elem.focus();
+      }
+    }
+    else if (e.keyCode==27) // Escape out of the search field
+    {
+      this.DOMSearchField().blur();
+      this.DOMPopupSearchResultsWindow().style.display = 'none';
+      this.DOMSearchClose().style.display = 'none';
+      this.lastSearchValue = '';
+      this.Activate(false);
+      return;
+    }
+
+    // strip whitespaces
+    var searchValue = this.DOMSearchField().value.replace(/ +/g, "");
+
+    if (searchValue != this.lastSearchValue) // search value has changed
+    {
+      if (searchValue != "") // non-empty search
+      {
+        // set timer for search update
+        this.keyTimeout = setTimeout(this.name + '.Search()',
+                                     this.keyTimeoutLength);
+      }
+      else // empty search field
+      {
+        this.DOMPopupSearchResultsWindow().style.display = 'none';
+        this.DOMSearchClose().style.display = 'none';
+        this.lastSearchValue = '';
+      }
+    }
+  }
+
+  this.SelectItemCount = function(id)
+  {
+    var count=0;
+    var win=this.DOMSearchSelectWindow(); 
+    for (i=0;i<win.childNodes.length;i++)
+    {
+      var child = win.childNodes[i]; // get span within a
+      if (child.className=='SelectItem')
+      {
+        count++;
+      }
+    }
+    return count;
+  }
+
+  this.SelectItemSet = function(id)
+  {
+    var i,j=0;
+    var win=this.DOMSearchSelectWindow(); 
+    for (i=0;i<win.childNodes.length;i++)
+    {
+      var child = win.childNodes[i]; // get span within a
+      if (child.className=='SelectItem')
+      {
+        var node = child.firstChild;
+        if (j==id)
+        {
+          node.innerHTML='&#8226;';
+        }
+        else
+        {
+          node.innerHTML='&#160;';
+        }
+        j++;
+      }
+    }
+  }
+
+  // Called when an search filter selection is made.
+  // set item with index id as the active item
+  this.OnSelectItem = function(id)
+  {
+    this.searchIndex = id;
+    this.SelectItemSet(id);
+    var searchValue = this.DOMSearchField().value.replace(/ +/g, "");
+    if (searchValue!="" && this.searchActive) // something was found -> do a search
+    {
+      this.Search();
+    }
+  }
+
+  this.OnSearchSelectKey = function(evt)
+  {
+    var e = (evt) ? evt : window.event; // for IE
+    if (e.keyCode==40 && this.searchIndex<this.SelectItemCount()) // Down
+    {
+      this.searchIndex++;
+      this.OnSelectItem(this.searchIndex);
+    }
+    else if (e.keyCode==38 && this.searchIndex>0) // Up
+    {
+      this.searchIndex--;
+      this.OnSelectItem(this.searchIndex);
+    }
+    else if (e.keyCode==13 || e.keyCode==27)
+    {
+      this.OnSelectItem(this.searchIndex);
+      this.CloseSelectionWindow();
+      this.DOMSearchField().focus();
+    }
+    return false;
+  }
+
+  // --------- Actions
+
+  // Closes the results window.
+  this.CloseResultsWindow = function()
+  {
+    this.DOMPopupSearchResultsWindow().style.display = 'none';
+    this.DOMSearchClose().style.display = 'none';
+    this.Activate(false);
+  }
+
+  this.CloseSelectionWindow = function()
+  {
+    this.DOMSearchSelectWindow().style.display = 'none';
+  }
+
+  // Performs a search.
+  this.Search = function()
+  {
+    this.keyTimeout = 0;
+
+    // strip leading whitespace
+    var searchValue = this.DOMSearchField().value.replace(/^ +/, "");
+
+    var code = searchValue.toLowerCase().charCodeAt(0);
+    var hexCode;
+    if (code<16) 
+    {
+      hexCode="0"+code.toString(16);
+    }
+    else 
+    {
+      hexCode=code.toString(16);
+    }
+
+    var resultsPage;
+    var resultsPageWithSearch;
+    var hasResultsPage;
+
+    if (indexSectionsWithContent[this.searchIndex].charAt(code) == '1')
+    {
+       resultsPage = this.resultsPath + '/' + indexSectionNames[this.searchIndex] + '_' + hexCode + '.html';
+       resultsPageWithSearch = resultsPage+'?'+escape(searchValue);
+       hasResultsPage = true;
+    }
+    else // nothing available for this search term
+    {
+       resultsPage = this.resultsPath + '/nomatches.html';
+       resultsPageWithSearch = resultsPage;
+       hasResultsPage = false;
+    }
+
+    window.frames.MSearchResults.location = resultsPageWithSearch;  
+    var domPopupSearchResultsWindow = this.DOMPopupSearchResultsWindow();
+
+    if (domPopupSearchResultsWindow.style.display!='block')
+    {
+       var domSearchBox = this.DOMSearchBox();
+       this.DOMSearchClose().style.display = 'inline';
+       if (this.insideFrame)
+       {
+         var domPopupSearchResults = this.DOMPopupSearchResults();
+         domPopupSearchResultsWindow.style.position = 'relative';
+         domPopupSearchResultsWindow.style.display  = 'block';
+         var width = document.body.clientWidth - 8; // the -8 is for IE :-(
+         domPopupSearchResultsWindow.style.width    = width + 'px';
+         domPopupSearchResults.style.width          = width + 'px';
+       }
+       else
+       {
+         var domPopupSearchResults = this.DOMPopupSearchResults();
+         var left = getXPos(domSearchBox) + 150; // domSearchBox.offsetWidth;
+         var top  = getYPos(domSearchBox) + 20;  // domSearchBox.offsetHeight + 1;
+         domPopupSearchResultsWindow.style.display = 'block';
+         left -= domPopupSearchResults.offsetWidth;
+         domPopupSearchResultsWindow.style.top     = top  + 'px';
+         domPopupSearchResultsWindow.style.left    = left + 'px';
+       }
+    }
+
+    this.lastSearchValue = searchValue;
+    this.lastResultsPage = resultsPage;
+  }
+
+  // -------- Activation Functions
+
+  // Activates or deactivates the search panel, resetting things to 
+  // their default values if necessary. 
+  this.Activate = function(isActive)
+  {
+    if (isActive || // open it
+        this.DOMPopupSearchResultsWindow().style.display == 'block' 
+       )
+    {
+      this.DOMSearchBox().className = 'MSearchBoxActive';
+
+      var searchField = this.DOMSearchField();
+
+      if (searchField.value == this.searchLabel) // clear "Search" term upon entry
+      {  
+        searchField.value = '';  
+        this.searchActive = true;
+      }
+    }
+    else if (!isActive) // directly remove the panel
+    {
+      this.DOMSearchBox().className = 'MSearchBoxInactive';
+      this.DOMSearchField().value   = this.searchLabel;
+      this.searchActive             = false;
+      this.lastSearchValue          = ''
+      this.lastResultsPage          = '';
+    }
+  }
+}
+
+// -----------------------------------------------------------------------
+
+// The class that handles everything on the search results page.
+function SearchResults(name)
+{
+    // The number of matches from the last run of <Search()>.
+    this.lastMatchCount = 0;
+    this.lastKey = 0;
+    this.repeatOn = false;
+
+    // Toggles the visibility of the passed element ID.
+    this.FindChildElement = function(id)
+    {
+      var parentElement = document.getElementById(id);
+      var element = parentElement.firstChild;
+
+      while (element && element!=parentElement)
+      {
+        if (element.nodeName == 'DIV' && element.className == 'SRChildren')
+        {
+          return element;
+        }
+
+        if (element.nodeName == 'DIV' && element.hasChildNodes())
+        {  
+           element = element.firstChild;  
+        }
+        else if (element.nextSibling)
+        {  
+           element = element.nextSibling;  
+        }
+        else
+        {
+          do
+          {
+            element = element.parentNode;
+          }
+          while (element && element!=parentElement && !element.nextSibling);
+
+          if (element && element!=parentElement)
+          {  
+            element = element.nextSibling;  
+          }
+        }
+      }
+    }
+
+    this.Toggle = function(id)
+    {
+      var element = this.FindChildElement(id);
+      if (element)
+      {
+        if (element.style.display == 'block')
+        {
+          element.style.display = 'none';
+        }
+        else
+        {
+          element.style.display = 'block';
+        }
+      }
+    }
+
+    // Searches for the passed string.  If there is no parameter,
+    // it takes it from the URL query.
+    //
+    // Always returns true, since other documents may try to call it
+    // and that may or may not be possible.
+    this.Search = function(search)
+    {
+      if (!search) // get search word from URL
+      {
+        search = window.location.search;
+        search = search.substring(1);  // Remove the leading '?'
+        search = unescape(search);
+      }
+
+      search = search.replace(/^ +/, ""); // strip leading spaces
+      search = search.replace(/ +$/, ""); // strip trailing spaces
+      search = search.toLowerCase();
+      search = convertToId(search);
+
+      var resultRows = document.getElementsByTagName("div");
+      var matches = 0;
+
+      var i = 0;
+      while (i < resultRows.length)
+      {
+        var row = resultRows.item(i);
+        if (row.className == "SRResult")
+        {
+          var rowMatchName = row.id.toLowerCase();
+          rowMatchName = rowMatchName.replace(/^sr\d*_/, ''); // strip 'sr123_'
+
+          if (search.length<=rowMatchName.length && 
+             rowMatchName.substr(0, search.length)==search)
+          {
+            row.style.display = 'block';
+            matches++;
+          }
+          else
+          {
+            row.style.display = 'none';
+          }
+        }
+        i++;
+      }
+      document.getElementById("Searching").style.display='none';
+      if (matches == 0) // no results
+      {
+        document.getElementById("NoMatches").style.display='block';
+      }
+      else // at least one result
+      {
+        document.getElementById("NoMatches").style.display='none';
+      }
+      this.lastMatchCount = matches;
+      return true;
+    }
+
+    // return the first item with index index or higher that is visible
+    this.NavNext = function(index)
+    {
+      var focusItem;
+      while (1)
+      {
+        var focusName = 'Item'+index;
+        focusItem = document.getElementById(focusName);
+        if (focusItem && focusItem.parentNode.parentNode.style.display=='block')
+        {
+          break;
+        }
+        else if (!focusItem) // last element
+        {
+          break;
+        }
+        focusItem=null;
+        index++;
+      }
+      return focusItem;
+    }
+
+    this.NavPrev = function(index)
+    {
+      var focusItem;
+      while (1)
+      {
+        var focusName = 'Item'+index;
+        focusItem = document.getElementById(focusName);
+        if (focusItem && focusItem.parentNode.parentNode.style.display=='block')
+        {
+          break;
+        }
+        else if (!focusItem) // last element
+        {
+          break;
+        }
+        focusItem=null;
+        index--;
+      }
+      return focusItem;
+    }
+
+    this.ProcessKeys = function(e)
+    {
+      if (e.type == "keydown") 
+      {
+        this.repeatOn = false;
+        this.lastKey = e.keyCode;
+      }
+      else if (e.type == "keypress")
+      {
+        if (!this.repeatOn)
+        {
+          if (this.lastKey) this.repeatOn = true;
+          return false; // ignore first keypress after keydown
+        }
+      }
+      else if (e.type == "keyup")
+      {
+        this.lastKey = 0;
+        this.repeatOn = false;
+      }
+      return this.lastKey!=0;
+    }
+
+    this.Nav = function(evt,itemIndex) 
+    {
+      var e  = (evt) ? evt : window.event; // for IE
+      if (e.keyCode==13) return true;
+      if (!this.ProcessKeys(e)) return false;
+
+      if (this.lastKey==38) // Up
+      {
+        var newIndex = itemIndex-1;
+        var focusItem = this.NavPrev(newIndex);
+        if (focusItem)
+        {
+          var child = this.FindChildElement(focusItem.parentNode.parentNode.id);
+          if (child && child.style.display == 'block') // children visible
+          { 
+            var n=0;
+            var tmpElem;
+            while (1) // search for last child
+            {
+              tmpElem = document.getElementById('Item'+newIndex+'_c'+n);
+              if (tmpElem)
+              {
+                focusItem = tmpElem;
+              }
+              else // found it!
+              {
+                break;
+              }
+              n++;
+            }
+          }
+        }
+        if (focusItem)
+        {
+          focusItem.focus();
+        }
+        else // return focus to search field
+        {
+           parent.document.getElementById("MSearchField").focus();
+        }
+      }
+      else if (this.lastKey==40) // Down
+      {
+        var newIndex = itemIndex+1;
+        var focusItem;
+        var item = document.getElementById('Item'+itemIndex);
+        var elem = this.FindChildElement(item.parentNode.parentNode.id);
+        if (elem && elem.style.display == 'block') // children visible
+        {
+          focusItem = document.getElementById('Item'+itemIndex+'_c0');
+        }
+        if (!focusItem) focusItem = this.NavNext(newIndex);
+        if (focusItem)  focusItem.focus();
+      }
+      else if (this.lastKey==39) // Right
+      {
+        var item = document.getElementById('Item'+itemIndex);
+        var elem = this.FindChildElement(item.parentNode.parentNode.id);
+        if (elem) elem.style.display = 'block';
+      }
+      else if (this.lastKey==37) // Left
+      {
+        var item = document.getElementById('Item'+itemIndex);
+        var elem = this.FindChildElement(item.parentNode.parentNode.id);
+        if (elem) elem.style.display = 'none';
+      }
+      else if (this.lastKey==27) // Escape
+      {
+        parent.searchBox.CloseResultsWindow();
+        parent.document.getElementById("MSearchField").focus();
+      }
+      else if (this.lastKey==13) // Enter
+      {
+        return true;
+      }
+      return false;
+    }
+
+    this.NavChild = function(evt,itemIndex,childIndex)
+    {
+      var e  = (evt) ? evt : window.event; // for IE
+      if (e.keyCode==13) return true;
+      if (!this.ProcessKeys(e)) return false;
+
+      if (this.lastKey==38) // Up
+      {
+        if (childIndex>0)
+        {
+          var newIndex = childIndex-1;
+          document.getElementById('Item'+itemIndex+'_c'+newIndex).focus();
+        }
+        else // already at first child, jump to parent
+        {
+          document.getElementById('Item'+itemIndex).focus();
+        }
+      }
+      else if (this.lastKey==40) // Down
+      {
+        var newIndex = childIndex+1;
+        var elem = document.getElementById('Item'+itemIndex+'_c'+newIndex);
+        if (!elem) // last child, jump to parent next parent
+        {
+          elem = this.NavNext(itemIndex+1);
+        }
+        if (elem)
+        {
+          elem.focus();
+        } 
+      }
+      else if (this.lastKey==27) // Escape
+      {
+        parent.searchBox.CloseResultsWindow();
+        parent.document.getElementById("MSearchField").focus();
+      }
+      else if (this.lastKey==13) // Enter
+      {
+        return true;
+      }
+      return false;
+    }
+}
+
+function setKeyActions(elem,action)
+{
+  elem.setAttribute('onkeydown',action);
+  elem.setAttribute('onkeypress',action);
+  elem.setAttribute('onkeyup',action);
+}
+
+function setClassAttr(elem,attr)
+{
+  elem.setAttribute('class',attr);
+  elem.setAttribute('className',attr);
+}
+
+function createResults()
+{
+  var results = document.getElementById("SRResults");
+  for (var e=0; e<searchData.length; e++)
+  {
+    var id = searchData[e][0];
+    var srResult = document.createElement('div');
+    srResult.setAttribute('id','SR_'+id);
+    setClassAttr(srResult,'SRResult');
+    var srEntry = document.createElement('div');
+    setClassAttr(srEntry,'SREntry');
+    var srLink = document.createElement('a');
+    srLink.setAttribute('id','Item'+e);
+    setKeyActions(srLink,'return searchResults.Nav(event,'+e+')');
+    setClassAttr(srLink,'SRSymbol');
+    srLink.innerHTML = searchData[e][1][0];
+    srEntry.appendChild(srLink);
+    if (searchData[e][1].length==2) // single result
+    {
+      srLink.setAttribute('href',searchData[e][1][1][0]);
+      if (searchData[e][1][1][1])
+      {
+       srLink.setAttribute('target','_parent');
+      }
+      var srScope = document.createElement('span');
+      setClassAttr(srScope,'SRScope');
+      srScope.innerHTML = searchData[e][1][1][2];
+      srEntry.appendChild(srScope);
+    }
+    else // multiple results
+    {
+      srLink.setAttribute('href','javascript:searchResults.Toggle("SR_'+id+'")');
+      var srChildren = document.createElement('div');
+      setClassAttr(srChildren,'SRChildren');
+      for (var c=0; c<searchData[e][1].length-1; c++)
+      {
+        var srChild = document.createElement('a');
+        srChild.setAttribute('id','Item'+e+'_c'+c);
+        setKeyActions(srChild,'return searchResults.NavChild(event,'+e+','+c+')');
+        setClassAttr(srChild,'SRScope');
+        srChild.setAttribute('href',searchData[e][1][c+1][0]);
+        if (searchData[e][1][c+1][1])
+        {
+         srChild.setAttribute('target','_parent');
+        }
+        srChild.innerHTML = searchData[e][1][c+1][2];
+        srChildren.appendChild(srChild);
+      }
+      srEntry.appendChild(srChildren);
+    }
+    srResult.appendChild(srEntry);
+    results.appendChild(srResult);
+  }
+}
+
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/search_l.png b/linux-3.17.1/net/gmtp/doc/html/search/search_l.png
new file mode 100644
index 0000000..c872f4d
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/search/search_l.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/search_m.png b/linux-3.17.1/net/gmtp/doc/html/search/search_m.png
new file mode 100644
index 0000000..b429a16
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/search/search_m.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/search_r.png b/linux-3.17.1/net/gmtp/doc/html/search/search_r.png
new file mode 100644
index 0000000..97ee8b4
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/search/search_r.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_5f.html b/linux-3.17.1/net/gmtp/doc/html/search/variables_5f.html
new file mode 100644
index 0000000..375abd9
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_5f.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="variables_5f.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_5f.js b/linux-3.17.1/net/gmtp/doc/html/search/variables_5f.js
new file mode 100644
index 0000000..3ec5d44
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_5f.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['_5f_5fread_5fmostly',['__read_mostly',['../ipv4_8c.html#a32e197949743cd2e118c0724f2069d67',1,'ipv4.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_62.html b/linux-3.17.1/net/gmtp/doc/html/search/variables_62.html
new file mode 100644
index 0000000..c55a15e
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_62.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="variables_62.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_62.js b/linux-3.17.1/net/gmtp/doc/html/search/variables_62.js
new file mode 100644
index 0000000..bbbdcd3
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_62.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['body',['body',['../input_8c.html#a14d48c2e9f05d0b03044eb45f308fcb0',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_63.html b/linux-3.17.1/net/gmtp/doc/html/search/variables_63.html
new file mode 100644
index 0000000..c649c81
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_63.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="variables_63.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_63.js b/linux-3.17.1/net/gmtp/doc/html/search/variables_63.js
new file mode 100644
index 0000000..98e41cd
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_63.js
@@ -0,0 +1,5 @@
+var searchData=
+[
+  ['code',['code',['../input_8c.html#a8aac502ae7db0ae611e00082aa682158',1,'input.c']]],
+  ['coderef',['codeRef',['../input_8c.html#a31f1a4bde92d4c390bf0e584473ee0da',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_64.html b/linux-3.17.1/net/gmtp/doc/html/search/variables_64.html
new file mode 100644
index 0000000..fee6769
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_64.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="variables_64.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_64.js b/linux-3.17.1/net/gmtp/doc/html/search/variables_64.js
new file mode 100644
index 0000000..e92ad75
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_64.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['div',['div',['../input_8c.html#a00b49825eb9b4ffce1a4877d83ce126c',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_65.html b/linux-3.17.1/net/gmtp/doc/html/search/variables_65.html
new file mode 100644
index 0000000..95b64e6
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_65.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="variables_65.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_65.js b/linux-3.17.1/net/gmtp/doc/html/search/variables_65.js
new file mode 100644
index 0000000..fb98c32
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_65.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['exception',['exception',['../input_8c.html#aec2b4fd1f327cbebb003cfc415e8bccb',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_67.html b/linux-3.17.1/net/gmtp/doc/html/search/variables_67.html
new file mode 100644
index 0000000..a7dd438
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_67.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="variables_67.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_67.js b/linux-3.17.1/net/gmtp/doc/html/search/variables_67.js
new file mode 100644
index 0000000..d602f7d
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_67.js
@@ -0,0 +1,11 @@
+var searchData=
+[
+  ['glow',['glow',['../input_8c.html#a4e8818cd817685ac2ce39fc911f9d42f',1,'input.c']]],
+  ['gmtp_5fdeath_5frow',['gmtp_death_row',['../ipv4_8c.html#a304672a5f2e443d5c24f0c7d520a2299',1,'gmtp_death_row():&#160;proto.c'],['../proto_8c.html#a304672a5f2e443d5c24f0c7d520a2299',1,'gmtp_death_row():&#160;proto.c']]],
+  ['gmtp_5fhashinfo',['gmtp_hashinfo',['../gmtp_8h.html#ab43beb876bb256a2f539107b7f589c44',1,'gmtp_hashinfo():&#160;proto.c'],['../proto_8c.html#ab43beb876bb256a2f539107b7f589c44',1,'gmtp_hashinfo():&#160;proto.c']]],
+  ['gmtp_5forphan_5fcount',['gmtp_orphan_count',['../gmtp_8h.html#acab13337f0e829de92aa24505a723eae',1,'gmtp.h']]],
+  ['gmtpd_5freset_5fcode',['gmtpd_reset_code',['../gmtp_8h.html#a5f970494c68fc06c84823c233ed9d6a8',1,'gmtp_skb_cb']]],
+  ['gmtpd_5freset_5fdata',['gmtpd_reset_data',['../gmtp_8h.html#a766db441c404018311173c1171ef917a',1,'gmtp_skb_cb']]],
+  ['gmtpd_5fseq',['gmtpd_seq',['../gmtp_8h.html#ac2ed3bbe3289ce05b2fa7847c5e67da6',1,'gmtp_skb_cb']]],
+  ['gmtpd_5ftype',['gmtpd_type',['../gmtp_8h.html#a40635375f5d8223a8de70b79833c32c2',1,'gmtp_skb_cb']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_68.html b/linux-3.17.1/net/gmtp/doc/html/search/variables_68.html
new file mode 100644
index 0000000..f11c2c9
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_68.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="variables_68.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_68.js b/linux-3.17.1/net/gmtp/doc/html/search/variables_68.js
new file mode 100644
index 0000000..47c71dd
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_68.js
@@ -0,0 +1,7 @@
+var searchData=
+[
+  ['h2',['h2',['../input_8c.html#ac9e7e0722796a9a2748cfe71e5c1eacb',1,'input.c']]],
+  ['h3',['h3',['../input_8c.html#ad8bba894a37a322932dc80e05de59fe3',1,'input.c']]],
+  ['h4',['h4',['../input_8c.html#af78ff2250f8c44a8f1d4533787151cda',1,'input.c']]],
+  ['h5',['h5',['../input_8c.html#ab30ad01496f14e60d923a1937ffc98d4',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_6d.html b/linux-3.17.1/net/gmtp/doc/html/search/variables_6d.html
new file mode 100644
index 0000000..b7924e3
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_6d.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="variables_6d.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_6d.js b/linux-3.17.1/net/gmtp/doc/html/search/variables_6d.js
new file mode 100644
index 0000000..3824354
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_6d.js
@@ -0,0 +1,8 @@
+var searchData=
+[
+  ['mdescright',['mdescRight',['../input_8c.html#a4591bd51e10e1bcc441acd6d675fbaa9',1,'input.c']]],
+  ['memitemleft',['memItemLeft',['../input_8c.html#a0407e3019d5f5cf8b15fe00d27e91fdd',1,'input.c']]],
+  ['memitemright',['memItemRight',['../input_8c.html#a2fde2671b1dacc9d87f4268184483eef',1,'input.c']]],
+  ['memtemplitemleft',['memTemplItemLeft',['../input_8c.html#a16459c9f19af9d4e45fa309d4c3d88dc',1,'input.c']]],
+  ['memtemplitemright',['memTemplItemRight',['../input_8c.html#af091022274dd4a202d587f3acae35aa9',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_70.html b/linux-3.17.1/net/gmtp/doc/html/search/variables_70.html
new file mode 100644
index 0000000..bc5c193
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_70.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="variables_70.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_70.js b/linux-3.17.1/net/gmtp/doc/html/search/variables_70.js
new file mode 100644
index 0000000..84188e2
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_70.js
@@ -0,0 +1,5 @@
+var searchData=
+[
+  ['p',['p',['../input_8c.html#ac483f6ce851c9ecd9fb835ff7551737c',1,'input.c']]],
+  ['post',['post',['../input_8c.html#aaea8ed8d01160ec7de3bdcf28525449c',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_72.html b/linux-3.17.1/net/gmtp/doc/html/search/variables_72.html
new file mode 100644
index 0000000..29b87f0
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_72.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="variables_72.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_72.js b/linux-3.17.1/net/gmtp/doc/html/search/variables_72.js
new file mode 100644
index 0000000..3c7cb7a
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_72.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['retval',['retval',['../input_8c.html#a7f3fcc3b39464696f5682f787eb99368',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_73.html b/linux-3.17.1/net/gmtp/doc/html/search/variables_73.html
new file mode 100644
index 0000000..65b8f64
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_73.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="variables_73.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_73.js b/linux-3.17.1/net/gmtp/doc/html/search/variables_73.js
new file mode 100644
index 0000000..10741de
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_73.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['startdd',['startdd',['../input_8c.html#acb48d3101db87d75430b587051623cb1',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_74.html b/linux-3.17.1/net/gmtp/doc/html/search/variables_74.html
new file mode 100644
index 0000000..6093922
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_74.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html><head><title></title>
+<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
+<link rel="stylesheet" type="text/css" href="search.css"/>
+<script type="text/javascript" src="variables_74.js"></script>
+<script type="text/javascript" src="search.js"></script>
+</head>
+<body class="SRPage">
+<div id="SRIndex">
+<div class="SRStatus" id="Loading">Loading...</div>
+<div id="SRResults"></div>
+<script type="text/javascript"><!--
+createResults();
+--></script>
+<div class="SRStatus" id="Searching">Searching...</div>
+<div class="SRStatus" id="NoMatches">No Matches</div>
+<script type="text/javascript"><!--
+document.getElementById("Loading").style.display="none";
+document.getElementById("NoMatches").style.display="none";
+var searchResults = new SearchResults("searchResults");
+searchResults.Search();
+--></script>
+</div>
+</body>
+</html>
diff --git a/linux-3.17.1/net/gmtp/doc/html/search/variables_74.js b/linux-3.17.1/net/gmtp/doc/html/search/variables_74.js
new file mode 100644
index 0000000..201a36b
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/search/variables_74.js
@@ -0,0 +1,4 @@
+var searchData=
+[
+  ['table',['table',['../input_8c.html#ab172ed3d3d31ff02fc5f798fe7e1bfb8',1,'input.c']]]
+];
diff --git a/linux-3.17.1/net/gmtp/doc/html/tab_a.png b/linux-3.17.1/net/gmtp/doc/html/tab_a.png
new file mode 100644
index 0000000..3b725c4
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/tab_a.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/tab_b.png b/linux-3.17.1/net/gmtp/doc/html/tab_b.png
new file mode 100644
index 0000000..258c141
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/tab_b.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/tab_h.png b/linux-3.17.1/net/gmtp/doc/html/tab_h.png
new file mode 100644
index 0000000..4ca9102
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/tab_h.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/tab_s.png b/linux-3.17.1/net/gmtp/doc/html/tab_s.png
new file mode 100644
index 0000000..ab478c9
Binary files /dev/null and b/linux-3.17.1/net/gmtp/doc/html/tab_s.png differ
diff --git a/linux-3.17.1/net/gmtp/doc/html/tabs.css b/linux-3.17.1/net/gmtp/doc/html/tabs.css
new file mode 100644
index 0000000..2192056
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/html/tabs.css
@@ -0,0 +1,59 @@
+.tabs, .tabs2, .tabs3 {
+    background-image: url('tab_b.png');
+    width: 100%;
+    z-index: 101;
+    font-size: 13px;
+}
+
+.tabs2 {
+    font-size: 10px;
+}
+.tabs3 {
+    font-size: 9px;
+}
+
+.tablist {
+    margin: 0;
+    padding: 0;
+    display: table;
+}
+
+.tablist li {
+    float: left;
+    display: table-cell;
+    background-image: url('tab_b.png');
+    line-height: 36px;
+    list-style: none;
+}
+
+.tablist a {
+    display: block;
+    padding: 0 20px;
+    font-weight: bold;
+    background-image:url('tab_s.png');
+    background-repeat:no-repeat;
+    background-position:right;
+    color: #283A5D;
+    text-shadow: 0px 1px 1px rgba(255, 255, 255, 0.9);
+    text-decoration: none;
+    outline: none;
+}
+
+.tabs3 .tablist a {
+    padding: 0 10px;
+}
+
+.tablist a:hover {
+    background-image: url('tab_h.png');
+    background-repeat:repeat-x;
+    color: #fff;
+    text-shadow: 0px 1px 1px rgba(0, 0, 0, 1.0);
+    text-decoration: none;
+}
+
+.tablist li.current a {
+    background-image: url('tab_a.png');
+    background-repeat:repeat-x;
+    color: #fff;
+    text-shadow: 0px 1px 1px rgba(0, 0, 0, 1.0);
+}
diff --git a/linux-3.17.1/net/gmtp/doc/latex/Makefile b/linux-3.17.1/net/gmtp/doc/latex/Makefile
new file mode 100644
index 0000000..083d8b1
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/Makefile
@@ -0,0 +1,19 @@
+all: refman.pdf
+
+pdf: refman.pdf
+
+refman.pdf: clean refman.tex
+	pdflatex refman
+	makeindex refman.idx
+	pdflatex refman
+	latex_count=5 ; \
+	while egrep -s 'Rerun (LaTeX|to get cross-references right)' refman.log && [ $$latex_count -gt 0 ] ;\
+	    do \
+	      echo "Rerunning latex...." ;\
+	      pdflatex refman ;\
+	      latex_count=`expr $$latex_count - 1` ;\
+	    done
+
+
+clean:
+	rm -f *.ps *.dvi *.aux *.toc *.idx *.ind *.ilg *.log *.out *.brf *.blg *.bbl refman.pdf
diff --git a/linux-3.17.1/net/gmtp/doc/latex/doxygen.sty b/linux-3.17.1/net/gmtp/doc/latex/doxygen.sty
new file mode 100644
index 0000000..2432d98
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/doxygen.sty
@@ -0,0 +1,484 @@
+\NeedsTeXFormat{LaTeX2e}
+\ProvidesPackage{doxygen}
+
+% Packages used by this style file
+\RequirePackage{alltt}
+\RequirePackage{array}
+\RequirePackage{calc}
+\RequirePackage{color}
+\RequirePackage{fancyhdr}
+\RequirePackage{longtable}
+\RequirePackage{verbatim}
+\RequirePackage{ifthen}
+\RequirePackage{xtab}
+\RequirePackage{multirow}
+\RequirePackage[table]{xcolor}
+
+% Use helvetica font instead of times roman
+\RequirePackage{helvet}
+\RequirePackage{sectsty}
+\RequirePackage{tocloft}
+\providecommand{\rmdefault}{phv}
+\providecommand{\bfdefault}{bc}
+
+
+% Setup fancy headings
+\pagestyle{fancyplain}
+\newcommand{\clearemptydoublepage}{%
+  \newpage{\pagestyle{empty}\cleardoublepage}%
+}
+\renewcommand{\chaptermark}[1]{%
+  \markboth{#1}{}%
+}
+\renewcommand{\sectionmark}[1]{%
+  \markright{\thesection\ #1}%
+}
+\fancyhead[LE]{\fancyplain{}{\bfseries\thepage}}
+\fancyhead[CE]{\fancyplain{}{}}
+\fancyhead[RE]{\fancyplain{}{\bfseries\leftmark}}
+\fancyhead[LO]{\fancyplain{}{\bfseries\rightmark}}
+\fancyhead[CO]{\fancyplain{}{}}
+\fancyhead[RO]{\fancyplain{}{\bfseries\thepage}}
+\fancyfoot[LE]{\fancyplain{}{}}
+\fancyfoot[CE]{\fancyplain{}{}}
+\fancyfoot[RE]{\fancyplain{}{\bfseries\scriptsize Generated on Thu Dec 18 2014 12\-:04\-:43 for gmtp by Doxygen }}
+\fancyfoot[LO]{\fancyplain{}{\bfseries\scriptsize Generated on Thu Dec 18 2014 12\-:04\-:43 for gmtp by Doxygen }}
+\fancyfoot[CO]{\fancyplain{}{}}
+\fancyfoot[RO]{\fancyplain{}{}}
+%---------- Internal commands used in this style file ----------------
+
+\newcommand\tabfill[1]{%
+  \dimen@\linewidth%
+  \advance\dimen@\@totalleftmargin%
+  \advance\dimen@-\dimen\@curtab%
+  \parbox[t]\dimen@{\raggedright #1\ifhmode\strut\fi}%
+}
+
+\newcommand{\ensurespace}[1]{%
+  \begingroup
+    \setlength{\dimen@}{#1}%
+    \vskip\z@\@plus\dimen@
+    \penalty -100\vskip\z@\@plus -\dimen@
+    \vskip\dimen@
+    \penalty 9999%
+    \vskip -\dimen@
+    \vskip\z@skip % hide the previous |\vskip| from |\addvspace|
+  \endgroup
+}
+
+% Generic environment used by all paragraph-based environments defined
+% below. Note that the command \title{...} needs to be defined inside
+% those environments!
+\newenvironment{DoxyDesc}[1]{%
+  \ensurespace{4\baselineskip}%
+  \begin{list}{}%
+  {%
+    \settowidth{\labelwidth}{40pt}%
+    \setlength{\leftmargin}{\labelwidth}%
+    \setlength{\parsep}{0pt}%
+    \setlength{\itemsep}{-4pt}%
+    \renewcommand{\makelabel}{\entrylabel}%
+  }%
+  \item[#1]%
+}{%
+  \end{list}%
+}
+
+%---------- Commands used by doxygen LaTeX output generator ----------
+
+% Used by <pre> ... </pre>
+\newenvironment{DoxyPre}{%
+  \small%
+  \begin{alltt}%
+}{%
+  \end{alltt}%
+  \normalsize%
+}
+
+% Used by @code ... @endcode
+\newenvironment{DoxyCode}{%
+
+
+\begin{scriptsize}\begin{alltt}%
+}{%
+\end{alltt}\end{scriptsize}%
+}
+
+% Used by @example, @include, @includelineno and @dontinclude
+\newenvironment{DoxyCodeInclude}{%
+  \DoxyCode%
+}{%
+  \endDoxyCode%
+}
+
+% Used by @verbatim ... @endverbatim
+\newenvironment{DoxyVerb}{%
+  \footnotesize%
+  \verbatim%
+}{%
+  \endverbatim%
+  \normalsize%
+}
+
+% Used by @verbinclude
+\newenvironment{DoxyVerbInclude}{%
+  \DoxyVerb%
+}{%
+  \endDoxyVerb%
+}
+
+% Used by numbered lists (using '-#' or <ol> ... </ol>)
+\newenvironment{DoxyEnumerate}{%
+  \enumerate%
+}{%
+  \endenumerate%
+}
+
+% Used by bullet lists (using '-', @li, @arg, or <ul> ... </ul>)
+\newenvironment{DoxyItemize}{%
+  \itemize%
+}{%
+  \enditemize%
+}
+
+% Used by description lists (using <dl> ... </dl>)
+\newenvironment{DoxyDescription}{%
+  \description%
+}{%
+  \enddescription%
+}
+
+% Used by @image, @dotfile, and @dot ... @enddot
+% (only if caption is specified)
+\newenvironment{DoxyImage}{%
+  \begin{figure}[H]%
+  \begin{center}%
+}{%
+  \end{center}%
+  \end{figure}%
+}
+
+% Used by @image, @dotfile, @dot ... @enddot, and @msc ... @endmsc
+% (only if no caption is specified)
+\newenvironment{DoxyImageNoCaption}{%
+}{%
+}
+
+% Used by @attention
+\newenvironment{DoxyAttention}[1]{%
+  \begin{DoxyDesc}{#1}%
+}{%
+  \end{DoxyDesc}%
+}
+
+% Used by @author and @authors
+\newenvironment{DoxyAuthor}[1]{%
+  \begin{DoxyDesc}{#1}%
+}{%
+  \end{DoxyDesc}%
+}
+
+% Used by @date
+\newenvironment{DoxyDate}[1]{%
+  \begin{DoxyDesc}{#1}%
+}{%
+  \end{DoxyDesc}%
+}
+
+% Used by @invariant
+\newenvironment{DoxyInvariant}[1]{%
+  \begin{DoxyDesc}{#1}%
+}{%
+  \end{DoxyDesc}%
+}
+
+% Used by @note
+\newenvironment{DoxyNote}[1]{%
+  \begin{DoxyDesc}{#1}%
+}{%
+  \end{DoxyDesc}%
+}
+
+% Used by @post
+\newenvironment{DoxyPostcond}[1]{%
+  \begin{DoxyDesc}{#1}%
+}{%
+  \end{DoxyDesc}%
+}
+
+% Used by @pre
+\newenvironment{DoxyPrecond}[1]{%
+  \begin{DoxyDesc}{#1}%
+}{%
+  \end{DoxyDesc}%
+}
+
+% Used by @copyright
+\newenvironment{DoxyCopyright}[1]{%
+  \begin{DoxyDesc}{#1}%
+}{%
+  \end{DoxyDesc}%
+}
+
+% Used by @remark
+\newenvironment{DoxyRemark}[1]{%
+  \begin{DoxyDesc}{#1}%
+}{%
+  \end{DoxyDesc}%
+}
+
+% Used by @return
+\newenvironment{DoxyReturn}[1]{%
+  \begin{DoxyDesc}{#1}%
+}{%
+  \end{DoxyDesc}%
+}
+
+% Used by @since
+\newenvironment{DoxySince}[1]{%
+  \begin{DoxyDesc}{#1}%
+}{%
+  \end{DoxyDesc}%
+}
+
+% Used by @see
+\newenvironment{DoxySeeAlso}[1]{%
+  \begin{DoxyDesc}{#1}%
+}{%
+  \end{DoxyDesc}%
+}
+
+% Used by @version
+\newenvironment{DoxyVersion}[1]{%
+  \begin{DoxyDesc}{#1}%
+}{%
+  \end{DoxyDesc}%
+}
+
+% Used by @warning
+\newenvironment{DoxyWarning}[1]{%
+  \begin{DoxyDesc}{#1}%
+}{%
+  \end{DoxyDesc}%
+}
+
+% Used by @internal
+\newenvironment{DoxyInternal}[1]{%
+  \paragraph*{#1}%
+}{%
+}
+
+% Used by @par and @paragraph
+\newenvironment{DoxyParagraph}[1]{%
+  \begin{list}{}%
+  {%
+    \settowidth{\labelwidth}{40pt}%
+    \setlength{\leftmargin}{\labelwidth}%
+    \setlength{\parsep}{0pt}%
+    \setlength{\itemsep}{-4pt}%
+    \renewcommand{\makelabel}{\entrylabel}%
+  }%
+  \item[#1]%
+}{%
+  \end{list}%
+}
+
+% Used by parameter lists
+\newenvironment{DoxyParams}[2][]{%
+  \begin{DoxyDesc}{#2}%
+    \item[] \hspace{\fill} \vspace{-40pt}%
+    \settowidth{\labelwidth}{40pt}%
+    \setlength{\LTleft}{0pt}%
+    \setlength{\tabcolsep}{0.01\textwidth}%
+    \ifthenelse{\equal{#1}{}}%
+    {\begin{longtable}{|>{\raggedleft\hspace{0pt}}p{0.15\textwidth}|%
+                        p{0.815\textwidth}|}}%
+    {\ifthenelse{\equal{#1}{1}}%
+      {\begin{longtable}{|>{\centering}p{0.10\textwidth}|%
+                         >{\raggedleft\hspace{0pt}}p{0.15\textwidth}|%
+                         p{0.685\textwidth}|}}%
+      {\begin{longtable}{|>{\centering}p{0.10\textwidth}|%
+                         >{\centering\hspace{0pt}}p{0.15\textwidth}|%
+                         >{\raggedleft\hspace{0pt}}p{0.15\textwidth}|%
+                         p{0.515\textwidth}|}}%
+    }\hline%
+}{%
+    \end{longtable}%
+  \end{DoxyDesc}%
+}
+
+% Used for fields of simple structs
+\newenvironment{DoxyFields}[1]{%
+  \begin{DoxyDesc}{#1}%
+    \item[] \hspace{\fill} \vspace{-40pt}%
+    \settowidth{\labelwidth}{40pt}%
+    \setlength{\LTleft}{0pt}%
+    \setlength{\tabcolsep}{0.01\textwidth}%
+    \begin{longtable}{|>{\raggedleft\hspace{0pt}}p{0.15\textwidth}|%
+                         p{0.15\textwidth}|%
+                         p{0.635\textwidth}|}%
+    \hline%
+}{%
+    \end{longtable}%
+  \end{DoxyDesc}%
+}
+
+% is used for parameters within a detailed function description
+\newenvironment{DoxyParamCaption}{%
+  \renewcommand{\item}[2][]{##1 {\em ##2}}%
+  }{%
+}
+
+% Used by return value lists
+\newenvironment{DoxyRetVals}[1]{%
+  \begin{DoxyDesc}{#1}%
+    \begin{description}%
+      \item[] \hspace{\fill} \vspace{-25pt}%
+      \setlength{\tabcolsep}{0.01\textwidth}%
+      \begin{longtable}{|>{\raggedleft\hspace{0pt}}p{0.25\textwidth}|%
+                          p{0.77\textwidth}|}%
+      \hline%
+}{%
+      \end{longtable}%
+    \end{description}%
+  \end{DoxyDesc}%
+}
+
+% Used by exception lists
+\newenvironment{DoxyExceptions}[1]{%
+  \begin{DoxyDesc}{#1}%
+    \begin{description}%
+      \item[] \hspace{\fill} \vspace{-25pt}%
+      \definecolor{tableShade}{HTML}{F8F8F8}%
+      \rowcolors{1}{white}{tableShade}%
+      \arrayrulecolor{gray}%
+      \setlength{\tabcolsep}{0.01\textwidth}%
+      \begin{longtable}{|>{\raggedleft\hspace{0pt}}p{0.25\textwidth}|%
+                          p{0.77\textwidth}|}%
+      \hline%
+}{%
+      \end{longtable}%
+    \end{description}%
+  \end{DoxyDesc}%
+}
+
+% Used by template parameter lists
+\newenvironment{DoxyTemplParams}[1]{%
+  \begin{DoxyDesc}{#1}%
+    \begin{description}%
+      \item[] \hspace{\fill} \vspace{-25pt}%
+      \definecolor{tableShade}{HTML}{F8F8F8}%
+      \rowcolors{1}{white}{tableShade}%
+      \arrayrulecolor{gray}%
+      \setlength{\tabcolsep}{0.01\textwidth}%
+      \begin{longtable}{|>{\raggedleft\hspace{0pt}}p{0.25\textwidth}|%
+                          p{0.77\textwidth}|}%
+      \hline%
+}{%
+      \end{longtable}%
+    \end{description}%
+  \end{DoxyDesc}%
+}
+
+\newcommand{\doxyref}[3]{\textbf{#1} (\textnormal{#2}\,\pageref{#3})}
+\newenvironment{DoxyCompactList}
+{\begin{list}{}{
+  \setlength{\leftmargin}{0.5cm}
+  \setlength{\itemsep}{0pt}
+  \setlength{\parsep}{0pt}
+  \setlength{\topsep}{0pt}
+  \renewcommand{\makelabel}{\hfill}}}
+{\end{list}}
+\newenvironment{DoxyCompactItemize}
+{
+  \begin{itemize}
+  \setlength{\itemsep}{-3pt}
+  \setlength{\parsep}{0pt}
+  \setlength{\topsep}{0pt}
+  \setlength{\partopsep}{0pt}
+}
+{\end{itemize}}
+\newcommand{\PBS}[1]{\let\temp=\\#1\let\\=\temp}
+\newlength{\tmplength}
+\newenvironment{TabularC}[1]
+{
+\setlength{\tmplength}
+     {\linewidth/(#1)-\tabcolsep*2-\arrayrulewidth*(#1+1)/(#1)}
+      \par\begin{xtabular*}{\linewidth}
+             {*{#1}{|>{\PBS\raggedright\hspace{0pt}}p{\the\tmplength}}|}
+}
+{\end{xtabular*}\par}
+\newcommand{\entrylabel}[1]{
+   {\parbox[b]{\labelwidth-4pt}{\makebox[0pt][l]{%
+   \usefont{OT1}{phv}{bc}{n}\color{darkgray}#1}\vspace{1.5\baselineskip}}}}
+\newenvironment{Desc}
+{\begin{list}{}
+  {
+    \settowidth{\labelwidth}{40pt}
+    \setlength{\leftmargin}{\labelwidth}
+    \setlength{\parsep}{0pt}
+    \setlength{\itemsep}{-4pt}
+    \renewcommand{\makelabel}{\entrylabel}
+  }
+}
+{\end{list}}
+\newsavebox{\xrefbox}
+\newlength{\xreflength}
+\newcommand{\xreflabel}[1]{%
+  \sbox{\xrefbox}{#1}%
+  \setlength{\xreflength}{\wd\xrefbox}%
+  \ifthenelse{\xreflength>\labelwidth}{%
+    \begin{minipage}{\textwidth}%
+      \setlength{\parindent}{0pt}%
+      \hangindent=15pt\bfseries #1\vspace{1.2\itemsep}%
+    \end{minipage}%
+  }{%
+   \parbox[b]{\labelwidth}{\makebox[0pt][l]{\textbf{#1}}}%
+  }}%
+\newenvironment{DoxyRefList}{%
+  \begin{list}{}{%
+    \setlength{\labelwidth}{10pt}%
+    \setlength{\leftmargin}{\labelwidth}%
+    \addtolength{\leftmargin}{\labelsep}%
+    \renewcommand{\makelabel}{\xreflabel}%
+    }%
+  }%
+{\end{list}}
+\newenvironment{DoxyRefDesc}[1]
+{\begin{list}{}{%
+  \renewcommand\makelabel[1]{\textbf{##1}}
+  \settowidth\labelwidth{\makelabel{#1}}
+  \setlength\leftmargin{\labelwidth+\labelsep}}}
+{\end{list}}
+\newenvironment{Indent}
+  {\begin{list}{}{\setlength{\leftmargin}{0.5cm}}
+      \item[]\ignorespaces}
+  {\unskip\end{list}}
+\setlength{\parindent}{0cm}
+\setlength{\parskip}{0.2cm}
+\addtocounter{secnumdepth}{2}
+\usepackage[T1]{fontenc}
+\makeatletter
+\renewcommand{\paragraph}{\@startsection{paragraph}{4}{0ex}%
+   {-1.0ex}%
+   {1.0ex}%
+   {\usefont{OT1}{phv}{bc}{n}\color{darkgray}}}
+\renewcommand{\subparagraph}{\@startsection{subparagraph}{5}{0ex}%
+   {-1.0ex}%
+   {1.0ex}%
+   {\usefont{OT1}{phv}{bc}{n}\color{darkgray}}}
+\makeatother
+\allsectionsfont{\usefont{OT1}{phv}{bc}{n}\selectfont\color{darkgray}}
+\stepcounter{secnumdepth}
+\stepcounter{tocdepth}
+\definecolor{comment}{rgb}{0.5,0.0,0.0}
+\definecolor{keyword}{rgb}{0.0,0.5,0.0}
+\definecolor{keywordtype}{rgb}{0.38,0.25,0.125}
+\definecolor{keywordflow}{rgb}{0.88,0.5,0.0}
+\definecolor{preprocessor}{rgb}{0.5,0.38,0.125}
+\definecolor{stringliteral}{rgb}{0.0,0.125,0.25}
+\definecolor{charliteral}{rgb}{0.0,0.5,0.5}
+\definecolor{vhdldigit}{rgb}{1.0,0.0,1.0}
+\definecolor{vhdlkeyword}{rgb}{0.43,0.0,0.43}
+\definecolor{vhdllogic}{rgb}{1.0,0.0,0.0}
+\definecolor{vhdlchar}{rgb}{0.0,0.0,0.0}
diff --git a/linux-3.17.1/net/gmtp/doc/latex/files.tex b/linux-3.17.1/net/gmtp/doc/latex/files.tex
new file mode 100644
index 0000000..76788fc
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/files.tex
@@ -0,0 +1,10 @@
+\section{File List}
+Here is a list of all files with brief descriptions\-:\begin{DoxyCompactList}
+\item\contentsline{section}{\hyperlink{gmtp_8h}{gmtp.\-h} }{\pageref{gmtp_8h}}{}
+\item\contentsline{section}{\hyperlink{gmtp_8mod_8c}{gmtp.\-mod.\-c} }{\pageref{gmtp_8mod_8c}}{}
+\item\contentsline{section}{\hyperlink{gmtp__ipv4_8mod_8c}{gmtp\-\_\-ipv4.\-mod.\-c} }{\pageref{gmtp__ipv4_8mod_8c}}{}
+\item\contentsline{section}{\hyperlink{input_8c}{input.\-c} }{\pageref{input_8c}}{}
+\item\contentsline{section}{\hyperlink{ipv4_8c}{ipv4.\-c} }{\pageref{ipv4_8c}}{}
+\item\contentsline{section}{\hyperlink{output_8c}{output.\-c} }{\pageref{output_8c}}{}
+\item\contentsline{section}{\hyperlink{proto_8c}{proto.\-c} }{\pageref{proto_8c}}{}
+\end{DoxyCompactList}
diff --git a/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h.tex b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h.tex
new file mode 100644
index 0000000..2192194
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h.tex
@@ -0,0 +1,461 @@
+\hypertarget{gmtp_8h}{\section{gmtp.\-h File Reference}
+\label{gmtp_8h}\index{gmtp.\-h@{gmtp.\-h}}
+}
+{\ttfamily \#include $<$net/inet\-\_\-timewait\-\_\-sock.\-h$>$}\\*
+{\ttfamily \#include $<$net/inet\-\_\-hashtables.\-h$>$}\\*
+{\ttfamily \#include $<$uapi/asm-\/generic/errno.\-h$>$}\\*
+{\ttfamily \#include $<$linux/gmtp.\-h$>$}\\*
+{\ttfamily \#include $<$net/netns/gmtp.\-h$>$}\\*
+Include dependency graph for gmtp.\-h\-:\nopagebreak
+\begin{figure}[H]
+\begin{center}
+\leavevmode
+\includegraphics[width=350pt]{gmtp_8h__incl}
+\end{center}
+\end{figure}
+This graph shows which files directly or indirectly include this file\-:\nopagebreak
+\begin{figure}[H]
+\begin{center}
+\leavevmode
+\includegraphics[width=259pt]{gmtp_8h__dep__incl}
+\end{center}
+\end{figure}
+\subsection*{Data Structures}
+\begin{DoxyCompactItemize}
+\item 
+struct \hyperlink{gmtp_8h_structgmtp__skb__cb}{gmtp\-\_\-skb\-\_\-cb}
+\end{DoxyCompactItemize}
+\subsection*{Macros}
+\begin{DoxyCompactItemize}
+\item 
+\#define \hyperlink{gmtp_8h_ac4d88ba4957c61fad1b1e81e86e26d25}{G\-M\-T\-P\-\_\-\-I\-N\-F\-O}~\char`\"{}\mbox{[}G\-M\-T\-P\-\_\-\-I\-N\-F\-O\mbox{]} \%s\-:\%d -\/ \char`\"{}
+\item 
+\#define \hyperlink{gmtp_8h_a9bdaefac28c54404d5d18bf9f4df448f}{G\-M\-T\-P\-\_\-\-W\-A\-R\-N\-I\-N\-G}~\char`\"{}\mbox{[}G\-M\-T\-P\-\_\-\-W\-A\-R\-N\-I\-N\-G\mbox{]}  \%s\-:\%d at \%s -\/ \char`\"{}
+\item 
+\#define \hyperlink{gmtp_8h_a8f042630afadb776c9fe83ace47fac92}{G\-M\-T\-P\-\_\-\-E\-R\-R\-O\-R}~\char`\"{}\mbox{[}G\-M\-T\-P\-\_\-\-E\-R\-R\-O\-R\mbox{]} \%s\-:\%d at \%s -\/ \char`\"{}
+\item 
+\#define \hyperlink{gmtp_8h_acb14405c3e3845ce630b3330c048d3e8}{gmtp\-\_\-print\-\_\-debug}(fmt, args...)
+\item 
+\#define \hyperlink{gmtp_8h_a4e56790f2f3dc1623fbd978467ac614d}{gmtp\-\_\-print\-\_\-warning}(fmt, args...)
+\item 
+\#define \hyperlink{gmtp_8h_aef36831848715ac98879ce5642229e14}{gmtp\-\_\-print\-\_\-error}(fmt, args...)
+\item 
+\#define \hyperlink{gmtp_8h_aaa9538bb543aaffa4731989fc7ddc0d8}{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-H\-E\-A\-D\-E\-R}~(2047 $\ast$ sizeof(uint32\-\_\-t))
+\item 
+\#define \hyperlink{gmtp_8h_afb9f06378ed5523a74a21aedc7f34ea6}{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-S\-P\-E\-C\-I\-F\-I\-C\-\_\-\-H\-E\-A\-D\-E\-R}~(8 $\ast$ sizeof(uint32\-\_\-t))
+\item 
+\#define \hyperlink{gmtp_8h_aed94c10b0d5306f67874e039a60f7907}{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-V\-A\-R\-I\-A\-B\-L\-E\-\_\-\-H\-E\-A\-D\-E\-R}~(\hyperlink{gmtp_8h_aaa9538bb543aaffa4731989fc7ddc0d8}{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-H\-E\-A\-D\-E\-R} -\/ \hyperlink{gmtp_8h_afb9f06378ed5523a74a21aedc7f34ea6}{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-S\-P\-E\-C\-I\-F\-I\-C\-\_\-\-H\-E\-A\-D\-E\-R})
+\item 
+\#define \hyperlink{gmtp_8h_a5b5fd1251f0fec5bc8dda21b11d57de4}{G\-M\-T\-P\-\_\-\-T\-I\-M\-E\-O\-U\-T\-\_\-\-I\-N\-I\-T}~((unsigned int)(3 $\ast$ H\-Z))
+\item 
+\#define \hyperlink{gmtp_8h_a973dbe6c782d6d3a6b8fb1a2d15d0825}{G\-M\-T\-P\-\_\-\-S\-K\-B\-\_\-\-C\-B}(\-\_\-\-\_\-skb)~((struct \hyperlink{gmtp_8h_structgmtp__skb__cb}{gmtp\-\_\-skb\-\_\-cb} $\ast$)\&((\-\_\-\-\_\-skb)-\/$>$cb\mbox{[}0\mbox{]}))
+\item 
+\#define \hyperlink{gmtp_8h_a86aa8330d1bef9cdb384dc6ef9738bcb}{G\-M\-T\-P\-\_\-\-T\-I\-M\-E\-W\-A\-I\-T\-\_\-\-L\-E\-N}~(60 $\ast$ H\-Z)
+\end{DoxyCompactItemize}
+\subsection*{Functions}
+\begin{DoxyCompactItemize}
+\item 
+const char $\ast$ \hyperlink{gmtp_8h_a181e0298f75786ee945b7dcd06adaf1b}{gmtp\-\_\-packet\-\_\-name} (const int)
+\item 
+int \hyperlink{gmtp_8h_a1c872c8a33008e99befdb297a6518e03}{gmtp\-\_\-init\-\_\-sock} (struct sock $\ast$sk, const \-\_\-\-\_\-u8 ctl\-\_\-sock\-\_\-initialized)
+\item 
+void \hyperlink{gmtp_8h_a59f856ab28c13b885fbe2c38f7a70a87}{gmtp\-\_\-close} (struct sock $\ast$sk, long timeout)
+\item 
+int \hyperlink{gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3}{gmtp\-\_\-v4\-\_\-connect} (struct sock $\ast$sk, struct sockaddr $\ast$uaddr, int addr\-\_\-len)
+\item 
+int \hyperlink{gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192}{gmtp\-\_\-connect} (struct sock $\ast$sk)
+\item 
+int \hyperlink{gmtp_8h_a8dacfb87447f165efac077aa907a8e27}{gmtp\-\_\-disconnect} (struct sock $\ast$sk, int flags)
+\item 
+int \hyperlink{gmtp_8h_ab9bd011833dc85384f4d3c6e5c29f6de}{gmtp\-\_\-ioctl} (struct sock $\ast$sk, int cmd, unsigned long arg)
+\item 
+int \hyperlink{gmtp_8h_a789192a2299f8f626e034ad9c87d99b2}{gmtp\-\_\-getsockopt} (struct sock $\ast$sk, int level, int optname, char \-\_\-\-\_\-user $\ast$optval, int \-\_\-\-\_\-user $\ast$optlen)
+\item 
+int \hyperlink{gmtp_8h_aa5511c6bf84a1956f308ce920a134c29}{gmtp\-\_\-setsockopt} (struct sock $\ast$sk, int level, int optname, char \-\_\-\-\_\-user $\ast$optval, unsigned int optlen)
+\item 
+int \hyperlink{gmtp_8h_a76ebcaaace625859ee741e890d7e7da7}{gmtp\-\_\-sendmsg} (struct kiocb $\ast$iocb, struct sock $\ast$sk, struct msghdr $\ast$msg, size\-\_\-t size)
+\item 
+int \hyperlink{gmtp_8h_a462ae3f8dd122bdee2af7fd115694db4}{gmtp\-\_\-recvmsg} (struct kiocb $\ast$iocb, struct sock $\ast$sk, struct msghdr $\ast$msg, size\-\_\-t len, int nonblock, int flags, int $\ast$addr\-\_\-len)
+\item 
+void \hyperlink{gmtp_8h_ae74ac6585ac8e29b98e916f4f29ae3f0}{gmtp\-\_\-shutdown} (struct sock $\ast$sk, int how)
+\item 
+void \hyperlink{gmtp_8h_ada146a75c7595313fda4021b3d64f2af}{gmtp\-\_\-destroy\-\_\-sock} (struct sock $\ast$sk)
+\item 
+void \hyperlink{gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2}{gmtp\-\_\-set\-\_\-state} (struct sock $\ast$, const int)
+\item 
+int \hyperlink{gmtp_8h_aa43e6c6314b0b836ffb2616535879838}{inet\-\_\-gmtp\-\_\-listen} (struct socket $\ast$sock, int backlog)
+\item 
+int \hyperlink{gmtp_8h_a706d0cdecf4e871e347de22e69eed8ee}{gmtp\-\_\-insert\-\_\-options} (struct sock $\ast$sk, struct sk\-\_\-buff $\ast$skb)
+\item 
+int \hyperlink{gmtp_8h_a3d9324eca652acd36308327a06050473}{gmtp\-\_\-rcv\-\_\-established} (struct sock $\ast$sk, struct sk\-\_\-buff $\ast$skb, const struct gmtp\-\_\-hdr $\ast$dh, const unsigned int len)
+\item 
+int \hyperlink{gmtp_8h_a212e85de01d9dd2c64578b4a61020f18}{gmtp\-\_\-rcv\-\_\-state\-\_\-process} (struct sock $\ast$sk, struct sk\-\_\-buff $\ast$skb, struct gmtp\-\_\-hdr $\ast$gh, unsigned int len)
+\item 
+struct sk\-\_\-buff $\ast$ \hyperlink{gmtp_8h_a8e94a84dd0d5b12f39df23b6c6ff005b}{gmtp\-\_\-make\-\_\-response} (struct sock $\ast$sk, struct dst\-\_\-entry $\ast$dst, struct request\-\_\-sock $\ast$req)
+\item 
+struct sk\-\_\-buff $\ast$ \hyperlink{gmtp_8h_a702ba25884e070b579dcfa4769260847}{gmtp\-\_\-ctl\-\_\-make\-\_\-reset} (struct sock $\ast$sk, struct sk\-\_\-buff $\ast$rcv\-\_\-skb)
+\end{DoxyCompactItemize}
+\subsection*{Variables}
+\begin{DoxyCompactItemize}
+\item 
+struct inet\-\_\-hashinfo \hyperlink{gmtp_8h_ab43beb876bb256a2f539107b7f589c44}{gmtp\-\_\-hashinfo}
+\item 
+struct percpu\-\_\-counter \hyperlink{gmtp_8h_acab13337f0e829de92aa24505a723eae}{gmtp\-\_\-orphan\-\_\-count}
+\end{DoxyCompactItemize}
+
+
+\subsection{Data Structure Documentation}
+\index{gmtp\-\_\-skb\-\_\-cb@{gmtp\-\_\-skb\-\_\-cb}}\label{structgmtp__skb__cb}
+\hypertarget{gmtp_8h_structgmtp__skb__cb}{}
+\subsubsection{struct gmtp\-\_\-skb\-\_\-cb}
+\hyperlink{namespace_3globalScope_4_protocolThis-p}{This} is the control buffer. It is free to use by any layer. \hyperlink{namespace_3globalScope_4_protocolThis-p}{This} is an opaque area used to store private information.
+
+struct sk\-\_\-buff \{ (...) char cb\mbox{[}48\mbox{]} \}
+
+\hyperlink{gmtp_8h_structgmtp__skb__cb}{gmtp\-\_\-skb\-\_\-cb} -\/ G\-M\-T\-P per-\/packet control information
+
+\-: one of dccp\-\_\-pkt\-\_\-type (or unknown) \-: sequence number \-: one of gmtp\-\_\-reset\-\_\-codes \-: Data1..3 fields (depend on )
+
+\hyperlink{namespace_3globalScope_4_protocolThis-p}{This} is used for transmission as well as for reception. \begin{DoxyFields}{Data Fields}
+\hypertarget{gmtp_8h_a5f970494c68fc06c84823c233ed9d6a8}{\-\_\-\-\_\-u8}\label{gmtp_8h_a5f970494c68fc06c84823c233ed9d6a8}
+&
+gmtpd\-\_\-reset\-\_\-code&
+\\
+\hline
+
+\hypertarget{gmtp_8h_a766db441c404018311173c1171ef917a}{\-\_\-\-\_\-u8}\label{gmtp_8h_a766db441c404018311173c1171ef917a}
+&
+gmtpd\-\_\-reset\-\_\-data&
+\\
+\hline
+
+\hypertarget{gmtp_8h_ac2ed3bbe3289ce05b2fa7847c5e67da6}{\-\_\-\-\_\-u64}\label{gmtp_8h_ac2ed3bbe3289ce05b2fa7847c5e67da6}
+&
+gmtpd\-\_\-seq&
+\\
+\hline
+
+\hypertarget{gmtp_8h_a40635375f5d8223a8de70b79833c32c2}{\-\_\-\-\_\-u8}\label{gmtp_8h_a40635375f5d8223a8de70b79833c32c2}
+&
+gmtpd\-\_\-type\-:5&
+\\
+\hline
+
+\end{DoxyFields}
+
+
+\subsection{Macro Definition Documentation}
+\hypertarget{gmtp_8h_a8f042630afadb776c9fe83ace47fac92}{\index{gmtp.\-h@{gmtp.\-h}!G\-M\-T\-P\-\_\-\-E\-R\-R\-O\-R@{G\-M\-T\-P\-\_\-\-E\-R\-R\-O\-R}}
+\index{G\-M\-T\-P\-\_\-\-E\-R\-R\-O\-R@{G\-M\-T\-P\-\_\-\-E\-R\-R\-O\-R}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{G\-M\-T\-P\-\_\-\-E\-R\-R\-O\-R}]{\setlength{\rightskip}{0pt plus 5cm}\#define G\-M\-T\-P\-\_\-\-E\-R\-R\-O\-R~\char`\"{}\mbox{[}G\-M\-T\-P\-\_\-\-E\-R\-R\-O\-R\mbox{]} \%s\-:\%d at \%s -\/ \char`\"{}}}\label{gmtp_8h_a8f042630afadb776c9fe83ace47fac92}
+\hypertarget{gmtp_8h_ac4d88ba4957c61fad1b1e81e86e26d25}{\index{gmtp.\-h@{gmtp.\-h}!G\-M\-T\-P\-\_\-\-I\-N\-F\-O@{G\-M\-T\-P\-\_\-\-I\-N\-F\-O}}
+\index{G\-M\-T\-P\-\_\-\-I\-N\-F\-O@{G\-M\-T\-P\-\_\-\-I\-N\-F\-O}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{G\-M\-T\-P\-\_\-\-I\-N\-F\-O}]{\setlength{\rightskip}{0pt plus 5cm}\#define G\-M\-T\-P\-\_\-\-I\-N\-F\-O~\char`\"{}\mbox{[}G\-M\-T\-P\-\_\-\-I\-N\-F\-O\mbox{]} \%s\-:\%d -\/ \char`\"{}}}\label{gmtp_8h_ac4d88ba4957c61fad1b1e81e86e26d25}
+\hypertarget{gmtp_8h_acb14405c3e3845ce630b3330c048d3e8}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-print\-\_\-debug@{gmtp\-\_\-print\-\_\-debug}}
+\index{gmtp\-\_\-print\-\_\-debug@{gmtp\-\_\-print\-\_\-debug}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-print\-\_\-debug}]{\setlength{\rightskip}{0pt plus 5cm}\#define gmtp\-\_\-print\-\_\-debug(
+\begin{DoxyParamCaption}
+\item[{}]{fmt, }
+\item[{}]{args...}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_acb14405c3e3845ce630b3330c048d3e8}
+{\bfseries Value\-:}
+\begin{DoxyCode}
+printk(KERN\_INFO \hyperlink{gmtp_8h_ac4d88ba4957c61fad1b1e81e86e26d25}{GMTP\_INFO} fmt \(\backslash\)
+                \textcolor{stringliteral}{"\(\backslash\)n"}, \_\_FUNCTION\_\_, \_\_LINE\_\_, ##args)
+\end{DoxyCode}
+\hypertarget{gmtp_8h_aef36831848715ac98879ce5642229e14}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-print\-\_\-error@{gmtp\-\_\-print\-\_\-error}}
+\index{gmtp\-\_\-print\-\_\-error@{gmtp\-\_\-print\-\_\-error}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-print\-\_\-error}]{\setlength{\rightskip}{0pt plus 5cm}\#define gmtp\-\_\-print\-\_\-error(
+\begin{DoxyParamCaption}
+\item[{}]{fmt, }
+\item[{}]{args...}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_aef36831848715ac98879ce5642229e14}
+{\bfseries Value\-:}
+\begin{DoxyCode}
+printk(KERN\_ERR \hyperlink{gmtp_8h_a8f042630afadb776c9fe83ace47fac92}{GMTP\_ERROR} fmt \(\backslash\)
+                \textcolor{stringliteral}{"\(\backslash\)n"}, \_\_FUNCTION\_\_, \_\_LINE\_\_, \_\_FILE\_\_, ##args)
+\end{DoxyCode}
+\hypertarget{gmtp_8h_a4e56790f2f3dc1623fbd978467ac614d}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-print\-\_\-warning@{gmtp\-\_\-print\-\_\-warning}}
+\index{gmtp\-\_\-print\-\_\-warning@{gmtp\-\_\-print\-\_\-warning}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-print\-\_\-warning}]{\setlength{\rightskip}{0pt plus 5cm}\#define gmtp\-\_\-print\-\_\-warning(
+\begin{DoxyParamCaption}
+\item[{}]{fmt, }
+\item[{}]{args...}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_a4e56790f2f3dc1623fbd978467ac614d}
+{\bfseries Value\-:}
+\begin{DoxyCode}
+printk(KERN\_WARNING \hyperlink{gmtp_8h_a9bdaefac28c54404d5d18bf9f4df448f}{GMTP\_WARNING} fmt\(\backslash\)
+                \textcolor{stringliteral}{"\(\backslash\)n"}, \_\_FUNCTION\_\_, \_\_LINE\_\_, \_\_FILE\_\_, ##args)
+\end{DoxyCode}
+\hypertarget{gmtp_8h_a973dbe6c782d6d3a6b8fb1a2d15d0825}{\index{gmtp.\-h@{gmtp.\-h}!G\-M\-T\-P\-\_\-\-S\-K\-B\-\_\-\-C\-B@{G\-M\-T\-P\-\_\-\-S\-K\-B\-\_\-\-C\-B}}
+\index{G\-M\-T\-P\-\_\-\-S\-K\-B\-\_\-\-C\-B@{G\-M\-T\-P\-\_\-\-S\-K\-B\-\_\-\-C\-B}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{G\-M\-T\-P\-\_\-\-S\-K\-B\-\_\-\-C\-B}]{\setlength{\rightskip}{0pt plus 5cm}\#define G\-M\-T\-P\-\_\-\-S\-K\-B\-\_\-\-C\-B(
+\begin{DoxyParamCaption}
+\item[{}]{\-\_\-\-\_\-skb}
+\end{DoxyParamCaption}
+)~((struct {\bf gmtp\-\_\-skb\-\_\-cb} $\ast$)\&((\-\_\-\-\_\-skb)-\/$>$cb\mbox{[}0\mbox{]}))}}\label{gmtp_8h_a973dbe6c782d6d3a6b8fb1a2d15d0825}
+\hypertarget{gmtp_8h_a5b5fd1251f0fec5bc8dda21b11d57de4}{\index{gmtp.\-h@{gmtp.\-h}!G\-M\-T\-P\-\_\-\-T\-I\-M\-E\-O\-U\-T\-\_\-\-I\-N\-I\-T@{G\-M\-T\-P\-\_\-\-T\-I\-M\-E\-O\-U\-T\-\_\-\-I\-N\-I\-T}}
+\index{G\-M\-T\-P\-\_\-\-T\-I\-M\-E\-O\-U\-T\-\_\-\-I\-N\-I\-T@{G\-M\-T\-P\-\_\-\-T\-I\-M\-E\-O\-U\-T\-\_\-\-I\-N\-I\-T}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{G\-M\-T\-P\-\_\-\-T\-I\-M\-E\-O\-U\-T\-\_\-\-I\-N\-I\-T}]{\setlength{\rightskip}{0pt plus 5cm}\#define G\-M\-T\-P\-\_\-\-T\-I\-M\-E\-O\-U\-T\-\_\-\-I\-N\-I\-T~((unsigned int)(3 $\ast$ H\-Z))}}\label{gmtp_8h_a5b5fd1251f0fec5bc8dda21b11d57de4}
+\hypertarget{gmtp_8h_a86aa8330d1bef9cdb384dc6ef9738bcb}{\index{gmtp.\-h@{gmtp.\-h}!G\-M\-T\-P\-\_\-\-T\-I\-M\-E\-W\-A\-I\-T\-\_\-\-L\-E\-N@{G\-M\-T\-P\-\_\-\-T\-I\-M\-E\-W\-A\-I\-T\-\_\-\-L\-E\-N}}
+\index{G\-M\-T\-P\-\_\-\-T\-I\-M\-E\-W\-A\-I\-T\-\_\-\-L\-E\-N@{G\-M\-T\-P\-\_\-\-T\-I\-M\-E\-W\-A\-I\-T\-\_\-\-L\-E\-N}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{G\-M\-T\-P\-\_\-\-T\-I\-M\-E\-W\-A\-I\-T\-\_\-\-L\-E\-N}]{\setlength{\rightskip}{0pt plus 5cm}\#define G\-M\-T\-P\-\_\-\-T\-I\-M\-E\-W\-A\-I\-T\-\_\-\-L\-E\-N~(60 $\ast$ H\-Z)}}\label{gmtp_8h_a86aa8330d1bef9cdb384dc6ef9738bcb}
+\hypertarget{gmtp_8h_a9bdaefac28c54404d5d18bf9f4df448f}{\index{gmtp.\-h@{gmtp.\-h}!G\-M\-T\-P\-\_\-\-W\-A\-R\-N\-I\-N\-G@{G\-M\-T\-P\-\_\-\-W\-A\-R\-N\-I\-N\-G}}
+\index{G\-M\-T\-P\-\_\-\-W\-A\-R\-N\-I\-N\-G@{G\-M\-T\-P\-\_\-\-W\-A\-R\-N\-I\-N\-G}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{G\-M\-T\-P\-\_\-\-W\-A\-R\-N\-I\-N\-G}]{\setlength{\rightskip}{0pt plus 5cm}\#define G\-M\-T\-P\-\_\-\-W\-A\-R\-N\-I\-N\-G~\char`\"{}\mbox{[}G\-M\-T\-P\-\_\-\-W\-A\-R\-N\-I\-N\-G\mbox{]}  \%s\-:\%d at \%s -\/ \char`\"{}}}\label{gmtp_8h_a9bdaefac28c54404d5d18bf9f4df448f}
+\hypertarget{gmtp_8h_aaa9538bb543aaffa4731989fc7ddc0d8}{\index{gmtp.\-h@{gmtp.\-h}!M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-H\-E\-A\-D\-E\-R@{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-H\-E\-A\-D\-E\-R}}
+\index{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-H\-E\-A\-D\-E\-R@{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-H\-E\-A\-D\-E\-R}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-H\-E\-A\-D\-E\-R}]{\setlength{\rightskip}{0pt plus 5cm}\#define M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-H\-E\-A\-D\-E\-R~(2047 $\ast$ sizeof(uint32\-\_\-t))}}\label{gmtp_8h_aaa9538bb543aaffa4731989fc7ddc0d8}
+\hypertarget{gmtp_8h_afb9f06378ed5523a74a21aedc7f34ea6}{\index{gmtp.\-h@{gmtp.\-h}!M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-S\-P\-E\-C\-I\-F\-I\-C\-\_\-\-H\-E\-A\-D\-E\-R@{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-S\-P\-E\-C\-I\-F\-I\-C\-\_\-\-H\-E\-A\-D\-E\-R}}
+\index{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-S\-P\-E\-C\-I\-F\-I\-C\-\_\-\-H\-E\-A\-D\-E\-R@{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-S\-P\-E\-C\-I\-F\-I\-C\-\_\-\-H\-E\-A\-D\-E\-R}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-S\-P\-E\-C\-I\-F\-I\-C\-\_\-\-H\-E\-A\-D\-E\-R}]{\setlength{\rightskip}{0pt plus 5cm}\#define M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-S\-P\-E\-C\-I\-F\-I\-C\-\_\-\-H\-E\-A\-D\-E\-R~(8 $\ast$ sizeof(uint32\-\_\-t))}}\label{gmtp_8h_afb9f06378ed5523a74a21aedc7f34ea6}
+\hypertarget{gmtp_8h_aed94c10b0d5306f67874e039a60f7907}{\index{gmtp.\-h@{gmtp.\-h}!M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-V\-A\-R\-I\-A\-B\-L\-E\-\_\-\-H\-E\-A\-D\-E\-R@{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-V\-A\-R\-I\-A\-B\-L\-E\-\_\-\-H\-E\-A\-D\-E\-R}}
+\index{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-V\-A\-R\-I\-A\-B\-L\-E\-\_\-\-H\-E\-A\-D\-E\-R@{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-V\-A\-R\-I\-A\-B\-L\-E\-\_\-\-H\-E\-A\-D\-E\-R}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-V\-A\-R\-I\-A\-B\-L\-E\-\_\-\-H\-E\-A\-D\-E\-R}]{\setlength{\rightskip}{0pt plus 5cm}\#define M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-V\-A\-R\-I\-A\-B\-L\-E\-\_\-\-H\-E\-A\-D\-E\-R~({\bf M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-H\-E\-A\-D\-E\-R} -\/ {\bf M\-A\-X\-\_\-\-G\-M\-T\-P\-\_\-\-S\-P\-E\-C\-I\-F\-I\-C\-\_\-\-H\-E\-A\-D\-E\-R})}}\label{gmtp_8h_aed94c10b0d5306f67874e039a60f7907}
+
+
+\subsection{Function Documentation}
+\hypertarget{gmtp_8h_a59f856ab28c13b885fbe2c38f7a70a87}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-close@{gmtp\-\_\-close}}
+\index{gmtp\-\_\-close@{gmtp\-\_\-close}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-close}]{\setlength{\rightskip}{0pt plus 5cm}void gmtp\-\_\-close (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{long}]{timeout}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_a59f856ab28c13b885fbe2c38f7a70a87}
+\hypertarget{gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-connect@{gmtp\-\_\-connect}}
+\index{gmtp\-\_\-connect@{gmtp\-\_\-connect}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-connect}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-connect (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192}
+
+
+Here is the caller graph for this function\-:\nopagebreak
+\begin{figure}[H]
+\begin{center}
+\leavevmode
+\includegraphics[width=288pt]{gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192_icgraph}
+\end{center}
+\end{figure}
+
+
+\hypertarget{gmtp_8h_a702ba25884e070b579dcfa4769260847}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-ctl\-\_\-make\-\_\-reset@{gmtp\-\_\-ctl\-\_\-make\-\_\-reset}}
+\index{gmtp\-\_\-ctl\-\_\-make\-\_\-reset@{gmtp\-\_\-ctl\-\_\-make\-\_\-reset}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-ctl\-\_\-make\-\_\-reset}]{\setlength{\rightskip}{0pt plus 5cm}struct sk\-\_\-buff$\ast$ gmtp\-\_\-ctl\-\_\-make\-\_\-reset (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct sk\-\_\-buff $\ast$}]{rcv\-\_\-skb}
+\end{DoxyParamCaption}
+)\hspace{0.3cm}{\ttfamily [read]}}}\label{gmtp_8h_a702ba25884e070b579dcfa4769260847}
+\hypertarget{gmtp_8h_ada146a75c7595313fda4021b3d64f2af}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-destroy\-\_\-sock@{gmtp\-\_\-destroy\-\_\-sock}}
+\index{gmtp\-\_\-destroy\-\_\-sock@{gmtp\-\_\-destroy\-\_\-sock}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-destroy\-\_\-sock}]{\setlength{\rightskip}{0pt plus 5cm}void gmtp\-\_\-destroy\-\_\-sock (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_ada146a75c7595313fda4021b3d64f2af}
+\hypertarget{gmtp_8h_a8dacfb87447f165efac077aa907a8e27}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-disconnect@{gmtp\-\_\-disconnect}}
+\index{gmtp\-\_\-disconnect@{gmtp\-\_\-disconnect}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-disconnect}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-disconnect (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{int}]{flags}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_a8dacfb87447f165efac077aa907a8e27}
+\hypertarget{gmtp_8h_a789192a2299f8f626e034ad9c87d99b2}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-getsockopt@{gmtp\-\_\-getsockopt}}
+\index{gmtp\-\_\-getsockopt@{gmtp\-\_\-getsockopt}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-getsockopt}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-getsockopt (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{int}]{level, }
+\item[{int}]{optname, }
+\item[{char \-\_\-\-\_\-user $\ast$}]{optval, }
+\item[{int \-\_\-\-\_\-user $\ast$}]{optlen}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_a789192a2299f8f626e034ad9c87d99b2}
+\hypertarget{gmtp_8h_a1c872c8a33008e99befdb297a6518e03}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-init\-\_\-sock@{gmtp\-\_\-init\-\_\-sock}}
+\index{gmtp\-\_\-init\-\_\-sock@{gmtp\-\_\-init\-\_\-sock}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-init\-\_\-sock}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-init\-\_\-sock (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{const \-\_\-\-\_\-u8}]{ctl\-\_\-sock\-\_\-initialized}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_a1c872c8a33008e99befdb297a6518e03}
+\hypertarget{gmtp_8h_a706d0cdecf4e871e347de22e69eed8ee}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-insert\-\_\-options@{gmtp\-\_\-insert\-\_\-options}}
+\index{gmtp\-\_\-insert\-\_\-options@{gmtp\-\_\-insert\-\_\-options}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-insert\-\_\-options}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-insert\-\_\-options (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct sk\-\_\-buff $\ast$}]{skb}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_a706d0cdecf4e871e347de22e69eed8ee}
+\hypertarget{gmtp_8h_ab9bd011833dc85384f4d3c6e5c29f6de}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-ioctl@{gmtp\-\_\-ioctl}}
+\index{gmtp\-\_\-ioctl@{gmtp\-\_\-ioctl}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-ioctl}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-ioctl (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{int}]{cmd, }
+\item[{unsigned long}]{arg}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_ab9bd011833dc85384f4d3c6e5c29f6de}
+\hypertarget{gmtp_8h_a8e94a84dd0d5b12f39df23b6c6ff005b}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-make\-\_\-response@{gmtp\-\_\-make\-\_\-response}}
+\index{gmtp\-\_\-make\-\_\-response@{gmtp\-\_\-make\-\_\-response}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-make\-\_\-response}]{\setlength{\rightskip}{0pt plus 5cm}struct sk\-\_\-buff$\ast$ gmtp\-\_\-make\-\_\-response (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct dst\-\_\-entry $\ast$}]{dst, }
+\item[{struct request\-\_\-sock $\ast$}]{req}
+\end{DoxyParamCaption}
+)\hspace{0.3cm}{\ttfamily [read]}}}\label{gmtp_8h_a8e94a84dd0d5b12f39df23b6c6ff005b}
+\hypertarget{gmtp_8h_a181e0298f75786ee945b7dcd06adaf1b}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-packet\-\_\-name@{gmtp\-\_\-packet\-\_\-name}}
+\index{gmtp\-\_\-packet\-\_\-name@{gmtp\-\_\-packet\-\_\-name}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-packet\-\_\-name}]{\setlength{\rightskip}{0pt plus 5cm}const char$\ast$ gmtp\-\_\-packet\-\_\-name (
+\begin{DoxyParamCaption}
+\item[{const int}]{}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_a181e0298f75786ee945b7dcd06adaf1b}
+\hypertarget{gmtp_8h_a3d9324eca652acd36308327a06050473}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-rcv\-\_\-established@{gmtp\-\_\-rcv\-\_\-established}}
+\index{gmtp\-\_\-rcv\-\_\-established@{gmtp\-\_\-rcv\-\_\-established}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-rcv\-\_\-established}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-rcv\-\_\-established (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct sk\-\_\-buff $\ast$}]{skb, }
+\item[{const struct gmtp\-\_\-hdr $\ast$}]{dh, }
+\item[{const unsigned int}]{len}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_a3d9324eca652acd36308327a06050473}
+
+
+Here is the caller graph for this function\-:\nopagebreak
+\begin{figure}[H]
+\begin{center}
+\leavevmode
+\includegraphics[width=317pt]{gmtp_8h_a3d9324eca652acd36308327a06050473_icgraph}
+\end{center}
+\end{figure}
+
+
+\hypertarget{gmtp_8h_a212e85de01d9dd2c64578b4a61020f18}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-rcv\-\_\-state\-\_\-process@{gmtp\-\_\-rcv\-\_\-state\-\_\-process}}
+\index{gmtp\-\_\-rcv\-\_\-state\-\_\-process@{gmtp\-\_\-rcv\-\_\-state\-\_\-process}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-rcv\-\_\-state\-\_\-process}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-rcv\-\_\-state\-\_\-process (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct sk\-\_\-buff $\ast$}]{skb, }
+\item[{struct gmtp\-\_\-hdr $\ast$}]{gh, }
+\item[{unsigned int}]{len}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_a212e85de01d9dd2c64578b4a61020f18}
+
+
+Here is the caller graph for this function\-:\nopagebreak
+\begin{figure}[H]
+\begin{center}
+\leavevmode
+\includegraphics[width=329pt]{gmtp_8h_a212e85de01d9dd2c64578b4a61020f18_icgraph}
+\end{center}
+\end{figure}
+
+
+\hypertarget{gmtp_8h_a462ae3f8dd122bdee2af7fd115694db4}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-recvmsg@{gmtp\-\_\-recvmsg}}
+\index{gmtp\-\_\-recvmsg@{gmtp\-\_\-recvmsg}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-recvmsg}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-recvmsg (
+\begin{DoxyParamCaption}
+\item[{struct kiocb $\ast$}]{iocb, }
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct msghdr $\ast$}]{msg, }
+\item[{size\-\_\-t}]{len, }
+\item[{int}]{nonblock, }
+\item[{int}]{flags, }
+\item[{int $\ast$}]{addr\-\_\-len}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_a462ae3f8dd122bdee2af7fd115694db4}
+\hypertarget{gmtp_8h_a76ebcaaace625859ee741e890d7e7da7}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-sendmsg@{gmtp\-\_\-sendmsg}}
+\index{gmtp\-\_\-sendmsg@{gmtp\-\_\-sendmsg}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-sendmsg}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-sendmsg (
+\begin{DoxyParamCaption}
+\item[{struct kiocb $\ast$}]{iocb, }
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct msghdr $\ast$}]{msg, }
+\item[{size\-\_\-t}]{size}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_a76ebcaaace625859ee741e890d7e7da7}
+\hypertarget{gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-set\-\_\-state@{gmtp\-\_\-set\-\_\-state}}
+\index{gmtp\-\_\-set\-\_\-state@{gmtp\-\_\-set\-\_\-state}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-set\-\_\-state}]{\setlength{\rightskip}{0pt plus 5cm}void gmtp\-\_\-set\-\_\-state (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{, }
+\item[{const int}]{}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2}
+
+
+Here is the caller graph for this function\-:\nopagebreak
+\begin{figure}[H]
+\begin{center}
+\leavevmode
+\includegraphics[width=294pt]{gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2_icgraph}
+\end{center}
+\end{figure}
+
+
+\hypertarget{gmtp_8h_aa5511c6bf84a1956f308ce920a134c29}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-setsockopt@{gmtp\-\_\-setsockopt}}
+\index{gmtp\-\_\-setsockopt@{gmtp\-\_\-setsockopt}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-setsockopt}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-setsockopt (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{int}]{level, }
+\item[{int}]{optname, }
+\item[{char \-\_\-\-\_\-user $\ast$}]{optval, }
+\item[{unsigned int}]{optlen}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_aa5511c6bf84a1956f308ce920a134c29}
+\hypertarget{gmtp_8h_ae74ac6585ac8e29b98e916f4f29ae3f0}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-shutdown@{gmtp\-\_\-shutdown}}
+\index{gmtp\-\_\-shutdown@{gmtp\-\_\-shutdown}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-shutdown}]{\setlength{\rightskip}{0pt plus 5cm}void gmtp\-\_\-shutdown (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{int}]{how}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_ae74ac6585ac8e29b98e916f4f29ae3f0}
+\hypertarget{gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-v4\-\_\-connect@{gmtp\-\_\-v4\-\_\-connect}}
+\index{gmtp\-\_\-v4\-\_\-connect@{gmtp\-\_\-v4\-\_\-connect}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-v4\-\_\-connect}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-v4\-\_\-connect (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct sockaddr $\ast$}]{uaddr, }
+\item[{int}]{addr\-\_\-len}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3}
+
+
+Here is the call graph for this function\-:\nopagebreak
+\begin{figure}[H]
+\begin{center}
+\leavevmode
+\includegraphics[width=294pt]{gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3_cgraph}
+\end{center}
+\end{figure}
+
+
+\hypertarget{gmtp_8h_aa43e6c6314b0b836ffb2616535879838}{\index{gmtp.\-h@{gmtp.\-h}!inet\-\_\-gmtp\-\_\-listen@{inet\-\_\-gmtp\-\_\-listen}}
+\index{inet\-\_\-gmtp\-\_\-listen@{inet\-\_\-gmtp\-\_\-listen}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{inet\-\_\-gmtp\-\_\-listen}]{\setlength{\rightskip}{0pt plus 5cm}int inet\-\_\-gmtp\-\_\-listen (
+\begin{DoxyParamCaption}
+\item[{struct socket $\ast$}]{sock, }
+\item[{int}]{backlog}
+\end{DoxyParamCaption}
+)}}\label{gmtp_8h_aa43e6c6314b0b836ffb2616535879838}
+
+
+\subsection{Variable Documentation}
+\hypertarget{gmtp_8h_ab43beb876bb256a2f539107b7f589c44}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-hashinfo@{gmtp\-\_\-hashinfo}}
+\index{gmtp\-\_\-hashinfo@{gmtp\-\_\-hashinfo}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-hashinfo}]{\setlength{\rightskip}{0pt plus 5cm}struct inet\-\_\-hashinfo gmtp\-\_\-hashinfo}}\label{gmtp_8h_ab43beb876bb256a2f539107b7f589c44}
+\hypertarget{gmtp_8h_acab13337f0e829de92aa24505a723eae}{\index{gmtp.\-h@{gmtp.\-h}!gmtp\-\_\-orphan\-\_\-count@{gmtp\-\_\-orphan\-\_\-count}}
+\index{gmtp\-\_\-orphan\-\_\-count@{gmtp\-\_\-orphan\-\_\-count}!gmtp.h@{gmtp.\-h}}
+\subsubsection[{gmtp\-\_\-orphan\-\_\-count}]{\setlength{\rightskip}{0pt plus 5cm}struct percpu\-\_\-counter gmtp\-\_\-orphan\-\_\-count}}\label{gmtp_8h_acab13337f0e829de92aa24505a723eae}
diff --git a/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h__dep__incl.md5 b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h__dep__incl.md5
new file mode 100644
index 0000000..92a0f3d
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h__dep__incl.md5
@@ -0,0 +1 @@
+206718aad1e99b62c568a8e322d83276
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h__incl.md5 b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h__incl.md5
new file mode 100644
index 0000000..e377580
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h__incl.md5
@@ -0,0 +1 @@
+17baf9ba04d1a0d7927f563d21f69dfd
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h_a212e85de01d9dd2c64578b4a61020f18_icgraph.md5 b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h_a212e85de01d9dd2c64578b4a61020f18_icgraph.md5
new file mode 100644
index 0000000..55cc776
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h_a212e85de01d9dd2c64578b4a61020f18_icgraph.md5
@@ -0,0 +1 @@
+3e3d8e1a9c591d86a16900d8588ec753
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192_icgraph.md5 b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192_icgraph.md5
new file mode 100644
index 0000000..b8782b6
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h_a2df4bd07928440434f3ffc5e9a99e192_icgraph.md5
@@ -0,0 +1 @@
+7ae46efb2fc4200a04cbde946420664c
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3_cgraph.md5 b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3_cgraph.md5
new file mode 100644
index 0000000..ecf073b
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h_a3d651b3671bf86675ce95fb92228b6a3_cgraph.md5
@@ -0,0 +1 @@
+0e05fe4c982074a39d2e47ab5c4b7f9a
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h_a3d9324eca652acd36308327a06050473_icgraph.md5 b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h_a3d9324eca652acd36308327a06050473_icgraph.md5
new file mode 100644
index 0000000..fe42ffc
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h_a3d9324eca652acd36308327a06050473_icgraph.md5
@@ -0,0 +1 @@
+6411223d4d591e638c6154b09ee8d168
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2_icgraph.md5 b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2_icgraph.md5
new file mode 100644
index 0000000..41c7b52
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8h_ad4d2e06e572fc5135a3a2636b629b8f2_icgraph.md5
@@ -0,0 +1 @@
+e01e35c9cc8d9f05690b0849d9a8ef23
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/latex/gmtp_8mod_8c.tex b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8mod_8c.tex
new file mode 100644
index 0000000..90f1015
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/gmtp_8mod_8c.tex
@@ -0,0 +1,3 @@
+\hypertarget{gmtp_8mod_8c}{\section{gmtp.\-mod.\-c File Reference}
+\label{gmtp_8mod_8c}\index{gmtp.\-mod.\-c@{gmtp.\-mod.\-c}}
+}
diff --git a/linux-3.17.1/net/gmtp/doc/latex/gmtp__ipv4_8mod_8c.tex b/linux-3.17.1/net/gmtp/doc/latex/gmtp__ipv4_8mod_8c.tex
new file mode 100644
index 0000000..715f4b9
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/gmtp__ipv4_8mod_8c.tex
@@ -0,0 +1,3 @@
+\hypertarget{gmtp__ipv4_8mod_8c}{\section{gmtp\-\_\-ipv4.\-mod.\-c File Reference}
+\label{gmtp__ipv4_8mod_8c}\index{gmtp\-\_\-ipv4.\-mod.\-c@{gmtp\-\_\-ipv4.\-mod.\-c}}
+}
diff --git a/linux-3.17.1/net/gmtp/doc/latex/input_8c.tex b/linux-3.17.1/net/gmtp/doc/latex/input_8c.tex
new file mode 100644
index 0000000..0c11f9f
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/input_8c.tex
@@ -0,0 +1,109 @@
+\hypertarget{input_8c}{\section{input.\-c File Reference}
+\label{input_8c}\index{input.\-c@{input.\-c}}
+}
+\subsection*{Variables}
+\begin{DoxyCompactItemize}
+\item 
+\hyperlink{input_8c_a14d48c2e9f05d0b03044eb45f308fcb0}{body}
+\item 
+\hyperlink{input_8c_ab172ed3d3d31ff02fc5f798fe7e1bfb8}{table}
+\item 
+\hyperlink{input_8c_a00b49825eb9b4ffce1a4877d83ce126c}{div}
+\item 
+\hyperlink{input_8c_ac483f6ce851c9ecd9fb835ff7551737c}{p}
+\item 
+\hyperlink{input_8c_ac9e7e0722796a9a2748cfe71e5c1eacb}{h2}
+\item 
+\hyperlink{input_8c_ad8bba894a37a322932dc80e05de59fe3}{h3}
+\item 
+\hyperlink{input_8c_af78ff2250f8c44a8f1d4533787151cda}{h4}
+\item 
+\hyperlink{input_8c_ab30ad01496f14e60d923a1937ffc98d4}{h5}
+\item 
+\hyperlink{input_8c_ac9e7e0722796a9a2748cfe71e5c1eacb}{h2} \hyperlink{input_8c_a4e8818cd817685ac2ce39fc911f9d42f}{glow}
+\item 
+\hyperlink{input_8c_ac483f6ce851c9ecd9fb835ff7551737c}{p} \hyperlink{input_8c_acb48d3101db87d75430b587051623cb1}{startdd}
+\item 
+a \hyperlink{input_8c_a8aac502ae7db0ae611e00082aa682158}{code}
+\item 
+a \hyperlink{input_8c_a31f1a4bde92d4c390bf0e584473ee0da}{code\-Ref}
+\item 
+\hyperlink{input_8c_a4591bd51e10e1bcc441acd6d675fbaa9}{mdesc\-Right}
+\item 
+\hyperlink{input_8c_a0407e3019d5f5cf8b15fe00d27e91fdd}{mem\-Item\-Left}
+\item 
+\hyperlink{input_8c_a2fde2671b1dacc9d87f4268184483eef}{mem\-Item\-Right}
+\item 
+\hyperlink{input_8c_a16459c9f19af9d4e45fa309d4c3d88dc}{mem\-Templ\-Item\-Left}
+\item 
+\hyperlink{input_8c_af091022274dd4a202d587f3acae35aa9}{mem\-Templ\-Item\-Right}
+\item 
+\hyperlink{input_8c_a7f3fcc3b39464696f5682f787eb99368}{retval}
+\item 
+\hyperlink{input_8c_aec2b4fd1f327cbebb003cfc415e8bccb}{exception}
+\item 
+dl \hyperlink{input_8c_aaea8ed8d01160ec7de3bdcf28525449c}{post}
+\end{DoxyCompactItemize}
+
+
+\subsection{Variable Documentation}
+\hypertarget{input_8c_a14d48c2e9f05d0b03044eb45f308fcb0}{\index{input.\-c@{input.\-c}!body@{body}}
+\index{body@{body}!input.c@{input.\-c}}
+\subsubsection[{body}]{\setlength{\rightskip}{0pt plus 5cm}body}}\label{input_8c_a14d48c2e9f05d0b03044eb45f308fcb0}
+\hypertarget{input_8c_a8aac502ae7db0ae611e00082aa682158}{\index{input.\-c@{input.\-c}!code@{code}}
+\index{code@{code}!input.c@{input.\-c}}
+\subsubsection[{code}]{\setlength{\rightskip}{0pt plus 5cm}a code}}\label{input_8c_a8aac502ae7db0ae611e00082aa682158}
+\hypertarget{input_8c_a31f1a4bde92d4c390bf0e584473ee0da}{\index{input.\-c@{input.\-c}!code\-Ref@{code\-Ref}}
+\index{code\-Ref@{code\-Ref}!input.c@{input.\-c}}
+\subsubsection[{code\-Ref}]{\setlength{\rightskip}{0pt plus 5cm}a a code\-Ref}}\label{input_8c_a31f1a4bde92d4c390bf0e584473ee0da}
+\hypertarget{input_8c_a00b49825eb9b4ffce1a4877d83ce126c}{\index{input.\-c@{input.\-c}!div@{div}}
+\index{div@{div}!input.c@{input.\-c}}
+\subsubsection[{div}]{\setlength{\rightskip}{0pt plus 5cm}div}}\label{input_8c_a00b49825eb9b4ffce1a4877d83ce126c}
+\hypertarget{input_8c_aec2b4fd1f327cbebb003cfc415e8bccb}{\index{input.\-c@{input.\-c}!exception@{exception}}
+\index{exception@{exception}!input.c@{input.\-c}}
+\subsubsection[{exception}]{\setlength{\rightskip}{0pt plus 5cm}exception}}\label{input_8c_aec2b4fd1f327cbebb003cfc415e8bccb}
+\hypertarget{input_8c_a4e8818cd817685ac2ce39fc911f9d42f}{\index{input.\-c@{input.\-c}!glow@{glow}}
+\index{glow@{glow}!input.c@{input.\-c}}
+\subsubsection[{glow}]{\setlength{\rightskip}{0pt plus 5cm}{\bf h2} {\bf h3} {\bf h4} {\bf h5} glow}}\label{input_8c_a4e8818cd817685ac2ce39fc911f9d42f}
+\hypertarget{input_8c_ac9e7e0722796a9a2748cfe71e5c1eacb}{\index{input.\-c@{input.\-c}!h2@{h2}}
+\index{h2@{h2}!input.c@{input.\-c}}
+\subsubsection[{h2}]{\setlength{\rightskip}{0pt plus 5cm}h2}}\label{input_8c_ac9e7e0722796a9a2748cfe71e5c1eacb}
+\hypertarget{input_8c_ad8bba894a37a322932dc80e05de59fe3}{\index{input.\-c@{input.\-c}!h3@{h3}}
+\index{h3@{h3}!input.c@{input.\-c}}
+\subsubsection[{h3}]{\setlength{\rightskip}{0pt plus 5cm}h3}}\label{input_8c_ad8bba894a37a322932dc80e05de59fe3}
+\hypertarget{input_8c_af78ff2250f8c44a8f1d4533787151cda}{\index{input.\-c@{input.\-c}!h4@{h4}}
+\index{h4@{h4}!input.c@{input.\-c}}
+\subsubsection[{h4}]{\setlength{\rightskip}{0pt plus 5cm}h4}}\label{input_8c_af78ff2250f8c44a8f1d4533787151cda}
+\hypertarget{input_8c_ab30ad01496f14e60d923a1937ffc98d4}{\index{input.\-c@{input.\-c}!h5@{h5}}
+\index{h5@{h5}!input.c@{input.\-c}}
+\subsubsection[{h5}]{\setlength{\rightskip}{0pt plus 5cm}h5}}\label{input_8c_ab30ad01496f14e60d923a1937ffc98d4}
+\hypertarget{input_8c_a4591bd51e10e1bcc441acd6d675fbaa9}{\index{input.\-c@{input.\-c}!mdesc\-Right@{mdesc\-Right}}
+\index{mdesc\-Right@{mdesc\-Right}!input.c@{input.\-c}}
+\subsubsection[{mdesc\-Right}]{\setlength{\rightskip}{0pt plus 5cm}mdesc\-Right}}\label{input_8c_a4591bd51e10e1bcc441acd6d675fbaa9}
+\hypertarget{input_8c_a0407e3019d5f5cf8b15fe00d27e91fdd}{\index{input.\-c@{input.\-c}!mem\-Item\-Left@{mem\-Item\-Left}}
+\index{mem\-Item\-Left@{mem\-Item\-Left}!input.c@{input.\-c}}
+\subsubsection[{mem\-Item\-Left}]{\setlength{\rightskip}{0pt plus 5cm}mem\-Item\-Left}}\label{input_8c_a0407e3019d5f5cf8b15fe00d27e91fdd}
+\hypertarget{input_8c_a2fde2671b1dacc9d87f4268184483eef}{\index{input.\-c@{input.\-c}!mem\-Item\-Right@{mem\-Item\-Right}}
+\index{mem\-Item\-Right@{mem\-Item\-Right}!input.c@{input.\-c}}
+\subsubsection[{mem\-Item\-Right}]{\setlength{\rightskip}{0pt plus 5cm}mem\-Item\-Right}}\label{input_8c_a2fde2671b1dacc9d87f4268184483eef}
+\hypertarget{input_8c_a16459c9f19af9d4e45fa309d4c3d88dc}{\index{input.\-c@{input.\-c}!mem\-Templ\-Item\-Left@{mem\-Templ\-Item\-Left}}
+\index{mem\-Templ\-Item\-Left@{mem\-Templ\-Item\-Left}!input.c@{input.\-c}}
+\subsubsection[{mem\-Templ\-Item\-Left}]{\setlength{\rightskip}{0pt plus 5cm}mem\-Templ\-Item\-Left}}\label{input_8c_a16459c9f19af9d4e45fa309d4c3d88dc}
+\hypertarget{input_8c_af091022274dd4a202d587f3acae35aa9}{\index{input.\-c@{input.\-c}!mem\-Templ\-Item\-Right@{mem\-Templ\-Item\-Right}}
+\index{mem\-Templ\-Item\-Right@{mem\-Templ\-Item\-Right}!input.c@{input.\-c}}
+\subsubsection[{mem\-Templ\-Item\-Right}]{\setlength{\rightskip}{0pt plus 5cm}mem\-Templ\-Item\-Right}}\label{input_8c_af091022274dd4a202d587f3acae35aa9}
+\hypertarget{input_8c_ac483f6ce851c9ecd9fb835ff7551737c}{\index{input.\-c@{input.\-c}!p@{p}}
+\index{p@{p}!input.c@{input.\-c}}
+\subsubsection[{p}]{\setlength{\rightskip}{0pt plus 5cm}p}}\label{input_8c_ac483f6ce851c9ecd9fb835ff7551737c}
+\hypertarget{input_8c_aaea8ed8d01160ec7de3bdcf28525449c}{\index{input.\-c@{input.\-c}!post@{post}}
+\index{post@{post}!input.c@{input.\-c}}
+\subsubsection[{post}]{\setlength{\rightskip}{0pt plus 5cm}dl post}}\label{input_8c_aaea8ed8d01160ec7de3bdcf28525449c}
+\hypertarget{input_8c_a7f3fcc3b39464696f5682f787eb99368}{\index{input.\-c@{input.\-c}!retval@{retval}}
+\index{retval@{retval}!input.c@{input.\-c}}
+\subsubsection[{retval}]{\setlength{\rightskip}{0pt plus 5cm}retval}}\label{input_8c_a7f3fcc3b39464696f5682f787eb99368}
+\hypertarget{input_8c_acb48d3101db87d75430b587051623cb1}{\index{input.\-c@{input.\-c}!startdd@{startdd}}
+\index{startdd@{startdd}!input.c@{input.\-c}}
+\subsubsection[{startdd}]{\setlength{\rightskip}{0pt plus 5cm}{\bf p} startdd}}\label{input_8c_acb48d3101db87d75430b587051623cb1}
+\hypertarget{input_8c_ab172ed3d3d31ff02fc5f798fe7e1bfb8}{\index{input.\-c@{input.\-c}!table@{table}}
+\index{table@{table}!input.c@{input.\-c}}
+\subsubsection[{table}]{\setlength{\rightskip}{0pt plus 5cm}table}}\label{input_8c_ab172ed3d3d31ff02fc5f798fe7e1bfb8}
diff --git a/linux-3.17.1/net/gmtp/doc/latex/ipv4_8c.tex b/linux-3.17.1/net/gmtp/doc/latex/ipv4_8c.tex
new file mode 100644
index 0000000..f0d5433
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/ipv4_8c.tex
@@ -0,0 +1,243 @@
+\hypertarget{ipv4_8c}{\section{ipv4.\-c File Reference}
+\label{ipv4_8c}\index{ipv4.\-c@{ipv4.\-c}}
+}
+{\ttfamily \#include $<$linux/init.\-h$>$}\\*
+{\ttfamily \#include $<$linux/module.\-h$>$}\\*
+{\ttfamily \#include $<$linux/err.\-h$>$}\\*
+{\ttfamily \#include $<$linux/errno.\-h$>$}\\*
+{\ttfamily \#include $<$net/inet\-\_\-hashtables.\-h$>$}\\*
+{\ttfamily \#include $<$net/inet\-\_\-common.\-h$>$}\\*
+{\ttfamily \#include $<$net/ip.\-h$>$}\\*
+{\ttfamily \#include $<$net/protocol.\-h$>$}\\*
+{\ttfamily \#include $<$net/request\-\_\-sock.\-h$>$}\\*
+{\ttfamily \#include $<$net/sock.\-h$>$}\\*
+{\ttfamily \#include $<$net/xfrm.\-h$>$}\\*
+{\ttfamily \#include $<$net/secure\-\_\-seq.\-h$>$}\\*
+{\ttfamily \#include $<$uapi/linux/if\-\_\-packet.\-h$>$}\\*
+{\ttfamily \#include $<$uapi/linux/snmp.\-h$>$}\\*
+{\ttfamily \#include $<$uapi/linux/gmtp.\-h$>$}\\*
+{\ttfamily \#include $<$linux/gmtp.\-h$>$}\\*
+{\ttfamily \#include \char`\"{}gmtp.\-h\char`\"{}}\\*
+Include dependency graph for ipv4.\-c\-:\nopagebreak
+\begin{figure}[H]
+\begin{center}
+\leavevmode
+\includegraphics[width=350pt]{ipv4_8c__incl}
+\end{center}
+\end{figure}
+\subsection*{Functions}
+\begin{DoxyCompactItemize}
+\item 
+int \hyperlink{ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3}{gmtp\-\_\-v4\-\_\-connect} (struct sock $\ast$sk, struct sockaddr $\ast$uaddr, int addr\-\_\-len)
+\item 
+\hyperlink{ipv4_8c_aba729ce082e122d7aec35777ade6e7fb}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3}{gmtp\-\_\-v4\-\_\-connect})
+\item 
+void \hyperlink{ipv4_8c_a5257b59975805a2ab1fe3a97bc9a0f42}{gmtp\-\_\-v4\-\_\-err} (struct sk\-\_\-buff $\ast$skb, u32 info)
+\item 
+\hyperlink{ipv4_8c_a836df2e24d1d747e76c1839b38627b1d}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{ipv4_8c_a5257b59975805a2ab1fe3a97bc9a0f42}{gmtp\-\_\-v4\-\_\-err})
+\item 
+int \hyperlink{ipv4_8c_ac0518e2de9174312756a485345984ba5}{gmtp\-\_\-invalid\-\_\-packet} (struct sk\-\_\-buff $\ast$skb)
+\item 
+\hyperlink{ipv4_8c_a81ef47c46ddfba18451d4e991c61996b}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (gmtp\-\_\-v4\-\_\-rcv)
+\item 
+int \hyperlink{ipv4_8c_ac00f58e15e1908bc8f01439f25266cea}{gmtp\-\_\-v4\-\_\-conn\-\_\-request} (struct sock $\ast$sk, struct sk\-\_\-buff $\ast$skb)
+\item 
+\hyperlink{ipv4_8c_a0a0fd79e581d8bc33ebe57cfd4c6ee59}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{ipv4_8c_ac00f58e15e1908bc8f01439f25266cea}{gmtp\-\_\-v4\-\_\-conn\-\_\-request})
+\item 
+int \hyperlink{ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef}{gmtp\-\_\-v4\-\_\-do\-\_\-rcv} (struct sock $\ast$sk, struct sk\-\_\-buff $\ast$skb)
+\item 
+\hyperlink{ipv4_8c_a02a246e3f177672e943fa02d76c61792}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef}{gmtp\-\_\-v4\-\_\-do\-\_\-rcv})
+\item 
+\hyperlink{ipv4_8c_aa732797a38fdc3a4052d4ac3b0e17a90}{module\-\_\-init} (gmtp\-\_\-v4\-\_\-init)
+\item 
+\hyperlink{ipv4_8c_a506da21c4f1be9b593d04268f6f813e0}{module\-\_\-exit} (gmtp\-\_\-v4\-\_\-exit)
+\item 
+\hyperlink{ipv4_8c_a3b891be0948d683a3f0c879702d3b9cb}{M\-O\-D\-U\-L\-E\-\_\-\-A\-L\-I\-A\-S\-\_\-\-N\-E\-T\-\_\-\-P\-F\-\_\-\-P\-R\-O\-T\-O\-\_\-\-T\-Y\-P\-E} (P\-F\-\_\-\-I\-N\-E\-T, I\-P\-P\-R\-O\-T\-O\-\_\-\-G\-M\-T\-P, S\-O\-C\-K\-\_\-\-G\-M\-T\-P)
+\item 
+\hyperlink{ipv4_8c_a0f9c0987d62a80d96fc8a4859950c9b5}{M\-O\-D\-U\-L\-E\-\_\-\-A\-L\-I\-A\-S\-\_\-\-N\-E\-T\-\_\-\-P\-F\-\_\-\-P\-R\-O\-T\-O\-\_\-\-T\-Y\-P\-E} (P\-F\-\_\-\-I\-N\-E\-T, 0, S\-O\-C\-K\-\_\-\-G\-M\-T\-P)
+\item 
+\hyperlink{ipv4_8c_ad94b36675e7eb067ea3ce6ff9e244a44}{M\-O\-D\-U\-L\-E\-\_\-\-L\-I\-C\-E\-N\-S\-E} (\char`\"{}G\-P\-L\char`\"{})
+\item 
+\hyperlink{ipv4_8c_ae540d1ed034c92753f40dcc69dc8081b}{M\-O\-D\-U\-L\-E\-\_\-\-A\-U\-T\-H\-O\-R} (\char`\"{}Wendell Silva Soares $<$wss@ic.\-ufal.\-br$>$\char`\"{})
+\item 
+\hyperlink{ipv4_8c_a81aa4475647c79e5e7d0050d75deda0b}{M\-O\-D\-U\-L\-E\-\_\-\-D\-E\-S\-C\-R\-I\-P\-T\-I\-O\-N} (\char`\"{}G\-M\-T\-P -\/ Global Media Transmission Protocol\char`\"{})
+\end{DoxyCompactItemize}
+\subsection*{Variables}
+\begin{DoxyCompactItemize}
+\item 
+int sysctl\-\_\-ip\-\_\-nonlocal\-\_\-bind \hyperlink{ipv4_8c_a32e197949743cd2e118c0724f2069d67}{\-\_\-\-\_\-read\-\_\-mostly}
+\item 
+struct inet\-\_\-timewait\-\_\-death\-\_\-row \hyperlink{ipv4_8c_a304672a5f2e443d5c24f0c7d520a2299}{gmtp\-\_\-death\-\_\-row}
+\end{DoxyCompactItemize}
+
+
+\subsection{Function Documentation}
+\hypertarget{ipv4_8c_aba729ce082e122d7aec35777ade6e7fb}{\index{ipv4.\-c@{ipv4.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-v4\-\_\-connect}}]{}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_aba729ce082e122d7aec35777ade6e7fb}
+\hypertarget{ipv4_8c_a836df2e24d1d747e76c1839b38627b1d}{\index{ipv4.\-c@{ipv4.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-v4\-\_\-err}}]{}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_a836df2e24d1d747e76c1839b38627b1d}
+\hypertarget{ipv4_8c_a81ef47c46ddfba18451d4e991c61996b}{\index{ipv4.\-c@{ipv4.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{gmtp\-\_\-v4\-\_\-rcv}]{}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_a81ef47c46ddfba18451d4e991c61996b}
+\hypertarget{ipv4_8c_a0a0fd79e581d8bc33ebe57cfd4c6ee59}{\index{ipv4.\-c@{ipv4.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-v4\-\_\-conn\-\_\-request}}]{}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_a0a0fd79e581d8bc33ebe57cfd4c6ee59}
+\hypertarget{ipv4_8c_a02a246e3f177672e943fa02d76c61792}{\index{ipv4.\-c@{ipv4.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-v4\-\_\-do\-\_\-rcv}}]{}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_a02a246e3f177672e943fa02d76c61792}
+\hypertarget{ipv4_8c_ac0518e2de9174312756a485345984ba5}{\index{ipv4.\-c@{ipv4.\-c}!gmtp\-\_\-invalid\-\_\-packet@{gmtp\-\_\-invalid\-\_\-packet}}
+\index{gmtp\-\_\-invalid\-\_\-packet@{gmtp\-\_\-invalid\-\_\-packet}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{gmtp\-\_\-invalid\-\_\-packet}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-invalid\-\_\-packet (
+\begin{DoxyParamCaption}
+\item[{struct sk\-\_\-buff $\ast$}]{skb}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_ac0518e2de9174312756a485345984ba5}
+dccp\-\_\-invalid\-\_\-packet -\/ check for malformed packets Packets that fail these checks are ignored and do not receive Resets. \hypertarget{ipv4_8c_ac00f58e15e1908bc8f01439f25266cea}{\index{ipv4.\-c@{ipv4.\-c}!gmtp\-\_\-v4\-\_\-conn\-\_\-request@{gmtp\-\_\-v4\-\_\-conn\-\_\-request}}
+\index{gmtp\-\_\-v4\-\_\-conn\-\_\-request@{gmtp\-\_\-v4\-\_\-conn\-\_\-request}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{gmtp\-\_\-v4\-\_\-conn\-\_\-request}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-v4\-\_\-conn\-\_\-request (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct sk\-\_\-buff $\ast$}]{skb}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_ac00f58e15e1908bc8f01439f25266cea}
+\hypertarget{ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3}{\index{ipv4.\-c@{ipv4.\-c}!gmtp\-\_\-v4\-\_\-connect@{gmtp\-\_\-v4\-\_\-connect}}
+\index{gmtp\-\_\-v4\-\_\-connect@{gmtp\-\_\-v4\-\_\-connect}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{gmtp\-\_\-v4\-\_\-connect}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-v4\-\_\-connect (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct sockaddr $\ast$}]{uaddr, }
+\item[{int}]{addr\-\_\-len}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3}
+
+
+Here is the call graph for this function\-:\nopagebreak
+\begin{figure}[H]
+\begin{center}
+\leavevmode
+\includegraphics[width=294pt]{ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3_cgraph}
+\end{center}
+\end{figure}
+
+
+\hypertarget{ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef}{\index{ipv4.\-c@{ipv4.\-c}!gmtp\-\_\-v4\-\_\-do\-\_\-rcv@{gmtp\-\_\-v4\-\_\-do\-\_\-rcv}}
+\index{gmtp\-\_\-v4\-\_\-do\-\_\-rcv@{gmtp\-\_\-v4\-\_\-do\-\_\-rcv}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{gmtp\-\_\-v4\-\_\-do\-\_\-rcv}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-v4\-\_\-do\-\_\-rcv (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct sk\-\_\-buff $\ast$}]{skb}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef}
+
+
+Here is the call graph for this function\-:\nopagebreak
+\begin{figure}[H]
+\begin{center}
+\leavevmode
+\includegraphics[width=329pt]{ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef_cgraph}
+\end{center}
+\end{figure}
+
+
+\hypertarget{ipv4_8c_a5257b59975805a2ab1fe3a97bc9a0f42}{\index{ipv4.\-c@{ipv4.\-c}!gmtp\-\_\-v4\-\_\-err@{gmtp\-\_\-v4\-\_\-err}}
+\index{gmtp\-\_\-v4\-\_\-err@{gmtp\-\_\-v4\-\_\-err}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{gmtp\-\_\-v4\-\_\-err}]{\setlength{\rightskip}{0pt plus 5cm}void gmtp\-\_\-v4\-\_\-err (
+\begin{DoxyParamCaption}
+\item[{struct sk\-\_\-buff $\ast$}]{skb, }
+\item[{u32}]{info}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_a5257b59975805a2ab1fe3a97bc9a0f42}
+\hypertarget{ipv4_8c_a3b891be0948d683a3f0c879702d3b9cb}{\index{ipv4.\-c@{ipv4.\-c}!M\-O\-D\-U\-L\-E\-\_\-\-A\-L\-I\-A\-S\-\_\-\-N\-E\-T\-\_\-\-P\-F\-\_\-\-P\-R\-O\-T\-O\-\_\-\-T\-Y\-P\-E@{M\-O\-D\-U\-L\-E\-\_\-\-A\-L\-I\-A\-S\-\_\-\-N\-E\-T\-\_\-\-P\-F\-\_\-\-P\-R\-O\-T\-O\-\_\-\-T\-Y\-P\-E}}
+\index{M\-O\-D\-U\-L\-E\-\_\-\-A\-L\-I\-A\-S\-\_\-\-N\-E\-T\-\_\-\-P\-F\-\_\-\-P\-R\-O\-T\-O\-\_\-\-T\-Y\-P\-E@{M\-O\-D\-U\-L\-E\-\_\-\-A\-L\-I\-A\-S\-\_\-\-N\-E\-T\-\_\-\-P\-F\-\_\-\-P\-R\-O\-T\-O\-\_\-\-T\-Y\-P\-E}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{M\-O\-D\-U\-L\-E\-\_\-\-A\-L\-I\-A\-S\-\_\-\-N\-E\-T\-\_\-\-P\-F\-\_\-\-P\-R\-O\-T\-O\-\_\-\-T\-Y\-P\-E}]{\setlength{\rightskip}{0pt plus 5cm}M\-O\-D\-U\-L\-E\-\_\-\-A\-L\-I\-A\-S\-\_\-\-N\-E\-T\-\_\-\-P\-F\-\_\-\-P\-R\-O\-T\-O\-\_\-\-T\-Y\-P\-E (
+\begin{DoxyParamCaption}
+\item[{P\-F\-\_\-\-I\-N\-E\-T}]{, }
+\item[{I\-P\-P\-R\-O\-T\-O\-\_\-\-G\-M\-T\-P}]{, }
+\item[{S\-O\-C\-K\-\_\-\-G\-M\-T\-P}]{}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_a3b891be0948d683a3f0c879702d3b9cb}
+\hypertarget{ipv4_8c_a0f9c0987d62a80d96fc8a4859950c9b5}{\index{ipv4.\-c@{ipv4.\-c}!M\-O\-D\-U\-L\-E\-\_\-\-A\-L\-I\-A\-S\-\_\-\-N\-E\-T\-\_\-\-P\-F\-\_\-\-P\-R\-O\-T\-O\-\_\-\-T\-Y\-P\-E@{M\-O\-D\-U\-L\-E\-\_\-\-A\-L\-I\-A\-S\-\_\-\-N\-E\-T\-\_\-\-P\-F\-\_\-\-P\-R\-O\-T\-O\-\_\-\-T\-Y\-P\-E}}
+\index{M\-O\-D\-U\-L\-E\-\_\-\-A\-L\-I\-A\-S\-\_\-\-N\-E\-T\-\_\-\-P\-F\-\_\-\-P\-R\-O\-T\-O\-\_\-\-T\-Y\-P\-E@{M\-O\-D\-U\-L\-E\-\_\-\-A\-L\-I\-A\-S\-\_\-\-N\-E\-T\-\_\-\-P\-F\-\_\-\-P\-R\-O\-T\-O\-\_\-\-T\-Y\-P\-E}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{M\-O\-D\-U\-L\-E\-\_\-\-A\-L\-I\-A\-S\-\_\-\-N\-E\-T\-\_\-\-P\-F\-\_\-\-P\-R\-O\-T\-O\-\_\-\-T\-Y\-P\-E}]{\setlength{\rightskip}{0pt plus 5cm}M\-O\-D\-U\-L\-E\-\_\-\-A\-L\-I\-A\-S\-\_\-\-N\-E\-T\-\_\-\-P\-F\-\_\-\-P\-R\-O\-T\-O\-\_\-\-T\-Y\-P\-E (
+\begin{DoxyParamCaption}
+\item[{P\-F\-\_\-\-I\-N\-E\-T}]{, }
+\item[{0}]{, }
+\item[{S\-O\-C\-K\-\_\-\-G\-M\-T\-P}]{}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_a0f9c0987d62a80d96fc8a4859950c9b5}
+\hypertarget{ipv4_8c_ae540d1ed034c92753f40dcc69dc8081b}{\index{ipv4.\-c@{ipv4.\-c}!M\-O\-D\-U\-L\-E\-\_\-\-A\-U\-T\-H\-O\-R@{M\-O\-D\-U\-L\-E\-\_\-\-A\-U\-T\-H\-O\-R}}
+\index{M\-O\-D\-U\-L\-E\-\_\-\-A\-U\-T\-H\-O\-R@{M\-O\-D\-U\-L\-E\-\_\-\-A\-U\-T\-H\-O\-R}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{M\-O\-D\-U\-L\-E\-\_\-\-A\-U\-T\-H\-O\-R}]{\setlength{\rightskip}{0pt plus 5cm}M\-O\-D\-U\-L\-E\-\_\-\-A\-U\-T\-H\-O\-R (
+\begin{DoxyParamCaption}
+\item[{\char`\"{}Wendell Silva Soares $<$wss@ic.\-ufal.\-br$>$\char`\"{}}]{}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_ae540d1ed034c92753f40dcc69dc8081b}
+\hypertarget{ipv4_8c_a81aa4475647c79e5e7d0050d75deda0b}{\index{ipv4.\-c@{ipv4.\-c}!M\-O\-D\-U\-L\-E\-\_\-\-D\-E\-S\-C\-R\-I\-P\-T\-I\-O\-N@{M\-O\-D\-U\-L\-E\-\_\-\-D\-E\-S\-C\-R\-I\-P\-T\-I\-O\-N}}
+\index{M\-O\-D\-U\-L\-E\-\_\-\-D\-E\-S\-C\-R\-I\-P\-T\-I\-O\-N@{M\-O\-D\-U\-L\-E\-\_\-\-D\-E\-S\-C\-R\-I\-P\-T\-I\-O\-N}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{M\-O\-D\-U\-L\-E\-\_\-\-D\-E\-S\-C\-R\-I\-P\-T\-I\-O\-N}]{\setlength{\rightskip}{0pt plus 5cm}M\-O\-D\-U\-L\-E\-\_\-\-D\-E\-S\-C\-R\-I\-P\-T\-I\-O\-N (
+\begin{DoxyParamCaption}
+\item[{\char`\"{}G\-M\-T\-P -\/ Global Media Transmission Protocol\char`\"{}}]{}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_a81aa4475647c79e5e7d0050d75deda0b}
+\hypertarget{ipv4_8c_a506da21c4f1be9b593d04268f6f813e0}{\index{ipv4.\-c@{ipv4.\-c}!module\-\_\-exit@{module\-\_\-exit}}
+\index{module\-\_\-exit@{module\-\_\-exit}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{module\-\_\-exit}]{\setlength{\rightskip}{0pt plus 5cm}module\-\_\-exit (
+\begin{DoxyParamCaption}
+\item[{gmtp\-\_\-v4\-\_\-exit}]{}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_a506da21c4f1be9b593d04268f6f813e0}
+\hypertarget{ipv4_8c_aa732797a38fdc3a4052d4ac3b0e17a90}{\index{ipv4.\-c@{ipv4.\-c}!module\-\_\-init@{module\-\_\-init}}
+\index{module\-\_\-init@{module\-\_\-init}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{module\-\_\-init}]{\setlength{\rightskip}{0pt plus 5cm}module\-\_\-init (
+\begin{DoxyParamCaption}
+\item[{gmtp\-\_\-v4\-\_\-init}]{}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_aa732797a38fdc3a4052d4ac3b0e17a90}
+\hypertarget{ipv4_8c_ad94b36675e7eb067ea3ce6ff9e244a44}{\index{ipv4.\-c@{ipv4.\-c}!M\-O\-D\-U\-L\-E\-\_\-\-L\-I\-C\-E\-N\-S\-E@{M\-O\-D\-U\-L\-E\-\_\-\-L\-I\-C\-E\-N\-S\-E}}
+\index{M\-O\-D\-U\-L\-E\-\_\-\-L\-I\-C\-E\-N\-S\-E@{M\-O\-D\-U\-L\-E\-\_\-\-L\-I\-C\-E\-N\-S\-E}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{M\-O\-D\-U\-L\-E\-\_\-\-L\-I\-C\-E\-N\-S\-E}]{\setlength{\rightskip}{0pt plus 5cm}M\-O\-D\-U\-L\-E\-\_\-\-L\-I\-C\-E\-N\-S\-E (
+\begin{DoxyParamCaption}
+\item[{\char`\"{}G\-P\-L\char`\"{}}]{}
+\end{DoxyParamCaption}
+)}}\label{ipv4_8c_ad94b36675e7eb067ea3ce6ff9e244a44}
+
+
+\subsection{Variable Documentation}
+\hypertarget{ipv4_8c_a32e197949743cd2e118c0724f2069d67}{\index{ipv4.\-c@{ipv4.\-c}!\-\_\-\-\_\-read\-\_\-mostly@{\-\_\-\-\_\-read\-\_\-mostly}}
+\index{\-\_\-\-\_\-read\-\_\-mostly@{\-\_\-\-\_\-read\-\_\-mostly}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{\-\_\-\-\_\-read\-\_\-mostly}]{\setlength{\rightskip}{0pt plus 5cm}static struct request\-\_\-sock\-\_\-ops gmtp\-\_\-request\-\_\-sock\-\_\-ops \-\_\-\-\_\-read\-\_\-mostly}}\label{ipv4_8c_a32e197949743cd2e118c0724f2069d67}
+{\bfseries Initial value\-:}
+\begin{DoxyCode}
+ \{
+        .family = PF\_INET,
+        .obj\_size = \textcolor{keyword}{sizeof}(\textcolor{keyword}{struct }gmtp\_request\_sock),
+        .rtx\_syn\_ack    = gmtp\_v4\_send\_response,
+        .destructor     = gmtp\_v4\_reqsk\_destructor,
+        .send\_reset     = gmtp\_v4\_ctl\_send\_reset,
+\}
+\end{DoxyCode}
+\hypertarget{ipv4_8c_a304672a5f2e443d5c24f0c7d520a2299}{\index{ipv4.\-c@{ipv4.\-c}!gmtp\-\_\-death\-\_\-row@{gmtp\-\_\-death\-\_\-row}}
+\index{gmtp\-\_\-death\-\_\-row@{gmtp\-\_\-death\-\_\-row}!ipv4.c@{ipv4.\-c}}
+\subsubsection[{gmtp\-\_\-death\-\_\-row}]{\setlength{\rightskip}{0pt plus 5cm}struct inet\-\_\-timewait\-\_\-death\-\_\-row gmtp\-\_\-death\-\_\-row}}\label{ipv4_8c_a304672a5f2e443d5c24f0c7d520a2299}
diff --git a/linux-3.17.1/net/gmtp/doc/latex/ipv4_8c__incl.md5 b/linux-3.17.1/net/gmtp/doc/latex/ipv4_8c__incl.md5
new file mode 100644
index 0000000..3ea7272
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/ipv4_8c__incl.md5
@@ -0,0 +1 @@
+f7fee4f812e1cbb074ad246bedb2d388
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/latex/ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3_cgraph.md5 b/linux-3.17.1/net/gmtp/doc/latex/ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3_cgraph.md5
new file mode 100644
index 0000000..ecf073b
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/ipv4_8c_a3d651b3671bf86675ce95fb92228b6a3_cgraph.md5
@@ -0,0 +1 @@
+0e05fe4c982074a39d2e47ab5c4b7f9a
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/latex/ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef_cgraph.md5 b/linux-3.17.1/net/gmtp/doc/latex/ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef_cgraph.md5
new file mode 100644
index 0000000..a32a5bd
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/ipv4_8c_a96e77cd9da9396b4e3e9d2ca1bdd62ef_cgraph.md5
@@ -0,0 +1 @@
+0eaaf3eff90a8a1205ac08364eb79434
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/latex/output_8c.tex b/linux-3.17.1/net/gmtp/doc/latex/output_8c.tex
new file mode 100644
index 0000000..1b82dea
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/output_8c.tex
@@ -0,0 +1,92 @@
+\hypertarget{output_8c}{\section{output.\-c File Reference}
+\label{output_8c}\index{output.\-c@{output.\-c}}
+}
+{\ttfamily \#include $<$linux/kernel.\-h$>$}\\*
+{\ttfamily \#include $<$linux/skbuff.\-h$>$}\\*
+{\ttfamily \#include $<$linux/slab.\-h$>$}\\*
+{\ttfamily \#include $<$linux/gmtp.\-h$>$}\\*
+{\ttfamily \#include $<$linux/types.\-h$>$}\\*
+{\ttfamily \#include $<$net/inet\-\_\-sock.\-h$>$}\\*
+{\ttfamily \#include $<$net/sock.\-h$>$}\\*
+{\ttfamily \#include \char`\"{}gmtp.\-h\char`\"{}}\\*
+Include dependency graph for output.\-c\-:\nopagebreak
+\begin{figure}[H]
+\begin{center}
+\leavevmode
+\includegraphics[width=350pt]{output_8c__incl}
+\end{center}
+\end{figure}
+\subsection*{Functions}
+\begin{DoxyCompactItemize}
+\item 
+int \hyperlink{output_8c_a2df4bd07928440434f3ffc5e9a99e192}{gmtp\-\_\-connect} (struct sock $\ast$sk)
+\item 
+\hyperlink{output_8c_a8823c64d48b3edf631d90827fe8145a1}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{output_8c_a2df4bd07928440434f3ffc5e9a99e192}{gmtp\-\_\-connect})
+\item 
+struct sk\-\_\-buff $\ast$ \hyperlink{output_8c_a8e94a84dd0d5b12f39df23b6c6ff005b}{gmtp\-\_\-make\-\_\-response} (struct sock $\ast$sk, struct dst\-\_\-entry $\ast$dst, struct request\-\_\-sock $\ast$req)
+\item 
+\hyperlink{output_8c_ab51c1008fc15439db56e838547dd798a}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{output_8c_a8e94a84dd0d5b12f39df23b6c6ff005b}{gmtp\-\_\-make\-\_\-response})
+\item 
+struct sk\-\_\-buff $\ast$ \hyperlink{output_8c_a702ba25884e070b579dcfa4769260847}{gmtp\-\_\-ctl\-\_\-make\-\_\-reset} (struct sock $\ast$sk, struct sk\-\_\-buff $\ast$rcv\-\_\-skb)
+\item 
+\hyperlink{output_8c_af63283ab704f9c1e284327090204d962}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{output_8c_a702ba25884e070b579dcfa4769260847}{gmtp\-\_\-ctl\-\_\-make\-\_\-reset})
+\end{DoxyCompactItemize}
+
+
+\subsection{Function Documentation}
+\hypertarget{output_8c_a8823c64d48b3edf631d90827fe8145a1}{\index{output.\-c@{output.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!output.c@{output.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-connect}}]{}
+\end{DoxyParamCaption}
+)}}\label{output_8c_a8823c64d48b3edf631d90827fe8145a1}
+\hypertarget{output_8c_ab51c1008fc15439db56e838547dd798a}{\index{output.\-c@{output.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!output.c@{output.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-make\-\_\-response}}]{}
+\end{DoxyParamCaption}
+)}}\label{output_8c_ab51c1008fc15439db56e838547dd798a}
+\hypertarget{output_8c_af63283ab704f9c1e284327090204d962}{\index{output.\-c@{output.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!output.c@{output.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-ctl\-\_\-make\-\_\-reset}}]{}
+\end{DoxyParamCaption}
+)}}\label{output_8c_af63283ab704f9c1e284327090204d962}
+\hypertarget{output_8c_a2df4bd07928440434f3ffc5e9a99e192}{\index{output.\-c@{output.\-c}!gmtp\-\_\-connect@{gmtp\-\_\-connect}}
+\index{gmtp\-\_\-connect@{gmtp\-\_\-connect}!output.c@{output.\-c}}
+\subsubsection[{gmtp\-\_\-connect}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-connect (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk}
+\end{DoxyParamCaption}
+)}}\label{output_8c_a2df4bd07928440434f3ffc5e9a99e192}
+
+
+Here is the caller graph for this function\-:\nopagebreak
+\begin{figure}[H]
+\begin{center}
+\leavevmode
+\includegraphics[width=288pt]{output_8c_a2df4bd07928440434f3ffc5e9a99e192_icgraph}
+\end{center}
+\end{figure}
+
+
+\hypertarget{output_8c_a702ba25884e070b579dcfa4769260847}{\index{output.\-c@{output.\-c}!gmtp\-\_\-ctl\-\_\-make\-\_\-reset@{gmtp\-\_\-ctl\-\_\-make\-\_\-reset}}
+\index{gmtp\-\_\-ctl\-\_\-make\-\_\-reset@{gmtp\-\_\-ctl\-\_\-make\-\_\-reset}!output.c@{output.\-c}}
+\subsubsection[{gmtp\-\_\-ctl\-\_\-make\-\_\-reset}]{\setlength{\rightskip}{0pt plus 5cm}struct sk\-\_\-buff$\ast$ gmtp\-\_\-ctl\-\_\-make\-\_\-reset (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct sk\-\_\-buff $\ast$}]{rcv\-\_\-skb}
+\end{DoxyParamCaption}
+)\hspace{0.3cm}{\ttfamily [read]}}}\label{output_8c_a702ba25884e070b579dcfa4769260847}
+\hypertarget{output_8c_a8e94a84dd0d5b12f39df23b6c6ff005b}{\index{output.\-c@{output.\-c}!gmtp\-\_\-make\-\_\-response@{gmtp\-\_\-make\-\_\-response}}
+\index{gmtp\-\_\-make\-\_\-response@{gmtp\-\_\-make\-\_\-response}!output.c@{output.\-c}}
+\subsubsection[{gmtp\-\_\-make\-\_\-response}]{\setlength{\rightskip}{0pt plus 5cm}struct sk\-\_\-buff$\ast$ gmtp\-\_\-make\-\_\-response (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct dst\-\_\-entry $\ast$}]{dst, }
+\item[{struct request\-\_\-sock $\ast$}]{req}
+\end{DoxyParamCaption}
+)\hspace{0.3cm}{\ttfamily [read]}}}\label{output_8c_a8e94a84dd0d5b12f39df23b6c6ff005b}
diff --git a/linux-3.17.1/net/gmtp/doc/latex/output_8c__incl.md5 b/linux-3.17.1/net/gmtp/doc/latex/output_8c__incl.md5
new file mode 100644
index 0000000..ff1877c
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/output_8c__incl.md5
@@ -0,0 +1 @@
+f5b61b334104497f60cb62339571825e
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/latex/output_8c_a2df4bd07928440434f3ffc5e9a99e192_icgraph.md5 b/linux-3.17.1/net/gmtp/doc/latex/output_8c_a2df4bd07928440434f3ffc5e9a99e192_icgraph.md5
new file mode 100644
index 0000000..b8782b6
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/output_8c_a2df4bd07928440434f3ffc5e9a99e192_icgraph.md5
@@ -0,0 +1 @@
+7ae46efb2fc4200a04cbde946420664c
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/latex/proto_8c.tex b/linux-3.17.1/net/gmtp/doc/latex/proto_8c.tex
new file mode 100644
index 0000000..b845424
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/proto_8c.tex
@@ -0,0 +1,437 @@
+\hypertarget{proto_8c}{\section{proto.\-c File Reference}
+\label{proto_8c}\index{proto.\-c@{proto.\-c}}
+}
+{\ttfamily \#include $<$asm/ioctls.\-h$>$}\\*
+{\ttfamily \#include $<$linux/init.\-h$>$}\\*
+{\ttfamily \#include $<$linux/module.\-h$>$}\\*
+{\ttfamily \#include $<$linux/types.\-h$>$}\\*
+{\ttfamily \#include $<$net/inet\-\_\-hashtables.\-h$>$}\\*
+{\ttfamily \#include $<$net/sock.\-h$>$}\\*
+{\ttfamily \#include \char`\"{}gmtp.\-h\char`\"{}}\\*
+Include dependency graph for proto.\-c\-:\nopagebreak
+\begin{figure}[H]
+\begin{center}
+\leavevmode
+\includegraphics[width=350pt]{proto_8c__incl}
+\end{center}
+\end{figure}
+\subsection*{Functions}
+\begin{DoxyCompactItemize}
+\item 
+\hyperlink{proto_8c_a55eca9800ebea2d452379b6c957e1ae0}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_ab43beb876bb256a2f539107b7f589c44}{gmtp\-\_\-hashinfo})
+\item 
+\hyperlink{proto_8c_ab79c6a01f15a2d7a57c601da48518b94}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_a304672a5f2e443d5c24f0c7d520a2299}{gmtp\-\_\-death\-\_\-row})
+\item 
+\hyperlink{proto_8c_a232988d276bf40d7c15be1fcd7af9d83}{module\-\_\-param} (thash\-\_\-entries, int, 0444)
+\item 
+\hyperlink{proto_8c_ad4e09849d2bc32d70e247bc5172fcf8b}{M\-O\-D\-U\-L\-E\-\_\-\-P\-A\-R\-M\-\_\-\-D\-E\-S\-C} (thash\-\_\-entries,\char`\"{}Number of ehash buckets\char`\"{})
+\item 
+const char $\ast$ \hyperlink{proto_8c_a9984b8752cb8758660297cce25f6dd54}{gmtp\-\_\-packet\-\_\-name} (const int type)
+\item 
+\hyperlink{proto_8c_a022de102dea8fa0d856b0250705464b7}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_a9984b8752cb8758660297cce25f6dd54}{gmtp\-\_\-packet\-\_\-name})
+\item 
+void \hyperlink{proto_8c_a2c20286d5df6e6774719d719be9d3a13}{gmtp\-\_\-set\-\_\-state} (struct sock $\ast$sk, const int state)
+\item 
+\hyperlink{proto_8c_a7f4fc2baaa902bf0faa4b08718ca48c9}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_a2c20286d5df6e6774719d719be9d3a13}{gmtp\-\_\-set\-\_\-state})
+\item 
+int \hyperlink{proto_8c_a1c872c8a33008e99befdb297a6518e03}{gmtp\-\_\-init\-\_\-sock} (struct sock $\ast$sk, const \-\_\-\-\_\-u8 ctl\-\_\-sock\-\_\-initialized)
+\item 
+\hyperlink{proto_8c_a43dd2bf3cf0ea29dc62991109832cf66}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_a1c872c8a33008e99befdb297a6518e03}{gmtp\-\_\-init\-\_\-sock})
+\item 
+void \hyperlink{proto_8c_ada146a75c7595313fda4021b3d64f2af}{gmtp\-\_\-destroy\-\_\-sock} (struct sock $\ast$sk)
+\item 
+\hyperlink{proto_8c_a71c81285d972adbb9dac3c2901474913}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_ada146a75c7595313fda4021b3d64f2af}{gmtp\-\_\-destroy\-\_\-sock})
+\item 
+int \hyperlink{proto_8c_aa43e6c6314b0b836ffb2616535879838}{inet\-\_\-gmtp\-\_\-listen} (struct socket $\ast$sock, int backlog)
+\item 
+\hyperlink{proto_8c_a5e92e64108425c3efcfedafe042b69f5}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_aa43e6c6314b0b836ffb2616535879838}{inet\-\_\-gmtp\-\_\-listen})
+\item 
+void \hyperlink{proto_8c_a59f856ab28c13b885fbe2c38f7a70a87}{gmtp\-\_\-close} (struct sock $\ast$sk, long timeout)
+\item 
+\hyperlink{proto_8c_a62309d17a84cfca80bd5ed64f792b81d}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_a59f856ab28c13b885fbe2c38f7a70a87}{gmtp\-\_\-close})
+\item 
+int \hyperlink{proto_8c_a8dacfb87447f165efac077aa907a8e27}{gmtp\-\_\-disconnect} (struct sock $\ast$sk, int flags)
+\item 
+\hyperlink{proto_8c_a58189c4b73a9797678c889b711c43370}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_a8dacfb87447f165efac077aa907a8e27}{gmtp\-\_\-disconnect})
+\item 
+int \hyperlink{proto_8c_ab9bd011833dc85384f4d3c6e5c29f6de}{gmtp\-\_\-ioctl} (struct sock $\ast$sk, int cmd, unsigned long arg)
+\item 
+\hyperlink{proto_8c_aff3994d7b921e54bf48117ad68260008}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_ab9bd011833dc85384f4d3c6e5c29f6de}{gmtp\-\_\-ioctl})
+\item 
+int \hyperlink{proto_8c_a789192a2299f8f626e034ad9c87d99b2}{gmtp\-\_\-getsockopt} (struct sock $\ast$sk, int level, int optname, char \-\_\-\-\_\-user $\ast$optval, int \-\_\-\-\_\-user $\ast$optlen)
+\item 
+\hyperlink{proto_8c_a0c2d8183d16404af5ecc36d7f369d40c}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_a789192a2299f8f626e034ad9c87d99b2}{gmtp\-\_\-getsockopt})
+\item 
+int \hyperlink{proto_8c_a76ebcaaace625859ee741e890d7e7da7}{gmtp\-\_\-sendmsg} (struct kiocb $\ast$iocb, struct sock $\ast$sk, struct msghdr $\ast$msg, size\-\_\-t size)
+\item 
+\hyperlink{proto_8c_a7aa55ae25e24baeabffdcae359c65699}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_a76ebcaaace625859ee741e890d7e7da7}{gmtp\-\_\-sendmsg})
+\item 
+int \hyperlink{proto_8c_aa5511c6bf84a1956f308ce920a134c29}{gmtp\-\_\-setsockopt} (struct sock $\ast$sk, int level, int optname, char \-\_\-\-\_\-user $\ast$optval, unsigned int optlen)
+\item 
+\hyperlink{proto_8c_a06f8bada3169d9f63b013280475ee6f0}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_aa5511c6bf84a1956f308ce920a134c29}{gmtp\-\_\-setsockopt})
+\item 
+int \hyperlink{proto_8c_a462ae3f8dd122bdee2af7fd115694db4}{gmtp\-\_\-recvmsg} (struct kiocb $\ast$iocb, struct sock $\ast$sk, struct msghdr $\ast$msg, size\-\_\-t len, int nonblock, int flags, int $\ast$addr\-\_\-len)
+\item 
+\hyperlink{proto_8c_a828a1602037d7a1e44abcc0756010e79}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_a462ae3f8dd122bdee2af7fd115694db4}{gmtp\-\_\-recvmsg})
+\item 
+int \hyperlink{proto_8c_ad87dbd137414cabb75038daf5d227af2}{gmtp\-\_\-do\-\_\-rcv} (struct sock $\ast$sk, struct sk\-\_\-buff $\ast$skb)
+\item 
+\hyperlink{proto_8c_a0530c0aaec158dfb00d2ab15a71c6571}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_ad87dbd137414cabb75038daf5d227af2}{gmtp\-\_\-do\-\_\-rcv})
+\item 
+void \hyperlink{proto_8c_ae74ac6585ac8e29b98e916f4f29ae3f0}{gmtp\-\_\-shutdown} (struct sock $\ast$sk, int how)
+\item 
+\hyperlink{proto_8c_a457458302de4290b0602c55c7b619ea0}{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L} (\hyperlink{proto_8c_ae74ac6585ac8e29b98e916f4f29ae3f0}{gmtp\-\_\-shutdown})
+\item 
+\hyperlink{proto_8c_a8fe804f33b35ccae3b8c82bee513b750}{module\-\_\-init} (gmtp\-\_\-init)
+\item 
+\hyperlink{proto_8c_a9761956e9851cccd3f1c40d2a6b0fcdd}{module\-\_\-exit} (gmtp\-\_\-exit)
+\item 
+\hyperlink{proto_8c_ad94b36675e7eb067ea3ce6ff9e244a44}{M\-O\-D\-U\-L\-E\-\_\-\-L\-I\-C\-E\-N\-S\-E} (\char`\"{}G\-P\-L\char`\"{})
+\item 
+\hyperlink{proto_8c_ae540d1ed034c92753f40dcc69dc8081b}{M\-O\-D\-U\-L\-E\-\_\-\-A\-U\-T\-H\-O\-R} (\char`\"{}Wendell Silva Soares $<$wss@ic.\-ufal.\-br$>$\char`\"{})
+\item 
+\hyperlink{proto_8c_a81aa4475647c79e5e7d0050d75deda0b}{M\-O\-D\-U\-L\-E\-\_\-\-D\-E\-S\-C\-R\-I\-P\-T\-I\-O\-N} (\char`\"{}G\-M\-T\-P -\/ Global Media Transmission Protocol\char`\"{})
+\end{DoxyCompactItemize}
+\subsection*{Variables}
+\begin{DoxyCompactItemize}
+\item 
+struct inet\-\_\-hashinfo \hyperlink{proto_8c_ab43beb876bb256a2f539107b7f589c44}{gmtp\-\_\-hashinfo}
+\item 
+struct inet\-\_\-timewait\-\_\-death\-\_\-row \hyperlink{proto_8c_a304672a5f2e443d5c24f0c7d520a2299}{gmtp\-\_\-death\-\_\-row}
+\end{DoxyCompactItemize}
+
+
+\subsection{Detailed Description}
+
+
+\subsection{Function Documentation}
+\hypertarget{proto_8c_a55eca9800ebea2d452379b6c957e1ae0}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-hashinfo}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a55eca9800ebea2d452379b6c957e1ae0}
+\hypertarget{proto_8c_ab79c6a01f15a2d7a57c601da48518b94}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-death\-\_\-row}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_ab79c6a01f15a2d7a57c601da48518b94}
+\hypertarget{proto_8c_a022de102dea8fa0d856b0250705464b7}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-packet\-\_\-name}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a022de102dea8fa0d856b0250705464b7}
+\hypertarget{proto_8c_a7f4fc2baaa902bf0faa4b08718ca48c9}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-set\-\_\-state}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a7f4fc2baaa902bf0faa4b08718ca48c9}
+\hypertarget{proto_8c_a43dd2bf3cf0ea29dc62991109832cf66}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-init\-\_\-sock}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a43dd2bf3cf0ea29dc62991109832cf66}
+\hypertarget{proto_8c_a71c81285d972adbb9dac3c2901474913}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-destroy\-\_\-sock}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a71c81285d972adbb9dac3c2901474913}
+\hypertarget{proto_8c_a5e92e64108425c3efcfedafe042b69f5}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf inet\-\_\-gmtp\-\_\-listen}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a5e92e64108425c3efcfedafe042b69f5}
+\hypertarget{proto_8c_a62309d17a84cfca80bd5ed64f792b81d}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-close}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a62309d17a84cfca80bd5ed64f792b81d}
+\hypertarget{proto_8c_a58189c4b73a9797678c889b711c43370}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-disconnect}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a58189c4b73a9797678c889b711c43370}
+\hypertarget{proto_8c_aff3994d7b921e54bf48117ad68260008}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-ioctl}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_aff3994d7b921e54bf48117ad68260008}
+\hypertarget{proto_8c_a0c2d8183d16404af5ecc36d7f369d40c}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-getsockopt}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a0c2d8183d16404af5ecc36d7f369d40c}
+\hypertarget{proto_8c_a7aa55ae25e24baeabffdcae359c65699}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-sendmsg}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a7aa55ae25e24baeabffdcae359c65699}
+\hypertarget{proto_8c_a06f8bada3169d9f63b013280475ee6f0}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-setsockopt}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a06f8bada3169d9f63b013280475ee6f0}
+\hypertarget{proto_8c_a828a1602037d7a1e44abcc0756010e79}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-recvmsg}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a828a1602037d7a1e44abcc0756010e79}
+\hypertarget{proto_8c_a0530c0aaec158dfb00d2ab15a71c6571}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-do\-\_\-rcv}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a0530c0aaec158dfb00d2ab15a71c6571}
+\hypertarget{proto_8c_a457458302de4290b0602c55c7b619ea0}{\index{proto.\-c@{proto.\-c}!E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}}
+\index{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L@{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}!proto.c@{proto.\-c}}
+\subsubsection[{E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L}]{\setlength{\rightskip}{0pt plus 5cm}E\-X\-P\-O\-R\-T\-\_\-\-S\-Y\-M\-B\-O\-L\-\_\-\-G\-P\-L (
+\begin{DoxyParamCaption}
+\item[{{\bf gmtp\-\_\-shutdown}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a457458302de4290b0602c55c7b619ea0}
+\hypertarget{proto_8c_a59f856ab28c13b885fbe2c38f7a70a87}{\index{proto.\-c@{proto.\-c}!gmtp\-\_\-close@{gmtp\-\_\-close}}
+\index{gmtp\-\_\-close@{gmtp\-\_\-close}!proto.c@{proto.\-c}}
+\subsubsection[{gmtp\-\_\-close}]{\setlength{\rightskip}{0pt plus 5cm}void gmtp\-\_\-close (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{long}]{timeout}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a59f856ab28c13b885fbe2c38f7a70a87}
+\hypertarget{proto_8c_ada146a75c7595313fda4021b3d64f2af}{\index{proto.\-c@{proto.\-c}!gmtp\-\_\-destroy\-\_\-sock@{gmtp\-\_\-destroy\-\_\-sock}}
+\index{gmtp\-\_\-destroy\-\_\-sock@{gmtp\-\_\-destroy\-\_\-sock}!proto.c@{proto.\-c}}
+\subsubsection[{gmtp\-\_\-destroy\-\_\-sock}]{\setlength{\rightskip}{0pt plus 5cm}void gmtp\-\_\-destroy\-\_\-sock (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_ada146a75c7595313fda4021b3d64f2af}
+\hypertarget{proto_8c_a8dacfb87447f165efac077aa907a8e27}{\index{proto.\-c@{proto.\-c}!gmtp\-\_\-disconnect@{gmtp\-\_\-disconnect}}
+\index{gmtp\-\_\-disconnect@{gmtp\-\_\-disconnect}!proto.c@{proto.\-c}}
+\subsubsection[{gmtp\-\_\-disconnect}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-disconnect (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{int}]{flags}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a8dacfb87447f165efac077aa907a8e27}
+\hypertarget{proto_8c_ad87dbd137414cabb75038daf5d227af2}{\index{proto.\-c@{proto.\-c}!gmtp\-\_\-do\-\_\-rcv@{gmtp\-\_\-do\-\_\-rcv}}
+\index{gmtp\-\_\-do\-\_\-rcv@{gmtp\-\_\-do\-\_\-rcv}!proto.c@{proto.\-c}}
+\subsubsection[{gmtp\-\_\-do\-\_\-rcv}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-do\-\_\-rcv (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct sk\-\_\-buff $\ast$}]{skb}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_ad87dbd137414cabb75038daf5d227af2}
+\hypertarget{proto_8c_a789192a2299f8f626e034ad9c87d99b2}{\index{proto.\-c@{proto.\-c}!gmtp\-\_\-getsockopt@{gmtp\-\_\-getsockopt}}
+\index{gmtp\-\_\-getsockopt@{gmtp\-\_\-getsockopt}!proto.c@{proto.\-c}}
+\subsubsection[{gmtp\-\_\-getsockopt}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-getsockopt (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{int}]{level, }
+\item[{int}]{optname, }
+\item[{char \-\_\-\-\_\-user $\ast$}]{optval, }
+\item[{int \-\_\-\-\_\-user $\ast$}]{optlen}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a789192a2299f8f626e034ad9c87d99b2}
+\hypertarget{proto_8c_a1c872c8a33008e99befdb297a6518e03}{\index{proto.\-c@{proto.\-c}!gmtp\-\_\-init\-\_\-sock@{gmtp\-\_\-init\-\_\-sock}}
+\index{gmtp\-\_\-init\-\_\-sock@{gmtp\-\_\-init\-\_\-sock}!proto.c@{proto.\-c}}
+\subsubsection[{gmtp\-\_\-init\-\_\-sock}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-init\-\_\-sock (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{const \-\_\-\-\_\-u8}]{ctl\-\_\-sock\-\_\-initialized}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a1c872c8a33008e99befdb297a6518e03}
+\hypertarget{proto_8c_ab9bd011833dc85384f4d3c6e5c29f6de}{\index{proto.\-c@{proto.\-c}!gmtp\-\_\-ioctl@{gmtp\-\_\-ioctl}}
+\index{gmtp\-\_\-ioctl@{gmtp\-\_\-ioctl}!proto.c@{proto.\-c}}
+\subsubsection[{gmtp\-\_\-ioctl}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-ioctl (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{int}]{cmd, }
+\item[{unsigned long}]{arg}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_ab9bd011833dc85384f4d3c6e5c29f6de}
+\hypertarget{proto_8c_a9984b8752cb8758660297cce25f6dd54}{\index{proto.\-c@{proto.\-c}!gmtp\-\_\-packet\-\_\-name@{gmtp\-\_\-packet\-\_\-name}}
+\index{gmtp\-\_\-packet\-\_\-name@{gmtp\-\_\-packet\-\_\-name}!proto.c@{proto.\-c}}
+\subsubsection[{gmtp\-\_\-packet\-\_\-name}]{\setlength{\rightskip}{0pt plus 5cm}const char$\ast$ gmtp\-\_\-packet\-\_\-name (
+\begin{DoxyParamCaption}
+\item[{const int}]{type}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a9984b8752cb8758660297cce25f6dd54}
+\hypertarget{proto_8c_a462ae3f8dd122bdee2af7fd115694db4}{\index{proto.\-c@{proto.\-c}!gmtp\-\_\-recvmsg@{gmtp\-\_\-recvmsg}}
+\index{gmtp\-\_\-recvmsg@{gmtp\-\_\-recvmsg}!proto.c@{proto.\-c}}
+\subsubsection[{gmtp\-\_\-recvmsg}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-recvmsg (
+\begin{DoxyParamCaption}
+\item[{struct kiocb $\ast$}]{iocb, }
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct msghdr $\ast$}]{msg, }
+\item[{size\-\_\-t}]{len, }
+\item[{int}]{nonblock, }
+\item[{int}]{flags, }
+\item[{int $\ast$}]{addr\-\_\-len}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a462ae3f8dd122bdee2af7fd115694db4}
+\hypertarget{proto_8c_a76ebcaaace625859ee741e890d7e7da7}{\index{proto.\-c@{proto.\-c}!gmtp\-\_\-sendmsg@{gmtp\-\_\-sendmsg}}
+\index{gmtp\-\_\-sendmsg@{gmtp\-\_\-sendmsg}!proto.c@{proto.\-c}}
+\subsubsection[{gmtp\-\_\-sendmsg}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-sendmsg (
+\begin{DoxyParamCaption}
+\item[{struct kiocb $\ast$}]{iocb, }
+\item[{struct sock $\ast$}]{sk, }
+\item[{struct msghdr $\ast$}]{msg, }
+\item[{size\-\_\-t}]{size}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a76ebcaaace625859ee741e890d7e7da7}
+\hypertarget{proto_8c_a2c20286d5df6e6774719d719be9d3a13}{\index{proto.\-c@{proto.\-c}!gmtp\-\_\-set\-\_\-state@{gmtp\-\_\-set\-\_\-state}}
+\index{gmtp\-\_\-set\-\_\-state@{gmtp\-\_\-set\-\_\-state}!proto.c@{proto.\-c}}
+\subsubsection[{gmtp\-\_\-set\-\_\-state}]{\setlength{\rightskip}{0pt plus 5cm}void gmtp\-\_\-set\-\_\-state (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{const int}]{state}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a2c20286d5df6e6774719d719be9d3a13}
+
+
+Here is the caller graph for this function\-:\nopagebreak
+\begin{figure}[H]
+\begin{center}
+\leavevmode
+\includegraphics[width=294pt]{proto_8c_a2c20286d5df6e6774719d719be9d3a13_icgraph}
+\end{center}
+\end{figure}
+
+
+\hypertarget{proto_8c_aa5511c6bf84a1956f308ce920a134c29}{\index{proto.\-c@{proto.\-c}!gmtp\-\_\-setsockopt@{gmtp\-\_\-setsockopt}}
+\index{gmtp\-\_\-setsockopt@{gmtp\-\_\-setsockopt}!proto.c@{proto.\-c}}
+\subsubsection[{gmtp\-\_\-setsockopt}]{\setlength{\rightskip}{0pt plus 5cm}int gmtp\-\_\-setsockopt (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{int}]{level, }
+\item[{int}]{optname, }
+\item[{char \-\_\-\-\_\-user $\ast$}]{optval, }
+\item[{unsigned int}]{optlen}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_aa5511c6bf84a1956f308ce920a134c29}
+\hypertarget{proto_8c_ae74ac6585ac8e29b98e916f4f29ae3f0}{\index{proto.\-c@{proto.\-c}!gmtp\-\_\-shutdown@{gmtp\-\_\-shutdown}}
+\index{gmtp\-\_\-shutdown@{gmtp\-\_\-shutdown}!proto.c@{proto.\-c}}
+\subsubsection[{gmtp\-\_\-shutdown}]{\setlength{\rightskip}{0pt plus 5cm}void gmtp\-\_\-shutdown (
+\begin{DoxyParamCaption}
+\item[{struct sock $\ast$}]{sk, }
+\item[{int}]{how}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_ae74ac6585ac8e29b98e916f4f29ae3f0}
+\hypertarget{proto_8c_aa43e6c6314b0b836ffb2616535879838}{\index{proto.\-c@{proto.\-c}!inet\-\_\-gmtp\-\_\-listen@{inet\-\_\-gmtp\-\_\-listen}}
+\index{inet\-\_\-gmtp\-\_\-listen@{inet\-\_\-gmtp\-\_\-listen}!proto.c@{proto.\-c}}
+\subsubsection[{inet\-\_\-gmtp\-\_\-listen}]{\setlength{\rightskip}{0pt plus 5cm}int inet\-\_\-gmtp\-\_\-listen (
+\begin{DoxyParamCaption}
+\item[{struct socket $\ast$}]{sock, }
+\item[{int}]{backlog}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_aa43e6c6314b0b836ffb2616535879838}
+\hypertarget{proto_8c_ae540d1ed034c92753f40dcc69dc8081b}{\index{proto.\-c@{proto.\-c}!M\-O\-D\-U\-L\-E\-\_\-\-A\-U\-T\-H\-O\-R@{M\-O\-D\-U\-L\-E\-\_\-\-A\-U\-T\-H\-O\-R}}
+\index{M\-O\-D\-U\-L\-E\-\_\-\-A\-U\-T\-H\-O\-R@{M\-O\-D\-U\-L\-E\-\_\-\-A\-U\-T\-H\-O\-R}!proto.c@{proto.\-c}}
+\subsubsection[{M\-O\-D\-U\-L\-E\-\_\-\-A\-U\-T\-H\-O\-R}]{\setlength{\rightskip}{0pt plus 5cm}M\-O\-D\-U\-L\-E\-\_\-\-A\-U\-T\-H\-O\-R (
+\begin{DoxyParamCaption}
+\item[{\char`\"{}Wendell Silva Soares $<$wss@ic.\-ufal.\-br$>$\char`\"{}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_ae540d1ed034c92753f40dcc69dc8081b}
+\hypertarget{proto_8c_a81aa4475647c79e5e7d0050d75deda0b}{\index{proto.\-c@{proto.\-c}!M\-O\-D\-U\-L\-E\-\_\-\-D\-E\-S\-C\-R\-I\-P\-T\-I\-O\-N@{M\-O\-D\-U\-L\-E\-\_\-\-D\-E\-S\-C\-R\-I\-P\-T\-I\-O\-N}}
+\index{M\-O\-D\-U\-L\-E\-\_\-\-D\-E\-S\-C\-R\-I\-P\-T\-I\-O\-N@{M\-O\-D\-U\-L\-E\-\_\-\-D\-E\-S\-C\-R\-I\-P\-T\-I\-O\-N}!proto.c@{proto.\-c}}
+\subsubsection[{M\-O\-D\-U\-L\-E\-\_\-\-D\-E\-S\-C\-R\-I\-P\-T\-I\-O\-N}]{\setlength{\rightskip}{0pt plus 5cm}M\-O\-D\-U\-L\-E\-\_\-\-D\-E\-S\-C\-R\-I\-P\-T\-I\-O\-N (
+\begin{DoxyParamCaption}
+\item[{\char`\"{}G\-M\-T\-P -\/ Global Media Transmission Protocol\char`\"{}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a81aa4475647c79e5e7d0050d75deda0b}
+\hypertarget{proto_8c_a9761956e9851cccd3f1c40d2a6b0fcdd}{\index{proto.\-c@{proto.\-c}!module\-\_\-exit@{module\-\_\-exit}}
+\index{module\-\_\-exit@{module\-\_\-exit}!proto.c@{proto.\-c}}
+\subsubsection[{module\-\_\-exit}]{\setlength{\rightskip}{0pt plus 5cm}module\-\_\-exit (
+\begin{DoxyParamCaption}
+\item[{gmtp\-\_\-exit}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a9761956e9851cccd3f1c40d2a6b0fcdd}
+\hypertarget{proto_8c_a8fe804f33b35ccae3b8c82bee513b750}{\index{proto.\-c@{proto.\-c}!module\-\_\-init@{module\-\_\-init}}
+\index{module\-\_\-init@{module\-\_\-init}!proto.c@{proto.\-c}}
+\subsubsection[{module\-\_\-init}]{\setlength{\rightskip}{0pt plus 5cm}module\-\_\-init (
+\begin{DoxyParamCaption}
+\item[{gmtp\-\_\-init}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a8fe804f33b35ccae3b8c82bee513b750}
+\hypertarget{proto_8c_ad94b36675e7eb067ea3ce6ff9e244a44}{\index{proto.\-c@{proto.\-c}!M\-O\-D\-U\-L\-E\-\_\-\-L\-I\-C\-E\-N\-S\-E@{M\-O\-D\-U\-L\-E\-\_\-\-L\-I\-C\-E\-N\-S\-E}}
+\index{M\-O\-D\-U\-L\-E\-\_\-\-L\-I\-C\-E\-N\-S\-E@{M\-O\-D\-U\-L\-E\-\_\-\-L\-I\-C\-E\-N\-S\-E}!proto.c@{proto.\-c}}
+\subsubsection[{M\-O\-D\-U\-L\-E\-\_\-\-L\-I\-C\-E\-N\-S\-E}]{\setlength{\rightskip}{0pt plus 5cm}M\-O\-D\-U\-L\-E\-\_\-\-L\-I\-C\-E\-N\-S\-E (
+\begin{DoxyParamCaption}
+\item[{\char`\"{}G\-P\-L\char`\"{}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_ad94b36675e7eb067ea3ce6ff9e244a44}
+\hypertarget{proto_8c_a232988d276bf40d7c15be1fcd7af9d83}{\index{proto.\-c@{proto.\-c}!module\-\_\-param@{module\-\_\-param}}
+\index{module\-\_\-param@{module\-\_\-param}!proto.c@{proto.\-c}}
+\subsubsection[{module\-\_\-param}]{\setlength{\rightskip}{0pt plus 5cm}module\-\_\-param (
+\begin{DoxyParamCaption}
+\item[{thash\-\_\-entries}]{, }
+\item[{int}]{, }
+\item[{0444}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_a232988d276bf40d7c15be1fcd7af9d83}
+\hypertarget{proto_8c_ad4e09849d2bc32d70e247bc5172fcf8b}{\index{proto.\-c@{proto.\-c}!M\-O\-D\-U\-L\-E\-\_\-\-P\-A\-R\-M\-\_\-\-D\-E\-S\-C@{M\-O\-D\-U\-L\-E\-\_\-\-P\-A\-R\-M\-\_\-\-D\-E\-S\-C}}
+\index{M\-O\-D\-U\-L\-E\-\_\-\-P\-A\-R\-M\-\_\-\-D\-E\-S\-C@{M\-O\-D\-U\-L\-E\-\_\-\-P\-A\-R\-M\-\_\-\-D\-E\-S\-C}!proto.c@{proto.\-c}}
+\subsubsection[{M\-O\-D\-U\-L\-E\-\_\-\-P\-A\-R\-M\-\_\-\-D\-E\-S\-C}]{\setlength{\rightskip}{0pt plus 5cm}M\-O\-D\-U\-L\-E\-\_\-\-P\-A\-R\-M\-\_\-\-D\-E\-S\-C (
+\begin{DoxyParamCaption}
+\item[{thash\-\_\-entries}]{, }
+\item[{\char`\"{}Number of ehash buckets\char`\"{}}]{}
+\end{DoxyParamCaption}
+)}}\label{proto_8c_ad4e09849d2bc32d70e247bc5172fcf8b}
+
+
+\subsection{Variable Documentation}
+\hypertarget{proto_8c_a304672a5f2e443d5c24f0c7d520a2299}{\index{proto.\-c@{proto.\-c}!gmtp\-\_\-death\-\_\-row@{gmtp\-\_\-death\-\_\-row}}
+\index{gmtp\-\_\-death\-\_\-row@{gmtp\-\_\-death\-\_\-row}!proto.c@{proto.\-c}}
+\subsubsection[{gmtp\-\_\-death\-\_\-row}]{\setlength{\rightskip}{0pt plus 5cm}struct inet\-\_\-timewait\-\_\-death\-\_\-row gmtp\-\_\-death\-\_\-row}}\label{proto_8c_a304672a5f2e443d5c24f0c7d520a2299}
+{\bfseries Initial value\-:}
+\begin{DoxyCode}
+ \{
+        .sysctl\_max\_tw\_buckets = NR\_FILE * 2,
+        .period         = \hyperlink{gmtp_8h_a86aa8330d1bef9cdb384dc6ef9738bcb}{GMTP\_TIMEWAIT\_LEN} / 
+      INET\_TWDR\_TWKILL\_SLOTS,
+        .death\_lock     = \_\_SPIN\_LOCK\_UNLOCKED(gmpt\_death\_row.death\_lock),
+        .hashinfo       = &\hyperlink{gmtp_8h_ab43beb876bb256a2f539107b7f589c44}{gmtp\_hashinfo},
+        .tw\_timer       = TIMER\_INITIALIZER(inet\_twdr\_hangman, 0,
+                                            (\textcolor{keywordtype}{unsigned} \textcolor{keywordtype}{long})&\hyperlink{ipv4_8c_a304672a5f2e443d5c24f0c7d520a2299}{gmtp\_death\_row}
+      ),
+        .twkill\_work    = \_\_WORK\_INITIALIZER(\hyperlink{ipv4_8c_a304672a5f2e443d5c24f0c7d520a2299}{gmtp\_death\_row}.
+      twkill\_work,
+                                             inet\_twdr\_twkill\_work),
+
+
+        .twcal\_hand     = -1,
+        .twcal\_timer    = TIMER\_INITIALIZER(inet\_twdr\_twcal\_tick, 0,
+                                            (\textcolor{keywordtype}{unsigned} \textcolor{keywordtype}{long})&\hyperlink{ipv4_8c_a304672a5f2e443d5c24f0c7d520a2299}{gmtp\_death\_row}
+      ),
+\}
+\end{DoxyCode}
+\hypertarget{proto_8c_ab43beb876bb256a2f539107b7f589c44}{\index{proto.\-c@{proto.\-c}!gmtp\-\_\-hashinfo@{gmtp\-\_\-hashinfo}}
+\index{gmtp\-\_\-hashinfo@{gmtp\-\_\-hashinfo}!proto.c@{proto.\-c}}
+\subsubsection[{gmtp\-\_\-hashinfo}]{\setlength{\rightskip}{0pt plus 5cm}struct inet\-\_\-hashinfo gmtp\-\_\-hashinfo}}\label{proto_8c_ab43beb876bb256a2f539107b7f589c44}
diff --git a/linux-3.17.1/net/gmtp/doc/latex/proto_8c__incl.md5 b/linux-3.17.1/net/gmtp/doc/latex/proto_8c__incl.md5
new file mode 100644
index 0000000..1d01fdd
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/proto_8c__incl.md5
@@ -0,0 +1 @@
+7aede866cb31f6993129124d0e1e463e
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/latex/proto_8c_a2c20286d5df6e6774719d719be9d3a13_icgraph.md5 b/linux-3.17.1/net/gmtp/doc/latex/proto_8c_a2c20286d5df6e6774719d719be9d3a13_icgraph.md5
new file mode 100644
index 0000000..41c7b52
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/proto_8c_a2c20286d5df6e6774719d719be9d3a13_icgraph.md5
@@ -0,0 +1 @@
+e01e35c9cc8d9f05690b0849d9a8ef23
\ No newline at end of file
diff --git a/linux-3.17.1/net/gmtp/doc/latex/refman.tex b/linux-3.17.1/net/gmtp/doc/latex/refman.tex
new file mode 100644
index 0000000..5ecac46
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/doc/latex/refman.tex
@@ -0,0 +1,76 @@
+\documentclass{book}
+\usepackage[a4paper,top=2.5cm,bottom=2.5cm,left=2.5cm,right=2.5cm]{geometry}
+\usepackage{makeidx}
+\usepackage{natbib}
+\usepackage{graphicx}
+\usepackage{multicol}
+\usepackage{float}
+\usepackage{listings}
+\usepackage{color}
+\usepackage{ifthen}
+\usepackage[table]{xcolor}
+\usepackage{textcomp}
+\usepackage{alltt}
+\usepackage{ifpdf}
+\ifpdf
+\usepackage[pdftex,
+            pagebackref=true,
+            colorlinks=true,
+            linkcolor=blue,
+            unicode
+           ]{hyperref}
+\else
+\usepackage[ps2pdf,
+            pagebackref=true,
+            colorlinks=true,
+            linkcolor=blue,
+            unicode
+           ]{hyperref}
+\usepackage{pspicture}
+\fi
+\usepackage[utf8]{inputenc}
+\usepackage{mathptmx}
+\usepackage[scaled=.90]{helvet}
+\usepackage{courier}
+\usepackage{sectsty}
+\usepackage[titles]{tocloft}
+\usepackage{doxygen}
+\lstset{language=C++,inputencoding=utf8,basicstyle=\footnotesize,breaklines=true,breakatwhitespace=true,tabsize=8,numbers=left }
+\makeindex
+\setcounter{tocdepth}{3}
+\renewcommand{\footrulewidth}{0.4pt}
+\renewcommand{\familydefault}{\sfdefault}
+\hfuzz=15pt
+\setlength{\emergencystretch}{15pt}
+\hbadness=750
+\tolerance=750
+\begin{document}
+\hypersetup{pageanchor=false,citecolor=blue}
+\begin{titlepage}
+\vspace*{7cm}
+\begin{center}
+{\Large gmtp }\\
+\vspace*{1cm}
+{\large Generated by Doxygen 1.8.1.1}\\
+\vspace*{0.5cm}
+{\small Thu Dec 18 2014 12:04:43}\\
+\end{center}
+\end{titlepage}
+\clearemptydoublepage
+\pagenumbering{roman}
+\tableofcontents
+\clearemptydoublepage
+\pagenumbering{arabic}
+\hypersetup{pageanchor=true,citecolor=blue}
+\chapter{File Index}
+\input{files}
+\chapter{File Documentation}
+\input{gmtp_8h}
+\input{gmtp_8mod_8c}
+\input{gmtp__ipv4_8mod_8c}
+\input{input_8c}
+\input{ipv4_8c}
+\input{output_8c}
+\input{proto_8c}
+\printindex
+\end{document}
diff --git a/linux-3.17.1/net/gmtp/gmtp-inter/Makefile b/linux-3.17.1/net/gmtp/gmtp-inter/Makefile
new file mode 100644
index 0000000..546ae05
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/gmtp-inter/Makefile
@@ -0,0 +1,27 @@
+PWD := $(shell pwd)
+KERNEL:= /lib/modules/`uname -r`/build
+KBUILD_EXTRA_SYMBOLS := $(PWD)/Module.symvers
+
+obj-m += gmtp.o gmtp_inter.o
+
+gmtp-y = ../gmtp.o
+gmtp_inter-y := ucc.o mcc.o hash.o output.o input.o gmtp-inter.o
+
+all:
+	$(MAKE) -C $(KERNEL) M=$(PWD) modules
+	/sbin/modinfo gmtp_inter.ko
+	
+install:
+	@echo 'Installing gmtp_inter.ko...'
+	/sbin/insmod gmtp_inter.ko
+	@echo '-------------------------------'
+	/sbin/lsmod
+	
+uninstall:
+	@echo 'Uninstalling gmtp_inter...'
+	/sbin/rmmod -f gmtp_inter
+	@echo '-------------------------------'
+	/sbin/lsmod
+
+clean:
+	make -C $(KERNEL) M=$(PWD) clean
diff --git a/linux-3.17.1/net/gmtp/gmtp-inter/gmtp-inter.c b/linux-3.17.1/net/gmtp/gmtp-inter/gmtp-inter.c
new file mode 100644
index 0000000..c782617
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/gmtp-inter/gmtp-inter.c
@@ -0,0 +1,445 @@
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/netfilter.h>
+#include <linux/netfilter_ipv4.h>
+#include <linux/skbuff.h>
+#include <linux/ip.h>
+#include <linux/timer.h>
+#include <linux/inet.h>
+#include <linux/dirent.h>
+#include <linux/inetdevice.h>
+#include <linux/crypto.h>
+#include <linux/err.h>
+#include <linux/scatterlist.h>
+#include <linux/if.h>
+#include <linux/ioctl.h>
+
+#include <net/sock.h>
+#include <net/sch_generic.h>
+
+#include <uapi/linux/gen_stats.h>
+#include <uapi/linux/types.h>
+
+#include <uapi/linux/gmtp.h>
+#include <linux/gmtp.h>
+#include "../gmtp.h"
+#include "gmtp-inter.h"
+ 
+#define SHA1_LENGTH    16
+#define GET_MAC_ADDRESS  0
+#define GET_IP_ADDRESS   1
+
+extern const char *gmtp_packet_name(const int);
+extern const char *gmtp_state_name(const int);
+extern void flowname_str(__u8* str, const __u8* flowname);
+
+static struct nf_hook_ops nfho_in;
+static struct nf_hook_ops nfho_out;
+
+struct gmtp_inter gmtp;
+ 
+int bytes_added(int sprintf_return)
+{
+    return (sprintf_return > 0)? sprintf_return : 0;
+}
+
+void flowname_strn(__u8* str, const __u8 *buffer, int length)
+{
+	
+    int i;
+	for(i = 0; i < length; ++i){
+		sprintf(&str[i*2], "%02x", buffer[i]);
+        //printk("testando = %02x\n", buffer[i]);
+    }
+}
+
+__u8 gmtp_interfaces_md5(unsigned char *buf)
+{
+    struct scatterlist sg;
+    struct crypto_hash *tfm;
+    struct hash_desc desc;
+    unsigned char output[SHA1_LENGTH];
+    //unsigned char buf[] = "README";
+    size_t buf_size = sizeof(buf) - 1;
+    int i;
+    
+    printk(KERN_INFO "sha1: %s\n\n\n\n\n", __FUNCTION__);
+      
+    printk(KERN_INFO "bUFFER = %s\n", buf);
+
+    tfm = crypto_alloc_hash("md5", 0, CRYPTO_ALG_ASYNC);
+    if (IS_ERR(tfm)) {
+        printk(KERN_ERR"allocation failed\n");
+        return 0;
+    }
+ 
+    desc.tfm = tfm;
+    desc.flags = 0;
+ 
+    crypto_hash_init(&desc);
+       
+    sg_init_one(&sg, buf, buf_size);
+    crypto_hash_update(&desc, &sg, buf_size);
+    crypto_hash_final(&desc, output);
+ 
+    printk(KERN_INFO"resultado ------------------------- %d \n",buf_size);
+
+    for (i = 0; i < SHA1_LENGTH; i++) {
+        printk(KERN_INFO "%x", output[i]);
+    }
+    printk(KERN_INFO "\n\n\n\n\n---------------\n");
+
+    __u8 md5[21];
+    flowname_strn(md5, output, SHA1_LENGTH);
+    printk("saida md5 = %s\n",md5);
+ 
+    crypto_free_hash(tfm);
+ 
+    return md5;
+}
+
+void gmtp_inter_relay_get_devices (int option)
+{
+    /*int  option = GET_IP_ADDRESS;*/
+    /*int  option = GET_MAC_ADDRESS;*/
+
+    printk(KERN_INFO"\n\n\n");
+    
+    struct socket *sock = NULL;
+    struct net_device *dev = NULL;
+
+    struct in_device *in_dev;
+    struct in_ifaddr *if_info;
+
+    struct net *net;
+    int i, j, retval, length = 0;
+    char mac_address[6];
+    char *ip_address;
+    char buffer[50];
+    unsigned int hex = 0XABC123FF;
+    __u8 *str[30];
+
+    retval = sock_create(AF_INET, SOCK_STREAM, 0, &sock);
+    net = sock_net (sock->sk);
+            
+            for(i = 2; (dev = dev_get_by_index_rcu(net,i)) != NULL; ++i){
+            
+                if(option == GET_MAC_ADDRESS){
+   
+                    memcpy(&mac_address, dev->dev_addr, 6);
+                    printk(KERN_DEBUG"SIZE of dev_addr = %d\n",
+                                        sizeof(dev->dev_addr));
+                    printk(KERN_DEBUG"Interface[%d] MAC = %x:%x:%x:%x:%x:%x\n",i,
+                              mac_address[0],mac_address[1],
+                              mac_address[2],mac_address[3], 
+                              mac_address[4],mac_address[5]);
+                    for(j = 0; j < 6; ++j){
+
+                        printk(KERN_DEBUG"testando boladao = %x \n",mac_address[j]);
+                                        
+                    }
+                    flowname_strn(&str,mac_address,6);
+                    printk(KERN_DEBUG"[%d]\ntestando string = %s \n",i,str);
+                    length += bytes_added(sprintf(buffer+length, str));
+
+                }
+
+                /** TODO Option == IP dá merda... */
+                if(option ==  GET_IP_ADDRESS){    
+                    
+                    in_dev = (struct in_device * )dev->ip_ptr;
+
+                    if(in_dev == NULL)
+                        printk(KERN_DEBUG"in_dev == NULL\n");
+
+                    if_info = in_dev->ifa_list;
+                    for(;if_info;if_info = if_info->ifa_next){
+                        if(if_info != NULL){
+                            printk(KERN_DEBUG"if_info->ifa_address=%pI4\n", &if_info->ifa_address);
+                            break;    
+                        }
+                    }   
+
+                }
+                if(length != 0)
+                    printk(KERN_DEBUG"Concatenado = %s \n\n",buffer);
+
+   
+            }
+
+    sock_release(sock);
+    return buffer;
+}
+/*{
+    printk(KERN_INFO"\n\n\n");
+    
+    struct socket *sock = NULL;
+    struct net_device *dev = NULL;
+
+    struct in_device *in_dev;
+    struct in_ifaddr *if_info;
+
+    struct net *net;
+    int i, retval;
+    char mac_address[6];
+    char *ip_address;
+    
+    retval = sock_create(AF_INET, SOCK_STREAM, 0, &sock);
+    net = sock_net (sock->sk);
+    
+            for(i = 2; (dev = dev_get_by_index_rcu(net,i)) != NULL; ++i){
+            
+                if(option == GET_MAC_ADDRESS){
+   
+                    memcpy(&mac_address, dev->dev_addr, 6);
+                    printk(KERN_DEBUG"size of dev_addr = %d\n",sizeof(dev->dev_addr));
+                    printk(KERN_DEBUG"Interface[%d] MAC = %x:%x:%x:%x:%x:%x\n",i,
+                              mac_address[0],mac_address[1],
+                              mac_address[2],mac_address[3], 
+                              mac_address[4],mac_address[5]);
+                }
+
+                if(option ==  GET_IP_ADDRESS){    
+                    
+                    in_dev = (struct in_device * )dev->ip_ptr;
+
+                    if(in_dev == NULL)
+                        printk("in_dev == NULL\n");
+
+                    if_info = in_dev->ifa_list;
+                    for(;if_info;if_info = if_info->ifa_next){
+                        if(if_info != NULL){
+                            printk("if_info->ifa_address=%032x\n",if_info->ifa_address);
+                            break;    
+                        }
+                    }   
+
+                }   
+            }
+    
+    sock_release(sock);
+
+}*/
+
+const __u8 *gmtp_inter_relay_id()
+{
+	gmtp_inter_relay_get_devices(GET_MAC_ADDRESS);
+
+    /*just to keep the same return of previous implementation*/
+	return "777777777777777777777";
+
+}
+__be32 gmtp_inter_relay_ip()
+{
+	gmtp_inter_relay_get_devices(GET_IP_ADDRESS);
+   
+    /*just to keep the same return of previous implementation*/
+	unsigned char *ip = "\xc0\xa8\x02\x01"; /* 192.168.2.1 */
+	return *(unsigned int *)ip;
+
+}
+
+__be32 get_mcst_v4_addr(void)
+{
+	__be32 mcst_addr;
+	unsigned char *base_channel = "\xe0\xc0\x00\x00"; /* 224.192.0.0 */
+	unsigned char *channel = kmalloc(4 * sizeof(unsigned char), GFP_KERNEL);
+
+	gmtp_print_function();
+
+	if(channel == NULL) {
+		gmtp_print_error("Cannot assign requested multicast address");
+		return -EADDRNOTAVAIL;
+	}
+
+	memcpy(channel, base_channel, 4 * sizeof(unsigned char));
+
+	channel[3] += gmtp.mcst[3]++;
+
+	/**
+	 * From: base_channel (224.192. 0 . 0 )
+	 * to:   max_channel  (239.255.255.255)
+	 *                     L0  L1  L2  L3
+	 */
+	if(gmtp.mcst[3] > 255) {  /* L3 starts with 1 */
+		gmtp.mcst[3] = 0;
+		gmtp.mcst[2]++;
+	}
+	if(gmtp.mcst[2] > 255) {
+		gmtp.mcst[2] = 0;
+		gmtp.mcst[1]++;
+	}
+	if(gmtp.mcst[1] > 63) { /* 255 - 192 */
+		gmtp.mcst[1] = 0;
+		gmtp.mcst[0]++;
+	}
+	if(gmtp.mcst[0] > 15) {  /* 239 - 224 */
+		gmtp_print_error("Cannot assign requested multicast address");
+		return -EADDRNOTAVAIL;
+	}
+	channel[2] += gmtp.mcst[2];
+	channel[1] += gmtp.mcst[1];
+	channel[0] += gmtp.mcst[0];
+
+	mcst_addr = *(unsigned int *)channel;
+	gmtp_print_debug("Channel addr: %pI4", &mcst_addr);
+	return mcst_addr;
+}
+EXPORT_SYMBOL_GPL(get_mcst_v4_addr);
+
+void gmtp_buffer_add(struct gmtp_flow_info *info, struct sk_buff *newsk)
+{
+	skb_queue_tail(info->buffer, skb_copy(newsk, GFP_ATOMIC));
+	info->buffer_size += newsk->len;
+}
+
+struct sk_buff *gmtp_buffer_dequeue(struct gmtp_flow_info *info)
+{
+	struct sk_buff *skb = skb_dequeue(info->buffer);
+	if(skb != NULL)
+		info->buffer_size -= skb->len;
+	return skb;
+}
+
+struct gmtp_flow_info *gmtp_inter_get_info(
+		struct gmtp_inter_hashtable *hashtable, const __u8 *media)
+{
+	struct gmtp_relay_entry *entry =
+			gmtp_inter_lookup_media(gmtp.hashtable, media);
+
+	if(entry != NULL)
+		return entry->info;
+
+	return NULL;
+}
+
+unsigned int hook_func_in(unsigned int hooknum, struct sk_buff *skb,
+		const struct net_device *in, const struct net_device *out,
+		int (*okfn)(struct sk_buff *))
+{
+	int ret = NF_ACCEPT;
+	struct iphdr *iph = ip_hdr(skb);
+
+	if(in == NULL)
+		goto exit;
+
+	if(iph->protocol == IPPROTO_GMTP) {
+
+		struct gmtp_hdr *gh = gmtp_hdr(skb);
+
+		if(gh->type != GMTP_PKT_DATA && gh->type != GMTP_PKT_FEEDBACK) {
+			gmtp_print_debug("GMTP packet: %s (%d)",
+					gmtp_packet_name(gh->type), gh->type);
+			print_packet(skb, true);
+			print_gmtp_packet(iph, gh);
+		}
+
+		switch(gh->type) {
+		case GMTP_PKT_REQUEST:
+			ret = gmtp_inter_request_rcv(skb);
+			break;
+		case GMTP_PKT_REGISTER_REPLY:
+			ret = gmtp_inter_register_reply_rcv(skb);
+			break;
+		case GMTP_PKT_ACK:
+			ret = gmtp_inter_ack_rcv(skb);
+			break;
+		case GMTP_PKT_DATA:
+			ret = gmtp_inter_data_rcv(skb);
+			break;
+		case GMTP_PKT_FEEDBACK:
+			ret = gmtp_inter_feedback_rcv(skb);
+			break;
+		case GMTP_PKT_CLOSE:
+			ret = gmtp_inter_close_rcv(skb);
+			break;
+		}
+
+	}
+
+exit:
+	return ret;
+}
+
+unsigned int hook_func_out(unsigned int hooknum, struct sk_buff *skb,
+		const struct net_device *in, const struct net_device *out,
+		int (*okfn)(struct sk_buff *))
+{
+	int ret = NF_ACCEPT;
+	struct iphdr *iph = ip_hdr(skb);
+	struct gmtp_hdr *gh;
+
+	if(out == NULL)
+		goto exit;
+
+	if(iph->protocol == IPPROTO_GMTP) {
+
+		gh = gmtp_hdr(skb);
+		if(gh->type != GMTP_PKT_DATA) {
+			gmtp_print_debug("GMTP packet: %s (%d)",
+					gmtp_packet_name(gh->type), gh->type);
+			print_packet(skb, false);
+			print_gmtp_packet(iph, gh);
+		}
+
+		switch(gh->type) {
+		case GMTP_PKT_DATA:
+			ret = gmtp_inter_data_out(skb);
+			break;
+		case GMTP_PKT_CLOSE:
+			ret = gmtp_inter_close_out(skb);
+			break;
+		}
+	}
+
+exit:
+	return ret;
+}
+
+int init_module()
+{
+	int ret = 0;
+	gmtp_pr_func();
+	gmtp_print_debug("Starting GMTP-inter");
+
+	gmtp.total_rx = 1;
+	memset(&gmtp.mcst, 0, 4*sizeof(unsigned char));
+
+	gmtp.hashtable = gmtp_inter_create_hashtable(64);
+	if(gmtp.hashtable == NULL) {
+		gmtp_print_error("Cannot create hashtable...");
+		ret = -ENOMEM;
+		goto out;
+	}
+
+	nfho_in.hook = hook_func_in;
+	nfho_in.hooknum = NF_INET_PRE_ROUTING;
+	nfho_in.pf = PF_INET;
+	nfho_in.priority = NF_IP_PRI_FIRST;
+	nf_register_hook(&nfho_in);
+
+	nfho_out.hook = hook_func_out;
+	nfho_out.hooknum = NF_INET_POST_ROUTING;
+	nfho_out.pf = PF_INET;
+	nfho_out.priority = NF_IP_PRI_FIRST;
+	nf_register_hook(&nfho_out);
+
+out:
+	return ret;
+}
+
+void cleanup_module()
+{
+	gmtp_pr_func();
+	gmtp_print_debug("Finishing GMTP-inter");
+
+	kfree_gmtp_inter_hashtable(gmtp.hashtable);
+
+	nf_unregister_hook(&nfho_in);
+	nf_unregister_hook(&nfho_out);
+}
+
+MODULE_LICENSE("GPL");
+MODULE_AUTHOR("Mário André Menezes <mariomenezescosta@gmail.com>");
+MODULE_AUTHOR("Wendell Silva Soares <wss@ic.ufal.br>");
+MODULE_DESCRIPTION("GMTP - Global Media Transmission Protocol");
diff --git a/linux-3.17.1/net/gmtp/gmtp-inter/gmtp-inter.h b/linux-3.17.1/net/gmtp/gmtp-inter/gmtp-inter.h
new file mode 100644
index 0000000..a3ad699
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/gmtp-inter/gmtp-inter.h
@@ -0,0 +1,153 @@
+ /* gmtp-inter.h
+ *
+ *  Created on: 17/02/2015
+ *      Author: wendell
+ */
+
+#ifndef GMTP_INTER_H_
+#define GMTP_INTER_H_
+
+#include <linux/types.h>
+#include <linux/skbuff.h>
+#include <linux/spinlock.h>
+#include <uapi/linux/ip.h>
+
+#include <linux/gmtp.h>
+#include <uapi/linux/gmtp.h>
+#include "../gmtp.h"
+
+#include "hash-inter.h"
+
+#define H_USER 1024
+
+/**
+ * TODO Negotiate buffer size with server
+ * struct gmtp_inter - GMTP-inter state variables
+ *
+ * @total_bytes_rx: total data bytes received
+ * @total_rx: Current RX rate
+ * @mcst: control of granted multicast addresses
+ * @nclients: number of connected clients
+ *
+ * @hashtable: GMTP-inter relay table
+ */
+struct gmtp_inter {
+	unsigned int 		total_bytes_rx;
+	unsigned int 		total_rx;
+	unsigned char		mcst[4];
+
+	struct gmtp_inter_hashtable *hashtable;
+};
+
+extern struct gmtp_inter gmtp;
+
+/** gmtp-inter.c */
+__be32 get_mcst_v4_addr(void);
+void gmtp_buffer_add(struct gmtp_flow_info *info, struct sk_buff *newsk);
+struct sk_buff *gmtp_buffer_dequeue(struct gmtp_flow_info *info);
+struct gmtp_flow_info *gmtp_inter_get_info(
+		struct gmtp_inter_hashtable *hashtable, const __u8 *media);
+
+/** input.c */
+int gmtp_inter_request_rcv(struct sk_buff *skb);
+int gmtp_inter_register_reply_rcv(struct sk_buff *skb);
+int gmtp_inter_ack_rcv(struct sk_buff *skb);
+int gmtp_inter_data_rcv(struct sk_buff *skb);
+int gmtp_inter_feedback_rcv(struct sk_buff *skb);
+int gmtp_inter_close_rcv(struct sk_buff *skb);
+
+void gmtp_inter_relay_get_devices (int option);
+const __u8 *gmtp_inter_relay_id (void);
+__be32 gmtp_inter_relay_ip (void);
+int bytes_added(int sprintf_return);
+void flowname_strn(__u8* str, const __u8 *buffer, int length);
+__u8 gmtp_interfaces_md5(unsigned char *buf);
+
+/** Output.c */
+void gmtp_inter_add_relayid(struct sk_buff *skb);
+struct gmtp_hdr *gmtp_inter_make_route_hdr(struct sk_buff *skb);
+struct gmtp_hdr *gmtp_inter_make_request_notify_hdr(struct sk_buff *skb,
+		struct gmtp_relay_entry *media_info, __be16 new_sport,
+		__be16 new_dport, __u8 error_code);
+int gmtp_inter_make_request_notify(struct sk_buff *skb, __be32 new_saddr,
+		__be16 new_sport, __be32 new_daddr, __be16 new_dport,
+		__u8 error_code);
+
+void gmtp_inter_build_and_send_pkt(struct sk_buff *skb_src, __be32 saddr,
+		__be32 daddr, struct gmtp_hdr *gh_ref, bool backward);
+void gmtp_inter_build_and_send_skb(struct sk_buff *skb);
+
+int gmtp_inter_data_out(struct sk_buff *skb);
+int gmtp_inter_close_out(struct sk_buff *skb);
+
+/**
+ * A very ugly delayer, to GMTP-inter...
+ *
+ * If we use schedule(), we get this error:  'BUG: scheduling while atomic'
+ *
+ * We cannot use schedule(), because hook functions are atomic,
+ * and sleeping in kernel code is not allowed in atomic context.
+ *
+ * Calling cond_resched(), kernel call schedule() where it's possible...
+ */
+static inline void gmtp_inter_wait_us(s64 delay)
+{
+	ktime_t timeout = ktime_add_us(ktime_get_real(), delay);
+	while(ktime_before(ktime_get_real(), timeout)) {
+		cond_resched(); /* Do nothing, just wait... */
+	}
+}
+
+
+
+/*
+ * Print IP packet basic information
+ */
+static inline void print_packet(struct sk_buff *skb, bool in)
+{
+	struct iphdr *iph = ip_hdr(skb);
+	const char *type = in ? "IN" : "OUT";
+	pr_info("%s (%s): Src=%pI4 | Dst=%pI4 | Proto: %d | Len: %d bytes\n",
+			type, skb->dev->name,
+			&iph->saddr, &iph->daddr,
+			iph->protocol,
+			ntohs(iph->tot_len));
+}
+
+/*
+ * Print GMTP packet basic information
+ */
+static inline void print_gmtp_packet(struct iphdr *iph, struct gmtp_hdr *gh)
+{
+	__u8 flowname[GMTP_FLOWNAME_STR_LEN];
+	flowname_str(flowname, gh->flowname);
+	pr_info("%s (%d) src=%pI4@%-5d dst=%pI4@%-5d seq=%u rtt=%u ms "
+			" tx=%u flow=%s\n",
+				gmtp_packet_name(gh->type),
+				gh->type,
+				&iph->saddr, ntohs(gh->sport),
+				&iph->daddr, ntohs(gh->dport),
+				gh->seq,
+				gh->server_rtt,
+				gh->transm_r,
+				flowname);
+}
+
+/*
+ * Print Data of GMTP-Data packets
+ */
+static inline void print_gmtp_data(struct sk_buff *skb, char* label)
+{
+	__u8* data = gmtp_data(skb);
+	__u32 data_len = gmtp_data_len(skb);
+
+	if(data_len > 0) {
+		char *lb = label != NULL ? label : "Data";
+		unsigned char *data_str = kmalloc(data_len+1, GFP_KERNEL);
+		memcpy(data_str, data, data_len);
+		data_str[data_len] = '\0';
+		pr_info("%s: %s\n", lb, data_str);
+	}
+}
+
+#endif /* GMTP_INTER_H_ */
diff --git a/linux-3.17.1/net/gmtp/gmtp-inter/hash-inter.h b/linux-3.17.1/net/gmtp/gmtp-inter/hash-inter.h
new file mode 100644
index 0000000..57738f8
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/gmtp-inter/hash-inter.h
@@ -0,0 +1,111 @@
+/*
+ * hash-inter.h
+ *
+ *  Created on: 03/05/2015
+ *      Author: wendell
+ */
+
+#ifndef HASH_INTER_H_
+#define HASH_INTER_H_
+
+#define GMTP_HASH_SIZE  16
+
+/**
+ * struct gmtp_relay_entry: entry in GMTP-inter Relay Table
+ *
+ * @flowname: Name of dataflow
+ * @server_addr: IP address of media server
+ * @relay: list of relays
+ * @media_port: port of media at server
+ * @channel_addr: IP address of media multicast channel
+ * @channel_port: Port of media multicast channel
+ * @state: state of media transmission
+ * @info: control information for media transmission
+ *
+ * @next: pointer to next gmtp_relay_entry
+ */
+struct gmtp_relay_entry {
+	__u8 flowname[GMTP_FLOWNAME_LEN];
+	__be32 server_addr;
+	__be32 *relay;
+	__be16 media_port;
+	__be32 channel_addr;
+	__be16 channel_port;
+	__u8 state :3;
+	struct gmtp_flow_info *info;
+
+	struct gmtp_relay_entry *next;
+};
+
+/**
+ * struct gmtp_flow_info - Control information for media transmission
+ *
+ * @iseq: initial sequence number of received packets
+ * @seq: sequence number of last received packet
+ * @nbytes: amount of received bytes
+ * @current_tx: Current max tx (via GMTP-MCC). 0 means unlimited.
+ * @last_rx_tstamp: time stamp of last received data packet
+ * @data_pkt_tx: number of data packets transmitted
+ * @buffer: buffer of GMTP-Data packets
+ * @buffer_size: size (in bytes) of GMTP-Data buffer.
+ * @buffer_len: number of packets in GMTP-Data buffer]
+ * @buffer_size: max number of packets in buffer
+ */
+struct gmtp_flow_info {
+	unsigned int 		iseq;
+	unsigned int 		seq;
+	unsigned int 		nbytes;
+
+	u64 			current_tx;
+	ktime_t 		last_rx_tstamp;
+	unsigned int 		data_pkt_tx;
+
+	struct gmtp_client	*clients;
+	unsigned int 		nclients;
+
+	struct sk_buff_head 	*buffer;
+	unsigned int 		buffer_size;
+	unsigned int 		buffer_min;
+	unsigned int 		buffer_max;  /* buffer_min * 3 */
+#define buffer_len 		buffer->qlen
+};
+
+static inline void gmtp_set_buffer_limits(struct gmtp_flow_info *info,
+		unsigned int buffer_min)
+{
+	info->buffer_min = buffer_min;
+	info->buffer_max = info->buffer_min * 3;
+}
+
+/**
+ * State of a flow
+ */
+enum {
+	GMTP_INTER_WAITING_REGISTER_REPLY,
+	GMTP_INTER_REGISTER_REPLY_RECEIVED,
+	GMTP_INTER_TRANSMITTING,
+	GMTP_INTER_CLOSE_RECEIVED,
+	GMTP_INTER_CLOSED
+};
+
+/*
+ * struct gmtp_inter_hashtable: GMTP-inter Relay Table
+ */
+struct gmtp_inter_hashtable {
+	int size;
+	struct gmtp_relay_entry **table;
+};
+
+/** hash.c */
+struct gmtp_inter_hashtable *gmtp_inter_create_hashtable(unsigned int size);
+struct gmtp_relay_entry *gmtp_inter_lookup_media(
+		struct gmtp_inter_hashtable *hashtable, const __u8 *media);
+int gmtp_inter_add_entry(struct gmtp_inter_hashtable *hashtable, __u8 *flowname,
+		__be32 server_addr, __be32 *relay, __be16 media_port,
+		__be32 channel_addr, __be16 channel_port);
+struct gmtp_relay_entry *gmtp_inter_del_entry(
+		struct gmtp_inter_hashtable *hashtable, __u8 *media);
+
+void kfree_gmtp_inter_hashtable(struct gmtp_inter_hashtable *hashtable);
+
+#endif /* HASH_INTER_H_ */
diff --git a/linux-3.17.1/net/gmtp/gmtp-inter/hash.c b/linux-3.17.1/net/gmtp/gmtp-inter/hash.c
new file mode 100644
index 0000000..3762011
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/gmtp-inter/hash.c
@@ -0,0 +1,239 @@
+/*
+ * hash-inter.c
+ *
+ *  Created on: 27/02/2015
+ *      Author: wendell
+ */
+
+#include <linux/kernel.h>
+#include <linux/slab.h>
+#include <linux/string.h>
+#include <linux/list.h>
+
+#include "gmtp-inter.h"
+#include "hash-inter.h"
+
+struct gmtp_inter_hashtable *gmtp_inter_create_hashtable(unsigned int size)
+{
+	int i;
+	struct gmtp_inter_hashtable *ht;
+
+	gmtp_pr_func();
+	gmtp_pr_info("Size of gmtp_inter_hashtable = %d", size);
+
+	if(size < 1)
+		return NULL;
+
+	ht = kmalloc(sizeof(struct gmtp_inter_hashtable), GFP_KERNEL);
+	if(ht == NULL)
+		return NULL;
+
+	ht->table = kmalloc(sizeof(struct gmtp_relay_entry*) *size, GFP_KERNEL);
+	if(ht->table == NULL)
+		return NULL;
+
+	for(i = 0; i < size; ++i)
+		ht->table[i] = NULL;
+
+	ht->size = size;
+
+	return ht;
+}
+
+unsigned int gmtp_inter_hash(struct gmtp_inter_hashtable *hashtable,
+		const __u8 *flowname)
+{
+	unsigned int hashval;
+	int i;
+
+	if(hashtable == NULL)
+		return -EINVAL;
+
+	if(flowname == NULL)
+		return -ENOKEY;
+
+	hashval = 0;
+
+	for(i=0; i<GMTP_FLOWNAME_LEN; ++i)
+		hashval = flowname[i] + (hashval << 5) - hashval;
+
+	return hashval % hashtable->size;
+}
+
+struct gmtp_relay_entry *gmtp_inter_lookup_media(
+		struct gmtp_inter_hashtable *hashtable, const __u8 *media)
+{
+	struct gmtp_relay_entry *entry;
+	unsigned int hashval;
+
+	hashval = gmtp_inter_hash(hashtable, media);
+
+	/* Error */
+	if(hashval < 0)
+		return NULL;
+
+	for(entry = hashtable->table[hashval]; entry != NULL;
+			entry = entry->next)
+		if(memcmp(media, entry->flowname, GMTP_FLOWNAME_LEN) == 0)
+			return entry;
+
+	return NULL;
+}
+
+struct gmtp_flow_info *__gmtp_inter_build_info(void)
+{
+	struct gmtp_flow_info *info = kmalloc(sizeof(struct gmtp_flow_info),
+			GFP_KERNEL);
+	if(info == NULL)
+		goto out;
+
+	info->iseq = 0;
+	info->seq = 0;
+	info->nbytes = 0;
+	info->data_pkt_tx = 0;
+
+	info->clients = kmalloc(sizeof(struct gmtp_client), GFP_KERNEL);
+	INIT_LIST_HEAD(&info->clients->list);
+	info->nclients = 0;
+
+	info->buffer = kmalloc(sizeof(struct sk_buff_head), GFP_KERNEL);
+	skb_queue_head_init(info->buffer);
+	info->buffer_size = 0;
+	gmtp_set_buffer_limits(info, 1);
+	info->current_tx = 0; /* unlimited tx */
+
+out:
+	return info;
+}
+
+struct gmtp_flow_info *gmtp_inter_build_info(unsigned int bmin)
+{
+	struct gmtp_flow_info *info = __gmtp_inter_build_info();
+
+	if(info != NULL)
+		gmtp_set_buffer_limits(info, bmin);
+
+	return info;
+}
+
+int gmtp_inter_add_entry(struct gmtp_inter_hashtable *hashtable, __u8 *flowname,
+		__be32 server_addr, __be32 *relay, __be16 media_port,
+		__be32 channel_addr, __be16 channel_port)
+{
+	struct gmtp_relay_entry *new_entry;
+	struct gmtp_relay_entry *current_entry;
+	unsigned int hashval;
+
+	gmtp_print_function();
+
+	hashval = gmtp_inter_hash(hashtable, flowname);
+
+	/* Error */
+	if(hashval < 0)
+		return hashval;
+
+	new_entry = kmalloc(sizeof(struct gmtp_relay_entry), GFP_KERNEL);
+	if(new_entry == NULL)
+		return 1;
+
+	current_entry = gmtp_inter_lookup_media(hashtable, flowname);
+	if(current_entry != NULL)
+		return 2; /* TODO Media already being transmitted by other
+								server? */
+
+	new_entry->info = gmtp_inter_build_info(5);
+	if(new_entry->info == NULL)
+		return 1;
+
+	memcpy(new_entry->flowname, flowname, GMTP_FLOWNAME_LEN);
+	new_entry->server_addr = server_addr;
+	new_entry->relay = relay; /* FIXME Add list */
+	new_entry->media_port = media_port;
+	new_entry->channel_addr = channel_addr;
+	new_entry->channel_port = channel_port;
+	new_entry->state = GMTP_INTER_WAITING_REGISTER_REPLY;
+	new_entry->next = hashtable->table[hashval];
+
+	hashtable->table[hashval] = new_entry;
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(gmtp_inter_add_entry);
+
+void gmtp_inter_del_clients(struct gmtp_relay_entry *entry)
+{
+	struct gmtp_client *client, *temp;
+	gmtp_pr_func();
+	list_for_each_entry_safe(client, temp,
+			&(entry->info->clients->list), list)
+	{
+		list_del(&client->list);
+		kfree(client);
+	}
+}
+
+struct gmtp_relay_entry *gmtp_inter_del_entry(
+		struct gmtp_inter_hashtable *hashtable, __u8 *media)
+{
+	struct gmtp_relay_entry *previous_entry;
+	struct gmtp_relay_entry *current_entry;
+	int hashval;
+
+	gmtp_print_function();
+
+	hashval = gmtp_inter_hash(hashtable, media);
+	if(hashval < 0)
+		return NULL;
+
+	previous_entry = NULL;
+	current_entry = hashtable->table[hashval];
+
+	while(current_entry != NULL
+			&& memcmp(media, current_entry->flowname,
+					GMTP_FLOWNAME_LEN) != 0) {
+		previous_entry = current_entry;
+		current_entry = current_entry->next;
+	}
+
+	if(current_entry == NULL) {
+		gmtp_print_debug("Media entry not found at %d", hashval);
+		return hashtable->table[hashval];
+	}
+
+	/* Remove the last entry of list */
+	if(previous_entry == NULL)
+		hashtable->table[hashval] = current_entry->next;
+	else  /* The list keeps another media with same hash value */
+		previous_entry->next = current_entry->next;
+
+	gmtp_inter_del_clients(current_entry);
+	skb_queue_purge(current_entry->info->buffer);
+	kfree(current_entry->info);
+	kfree(current_entry);
+
+	gmtp_print_debug("Media entry removed successfully!");
+	return hashtable->table[hashval];
+}
+
+void kfree_gmtp_inter_hashtable(struct gmtp_inter_hashtable *hashtable)
+{
+	int i;
+	struct gmtp_relay_entry *list, *temp;
+
+	gmtp_print_function();
+
+	if(hashtable == NULL)
+		return;
+
+	for(i = 0; i < hashtable->size; ++i) {
+		list = hashtable->table[i];
+		while(list != NULL) {
+			temp = list;
+			list = list->next;
+			kfree(temp);
+		}
+	}
+
+	kfree(hashtable->table);
+	kfree(hashtable);
+}
diff --git a/linux-3.17.1/net/gmtp/gmtp-inter/input.c b/linux-3.17.1/net/gmtp/gmtp-inter/input.c
new file mode 100644
index 0000000..981967c
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/gmtp-inter/input.c
@@ -0,0 +1,373 @@
+#include <net/ip.h>
+
+#include <uapi/linux/gmtp.h>
+#include <linux/gmtp.h>
+#include "../gmtp.h"
+
+#include "gmtp-inter.h"
+#include "mcc-inter.h"
+
+/**
+ * Algorithm 1: registerRelay
+ *
+ * The node r (relay) executes this algorithm to send a register of
+ * participation to a  * given node s (server).
+ * If p (packet) is given, node c wants to receive the flow P, so notify s.
+ *
+ * begin
+ * P = p.flowname
+ * If P != NULL:
+ *    client = p.client (ip:port)
+ *    Check if P is already being received (via reception table)
+ *    // Add client to an waiting list
+ *    addClientWaitingFlow(c, P)
+ *    If multicast channel exists:
+ *        respondToClients(GMTPRequestReply(channel))
+ *        return 0
+ *    else:
+ *        Send request to server and wait registration reply.
+ *        When GMTP-Register-Reply is received, executes
+ *        gmtp_inter_register_reply_received
+ *        if state(P) != GMTP_inter_WAITING_REGISTER_REPLY:
+ *            state(P) = GMTP_inter_WAITING_REGISTER_REPLY
+ *            sendToServer(GMTP_PKT_REGISTER, P)
+ *        else:
+ *            // Ask client to wait registration reply for P
+ *            respondToClients(GMTPRequestReply(P, "waiting_registration"));
+ *        endif
+ *        return 0
+ *    endif
+ *    if state(P) != GMTP_inter_WAITING_REGISTER_REPLY:
+ *            state(P) = GMTP_inter_WAITING_REGISTER_REPLY
+ *            sendToServer(GMTP_PKT_REGISTER)
+ *    endif
+ * endif
+ * return 0
+ * end
+ */
+int gmtp_inter_request_rcv(struct sk_buff *skb)
+{
+	int ret = NF_ACCEPT;
+	struct iphdr *iph = ip_hdr(skb);
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct gmtp_hdr *gh_reqnotify;
+	struct gmtp_relay_entry *entry;
+
+	__u8 code = GMTP_REQNOTIFY_CODE_ERROR;
+	__u8 reporter = 0;
+
+	gmtp_pr_func();
+
+	entry = gmtp_inter_lookup_media(gmtp.hashtable, gh->flowname);
+	if(entry != NULL) {
+		gmtp_pr_info("Media found. Sending RequestNotify.");
+		reporter = new_reporter(entry);
+		switch(entry->state) {
+		case GMTP_INTER_WAITING_REGISTER_REPLY:
+			code = reporter ?
+					GMTP_REQNOTIFY_CODE_WAIT_REPORTER :
+					GMTP_REQNOTIFY_CODE_WAIT;
+			break;
+		case GMTP_INTER_REGISTER_REPLY_RECEIVED:
+		case GMTP_INTER_TRANSMITTING:
+			code = reporter ?
+					GMTP_REQNOTIFY_CODE_OK_REPORTER:
+					GMTP_REQNOTIFY_CODE_OK;
+			ret = NF_DROP;
+			break;
+		default:
+			gmtp_pr_error("Inconsistent state: %d", entry->state);
+			ret = NF_DROP;
+			goto out;
+		}
+
+	} else {
+		__be32 mcst_addr = get_mcst_v4_addr();
+		int err = gmtp_inter_add_entry(gmtp.hashtable, gh->flowname,
+				iph->daddr,
+				NULL,
+				gh->sport,
+				mcst_addr,
+				gh->dport); /* Mcst port <- server port */
+
+		if(!err) {
+			entry = gmtp_inter_lookup_media(gmtp.hashtable,
+					gh->flowname);
+			reporter = new_reporter(entry);
+			code = reporter ?
+					GMTP_REQNOTIFY_CODE_WAIT_REPORTER :
+					GMTP_REQNOTIFY_CODE_WAIT;
+			gh->type = GMTP_PKT_REGISTER;
+		} else {
+			gmtp_pr_error("Failed to insert flow in table (%d)", err);
+			ret = NF_DROP;
+			goto out;
+		}
+	}
+
+	gmtp_list_add_client(++entry->info->nclients, iph->saddr, gh->sport,
+			reporter, &entry->info->clients->list);
+
+out:
+	gh_reqnotify = gmtp_inter_make_request_notify_hdr(skb, entry,
+			gh->dport, gh->sport, code);
+
+	if(gh_reqnotify != NULL)
+		gmtp_inter_build_and_send_pkt(skb, iph->daddr,
+				iph->saddr, gh_reqnotify, true);
+
+	return ret;
+}
+
+/**
+ * Algorithm 2:: onReceiveGMTPRegisterReply(p.type == GMTP-Register-Reply)
+ *
+ * The node r (relay) executes this algorithm when receives a packet of type
+ * GMTP-Register-Reply, as response for a registration of participation
+ * sent to a s(server) node.
+ *
+ * begin
+ * state(P) = GMTP_inter_REGISTER_REPLY_RECEIVED
+ * if (packet p is OK):
+ *     W = p.way
+ *     s = p.server (ip:port)
+ *     P = p.flowname
+ *     if P != NULL:
+ *         if s enabled security layer:
+ *             getAndStoreServerPublicKey(s)
+ *         endif
+ *         channel = createMulticastChannel(s, P)
+ *         Update flow reception table with channel
+ *         respondToClients(GMTPRequestReply(channel))
+ *         startRelay(channel);
+ *      endif
+ *      updateFlowReceptionTable(s)
+ *      Send ack to server (ack.w = W) //Send way back to server
+ * else
+ *      // s refused to accept the registration of participation.
+ *      errorCode = p.error
+ *      respondToClients(GMTPRequestReply(errorCode, P))
+ * endif
+ * end
+ */
+int gmtp_inter_register_reply_rcv(struct sk_buff *skb)
+{
+	int ret = NF_ACCEPT;
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct iphdr *iph = ip_hdr(skb);
+	struct gmtp_hdr *gh_rn;
+	struct gmtp_relay_entry *data;
+	/*unsigned int r;*/
+
+	gmtp_print_function();
+
+	/* Add relay information in REGISTER-REPLY packet) */
+	gmtp_inter_add_relayid(skb);
+
+	/* Update transmission rate (GMTP-UCC) */
+	/* gmtp_print_debug("UPDATING Tx Rate");
+	 gmtp_update_tx_rate(H_USER);
+	 r = gmtp_get_current_tx_rate();
+	 if(r < gh->transm_r)
+	 gh->transm_r = r;
+	 */
+
+	/*
+	 * FIXME
+	 * If RegisterReply is destined others, just let it go...
+	 */
+	data = gmtp_inter_lookup_media(gmtp.hashtable, gh->flowname);
+	pr_info("gmtp_lookup_media returned: %p\n", data);
+	if(data == NULL)
+		return NF_ACCEPT;
+
+	/** Send ack back to server */
+	gh_rn = gmtp_inter_make_route_hdr(skb);
+	if(gh_rn != NULL)
+		gmtp_inter_build_and_send_pkt(skb, iph->daddr, iph->saddr,
+				gh_rn, true);
+
+	data->state = GMTP_INTER_REGISTER_REPLY_RECEIVED;
+
+	/*
+	 * FIXME
+	 * (1) Send ReqNotify to every waiting client.
+	 * (2) Clear waiting client list
+	 *
+	 * Here, the first client is a REPORTER
+	 */
+	ret = gmtp_inter_make_request_notify(skb,
+			iph->saddr, gh->sport,
+			iph->daddr, gh->dport,
+			GMTP_REQNOTIFY_CODE_OK_REPORTER);
+
+	return ret;
+}
+
+/* FIXME Treat acks from clients */
+int gmtp_inter_ack_rcv(struct sk_buff *skb)
+{
+	int ret = NF_DROP;
+
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct iphdr *iph = ip_hdr(skb);
+
+	gmtp_print_function();
+
+	gmtp_pr_info("%s (%d) src=%pI4@%-5d dst=%pI4@%-5d transm_r: %u",
+			gmtp_packet_name(gh->type), gh->type,
+			&iph->saddr, ntohs(gh->sport),
+			&iph->daddr, ntohs(gh->dport),
+			gh->transm_r);
+
+	return ret;
+}
+
+int gmtp_inter_feedback_rcv(struct sk_buff *skb)
+{
+	int ret = NF_DROP;
+
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct gmtp_relay_entry *entry;
+
+	entry = gmtp_inter_lookup_media(gmtp.hashtable, gh->flowname);
+	if(entry == NULL)
+		goto out;
+
+	/*{
+		struct iphdr *iph = ip_hdr(skb);
+		gmtp_pr_info("%s (%d) src=%pI4@%-5d dst=%pI4@%-5d transm_r: %u",
+				gmtp_packet_name(gh->type), gh->type,
+				&iph->saddr, ntohs(gh->sport), &iph->daddr,
+				ntohs(gh->dport), gh->transm_r);
+	}*/
+
+	/* Discard early feedbacks */
+	if((entry->info->data_pkt_tx/entry->info->buffer_min) < 100)
+		goto out;
+
+	if(gh->transm_r > 0)
+		entry->info->current_tx = (u64) gh->transm_r;
+
+out:
+	return ret;
+}
+
+/**
+ * Update GMTP-inter statistics
+ */
+static inline void gmtp_update_stats(struct gmtp_flow_info *info,
+		struct sk_buff *skb, struct gmtp_hdr *gh)
+{
+	if(info->iseq == 0)
+		info->iseq = gh->seq;
+	if(gh->seq > info->seq)
+		info->seq = gh->seq;
+	info->nbytes += skb->len + ETH_HLEN;
+	gmtp.total_bytes_rx += skb->len + ETH_HLEN;
+}
+
+/**
+ * begin
+ * P = p.flowname
+ * If P != NULL:
+ *  in:
+ *     AddToBuffer(P)
+ *  out:
+ *     p.dest_address = get_multicast_channel(P)
+ *     p.port = get_multicast_port(P)
+ *     send(P)
+ */
+int gmtp_inter_data_rcv(struct sk_buff *skb)
+{
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct gmtp_relay_entry *entry;
+	struct gmtp_flow_info *info;
+
+	entry = gmtp_inter_lookup_media(gmtp.hashtable, gh->flowname);
+	if(entry == NULL) {
+		gmtp_pr_info("Failed to lookup media info in table...");
+		goto out;
+	}
+
+	info = entry->info;
+	if(entry->state == GMTP_INTER_REGISTER_REPLY_RECEIVED)
+		entry->state = GMTP_INTER_TRANSMITTING;
+
+	/* FIXME It frozes clients due to GMTP-MCC (loss forever...) */
+	/*pr_info("buffer_len: %u\n", info->buffer_len);
+	if(info->buffer_len >= info->buffer_max) {
+		pr_warning("Buffer overflow! Max: %u\n", info->buffer_max);
+		return NF_DROP;
+	}*/
+
+	if((gh->seq > info->seq) && entry->state == GMTP_INTER_TRANSMITTING)
+		gmtp_buffer_add(info, skb);
+
+	gmtp_update_stats(info, skb, gh);
+
+out:
+	return NF_ACCEPT;
+}
+
+int gmtp_inter_close_rcv(struct sk_buff *skb)
+{
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct iphdr *iph = ip_hdr(skb);
+	struct gmtp_relay_entry *entry;
+	struct gmtp_flow_info *info;
+
+	struct gmtp_client *client, *temp;
+
+	entry = gmtp_inter_lookup_media(gmtp.hashtable, gh->flowname);
+	if(entry == NULL) {
+		gmtp_pr_info("Failed to lookup media info in table...");
+		return NF_ACCEPT;
+	}
+	info = entry->info;
+
+	/* Close received from server.
+	 * Copy and buffer it for each client
+	 * We will send it later...
+	 */
+	if(iph->saddr == entry->server_addr) {
+		if(entry->state == GMTP_INTER_TRANSMITTING) {
+			entry->state = GMTP_INTER_CLOSE_RECEIVED;
+			list_for_each_entry(client, &info->clients->list, list)
+			{
+				struct sk_buff *copy = skb_copy(skb, gfp_any());
+				if(copy != NULL) {
+					struct iphdr *iph_copy = ip_hdr(copy);
+					struct gmtp_hdr *gh_copy =
+							gmtp_hdr(copy);
+
+					iph_copy->daddr = client->addr;
+					ip_send_check(iph_copy);
+					gh_copy->dport = client->port;
+
+					gmtp_buffer_add(info, copy);
+				}
+			}
+		}
+		return NF_ACCEPT;
+	}
+
+	/*
+	 * TODO Close received from client
+	 */
+	list_for_each_entry_safe(client, temp, &info->clients->list, list)
+	{
+		if(iph->saddr == client->addr && gh->sport == client->port) {
+			info->nclients--;
+			list_del(&client->list);
+			kfree(client);
+		}
+	}
+
+	if(info->nclients == 0)
+		gmtp_inter_del_entry(gmtp.hashtable, entry->flowname);
+
+	/* FIXME Broken pipe error when  close is called by clients */
+	/*return NF_DROP;*/
+	return NF_ACCEPT;
+}
diff --git a/linux-3.17.1/net/gmtp/gmtp-inter/mcc-inter.h b/linux-3.17.1/net/gmtp/gmtp-inter/mcc-inter.h
new file mode 100644
index 0000000..3c7728c
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/gmtp-inter/mcc-inter.h
@@ -0,0 +1,24 @@
+/*
+ * mcc.h
+ *
+ *  Created on: 13/04/2015
+ *      Author: wendell
+ */
+
+#ifndef MCC_INTER_H_
+#define MCC_INTER_H_
+
+#include <linux/gmtp.h>
+#include "gmtp-inter.h"
+
+#define GMTP_REPORTER_PROPORTION 6
+
+static inline int new_reporter(struct gmtp_relay_entry *entry)
+{
+	return (entry->info->nclients % GMTP_REPORTER_PROPORTION) == 0 ? 1 : 0;
+}
+
+void gmtp_inter_mcc_delay(struct gmtp_flow_info *info, struct sk_buff *skb,
+		u64 server_tx);
+
+#endif /* MCC_INTER_H_ */
diff --git a/linux-3.17.1/net/gmtp/gmtp-inter/mcc.c b/linux-3.17.1/net/gmtp/gmtp-inter/mcc.c
new file mode 100644
index 0000000..c5756df
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/gmtp-inter/mcc.c
@@ -0,0 +1,50 @@
+/*
+ * mcc.h
+ *
+ *  Created on: 13/04/2015
+ *      Author: wendell
+ */
+
+#include "gmtp-inter.h"
+#include "mcc-inter.h"
+
+void gmtp_inter_mcc_delay(struct gmtp_flow_info *info, struct sk_buff *skb,
+		u64 server_tx)
+{
+	u64 delay;
+	s64 elapsed, delay2;
+	u64 tx = info->current_tx; /*30000;*/
+	unsigned int len = skb->len + ETH_HLEN;
+
+	if(tx == 0 || tx >= server_tx) {
+		/*pr_info("tx: %lld >= %lld || 0\n", tx, server_tx);*/
+		goto out;
+	}
+
+	delay = DIV_ROUND_CLOSEST(len * USEC_PER_SEC, tx);
+	elapsed = ktime_us_delta(skb->tstamp, info->last_rx_tstamp);
+	delay2 = delay - elapsed;
+
+	/*pr_info("delay = (1000000 * %u)/%llu = %llu us\n", len, tx, delay);
+	pr_info("elapsed = %lld\n", elapsed);
+	pr_info("delay2 = %lld\n", delay2);*/
+
+	/* if delay2 <= 0, pass way... */
+	if(delay2 > 0)
+		gmtp_inter_wait_us(delay2);
+
+out:
+	info->last_rx_tstamp = skb->tstamp;
+}
+
+/*static struct timer_list my_timer;
+void my_timer_callback(unsigned long data)
+{
+	pr_info("GMTP-inter TIMER CALLBACK (%ld).\n", jiffies);
+	mod_timer(&my_timer, jiffies + msecs_to_jiffies(1000));
+}*/
+/* setup your timer to call my_timer_callback */
+/*setup_timer(&my_timer, my_timer_callback, 0);*/
+/* setup timer interval to 1000 msecs */
+/*mod_timer(&my_timer, jiffies + msecs_to_jiffies(1000));*/
+/*del_timer_sync(&my_timer);*/
diff --git a/linux-3.17.1/net/gmtp/gmtp-inter/output.c b/linux-3.17.1/net/gmtp/gmtp-inter/output.c
new file mode 100644
index 0000000..8c2b9c9
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/gmtp-inter/output.c
@@ -0,0 +1,431 @@
+/*
+ * output.c
+ *
+ *  Created on: 27/02/2015
+ *      Author: wendell
+ */
+
+#include <linux/phy.h>
+#include <linux/etherdevice.h>
+#include <net/ip.h>
+
+#include <uapi/linux/gmtp.h>
+#include <linux/gmtp.h>
+#include "../gmtp.h"
+
+#include "gmtp-inter.h"
+#include "mcc-inter.h"
+
+void gmtp_inter_add_relayid(struct sk_buff *skb)
+{
+	struct gmtp_hdr_register_reply *gh_rply = gmtp_hdr_register_reply(skb);
+	struct gmtp_relay relay;
+
+	gmtp_print_function();
+
+	memcpy(relay.relay_id, gmtp_inter_relay_id(), GMTP_RELAY_ID_LEN);
+	relay.relay_ip =  gmtp_inter_relay_ip();
+
+	gh_rply->relay_list[gh_rply->nrelays] = relay;
+	++gh_rply->nrelays;
+}
+
+struct gmtp_hdr *gmtp_inter_make_route_hdr(struct sk_buff *skb)
+{
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	__u8 *transport_header;
+
+	struct gmtp_hdr *gh_cpy;
+	struct gmtp_hdr_route *gh_rn;
+	struct gmtp_hdr_register_reply *gh_reply;
+
+	int gmtp_hdr_len = sizeof(struct gmtp_hdr) +
+			sizeof(struct gmtp_hdr_route);
+
+	gmtp_print_function();
+
+	transport_header = kmalloc(gmtp_hdr_len, gfp_any());
+	memset(transport_header, 0, gmtp_hdr_len);
+
+	gh_cpy = (struct gmtp_hdr *) transport_header;
+	memcpy(gh_cpy, gh, sizeof(struct gmtp_hdr));
+
+	gh_cpy->version = GMTP_VERSION;
+	gh_cpy->type = GMTP_PKT_ROUTE_NOTIFY;
+	gh_cpy->hdrlen = gmtp_hdr_len;
+	gh_cpy->dport = gh->sport;
+	gh_cpy->sport = gh->dport;
+
+	gh_rn = (struct gmtp_hdr_route *)(transport_header
+			+ sizeof(struct gmtp_hdr));
+	gh_reply = gmtp_hdr_register_reply(skb);
+	memcpy(gh_rn, gh_reply,	sizeof(*gh_reply));
+
+	return gh_cpy;
+}
+
+struct gmtp_hdr *gmtp_inter_make_request_notify_hdr(struct sk_buff *skb,
+		struct gmtp_relay_entry *entry, __be16 new_sport,
+		__be16 new_dport, __u8 code)
+{
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	__u8 *transport_header;
+
+	struct gmtp_hdr *gh_cpy;
+	struct gmtp_hdr_reqnotify *gh_rnotify;
+
+	int gmtp_hdr_len = sizeof(struct gmtp_hdr)
+			+ sizeof(struct gmtp_hdr_reqnotify);
+
+	gmtp_print_function();
+
+	transport_header = kmalloc(gmtp_hdr_len, gfp_any());
+	memset(transport_header, 0, gmtp_hdr_len);
+
+	gh_cpy = (struct gmtp_hdr *)transport_header;
+	memcpy(gh_cpy, gh, sizeof(struct gmtp_hdr));
+
+	gh_cpy->version = GMTP_VERSION;
+	gh_cpy->type = GMTP_PKT_REQUESTNOTIFY;
+	gh_cpy->hdrlen = gmtp_hdr_len;
+	gh_cpy->sport = new_sport;
+	gh_cpy->dport = new_dport;
+
+	gh_rnotify = (struct gmtp_hdr_reqnotify*)(transport_header
+			+ sizeof(struct gmtp_hdr));
+
+	gh_rnotify->error_code = code;
+
+	if(entry != NULL && code != GMTP_REQNOTIFY_CODE_ERROR) {
+		gh_rnotify->mcst_addr = entry->channel_addr;
+		gh_rnotify->mcst_port = entry->channel_port;
+
+		gmtp_print_debug("ReqNotify => Channel: %pI4@%-5d | Code: %d",
+				&gh_rnotify->mcst_addr,
+				ntohs(gh_rnotify->mcst_port),
+				gh_rnotify->error_code);
+	} else {
+		gmtp_print_debug("ReqNotify => Channel: NULL | Code: %d",
+				gh_rnotify->error_code);
+	}
+
+	return gh_cpy;
+}
+
+/**
+ * Algorithm 6: respondToClients(p.type = GMTP-RequestNotify)
+ *
+ * A r(relay) node executes this Algorithm to respond to clients waiting for
+ * receiving a flow P.
+ *
+ * destAddress = getCtrlChannel(); // 238.255.255.250:1900
+ * p.dest_address = destAddress
+ * P = p.flowname
+ * errorCode = p.error_code
+ * if errorCode != NULL:
+ *      removeClientsWaitingForFlow(P)
+ *      sendPkt(p);
+ * endif
+ * channel = p.channel
+ * if(channel != NULL):
+ *     //Node r is already receiving P
+ *     mediaDescription =  getMediaDescription(P);
+ *     p.data = mediaDescription
+ *     sendPkt(p)
+ *     C = getClientsWaitingForFlow(P)
+ *     waitAck(C)
+ * else:
+ *     p.waiting_registration = true
+ *     sendPkt(p)
+ * endif
+ * return 0
+ * end
+ */
+int gmtp_inter_make_request_notify(struct sk_buff *skb, __be32 new_saddr,
+		__be16 new_sport, __be32 new_daddr, __be16 new_dport,
+		__u8 code)
+{
+	int ret = NF_ACCEPT;
+
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct iphdr *iph = ip_hdr(skb);
+	struct gmtp_hdr_reqnotify *gh_rnotify;
+	struct gmtp_relay_entry *entry;
+	unsigned int skb_len = skb->len;
+	int gmtp_hdr_len = sizeof(struct gmtp_hdr)
+			+ sizeof(struct gmtp_hdr_reqnotify);
+
+	gmtp_pr_func();
+
+	entry = gmtp_inter_lookup_media(gmtp.hashtable, gh->flowname);
+	if(entry == NULL) {
+		gmtp_print_warning("Failed to lookup media info in table...");
+		goto fail;
+	}
+
+	/** Delete REQUEST or REGISTER-REPLY specific header */
+	gmtp_print_debug("Deleting specific headers...");
+	skb_trim(skb, (skb_len - gmtp_packet_hdr_variable_len(gh->type)));
+
+	gh->version = GMTP_VERSION;
+	gh->type = GMTP_PKT_REQUESTNOTIFY;
+	gh->hdrlen = gmtp_hdr_len;
+	gh->sport = new_sport;
+	gh->dport = new_dport;
+
+	gh_rnotify = (struct gmtp_hdr_reqnotify*)
+			skb_put(skb, sizeof(struct gmtp_hdr_reqnotify));
+
+	if(gh_rnotify == NULL)
+		goto fail;
+
+	if(entry != NULL && code != GMTP_REQNOTIFY_CODE_ERROR) {
+		gh_rnotify->error_code = code;
+		gh_rnotify->mcst_addr = entry->channel_addr;
+		gh_rnotify->mcst_port = entry->channel_port;
+
+		gmtp_print_debug("ReqNotify => Channel: %pI4@%-5d | Code: %d",
+				&gh_rnotify->mcst_addr,
+				ntohs(gh_rnotify->mcst_port),
+				gh_rnotify->error_code);
+	} else {
+		gmtp_print_debug("ReqNotify => Channel: NULL | Code: %d",
+				gh_rnotify->error_code);
+	}
+
+	iph->saddr = new_saddr;
+	iph->daddr = new_daddr;
+	iph->tot_len = htons(skb->len);
+	ip_send_check(iph);
+
+	return ret;
+
+fail:
+	ret = NF_DROP;
+	return ret;
+}
+
+/*
+ * Add an ip header to a skbuff and send it out.
+ * Based on netpoll_send_udp(...) (netpoll.c)
+ */
+struct sk_buff *gmtp_inter_build_pkt(struct sk_buff *skb_src, __be32 saddr,
+		__be32 daddr, struct gmtp_hdr *gh_ref, bool backward)
+{
+	struct net_device *dev = skb_src->dev;
+	struct ethhdr *eth_src = eth_hdr(skb_src);
+
+	struct sk_buff *skb = alloc_skb(gh_ref->hdrlen, gfp_any());
+	struct ethhdr *eth;
+	struct iphdr *iph;
+	struct gmtp_hdr *gh;
+	int total_len, ip_len, gmtp_len, data_len = 0;
+
+	if(eth_src == NULL) {
+		gmtp_print_warning("eth_src is NULL!");
+		return NULL;
+	}
+
+	if (skb == NULL) {
+		gmtp_print_warning("skb is null");
+		return NULL;
+	}
+
+	if(gh_ref->type == GMTP_PKT_DATA)
+		data_len = gmtp_data_len(skb_src);
+
+	gmtp_len = gh_ref->hdrlen + data_len;
+	ip_len = gmtp_len + sizeof(*iph);
+	total_len = ip_len + LL_RESERVED_SPACE(dev);
+
+	skb_reserve(skb, total_len);
+
+	/* Build GMTP data */
+	if(data_len > 0) {
+		unsigned char *data = skb_push(skb, data_len);
+		memcpy(data, gmtp_data(skb_src), data_len);
+	}
+
+	/* Build GMTP header */
+	skb_push(skb, gh_ref->hdrlen);
+	skb_reset_transport_header(skb);
+	gh = gmtp_hdr(skb);
+	memcpy(gh, gh_ref, gh_ref->hdrlen);
+
+	/* Build the IP header. */
+	skb_push(skb, sizeof(struct iphdr));
+	skb_reset_network_header(skb);
+	iph = ip_hdr(skb);
+
+	/* iph->version = 4; iph->ihl = 5; */
+	put_unaligned(0x45, (unsigned char *)iph);
+	iph->tos      = 0;
+	iph->frag_off = 0;
+	iph->ttl      = 64;
+	iph->protocol = IPPROTO_GMTP;
+	put_unaligned(saddr, &(iph->saddr));
+	put_unaligned(daddr, &(iph->daddr));
+	put_unaligned(htons(skb->len), &(iph->tot_len));
+	ip_send_check(iph);
+
+	eth = (struct ethhdr *) skb_push(skb, ETH_HLEN);
+	skb_reset_mac_header(skb);
+	skb->protocol = eth->h_proto = htons(ETH_P_IP);
+
+	ether_addr_copy(eth->h_source, dev->dev_addr);
+	if(backward)
+		ether_addr_copy(eth->h_dest, eth_src->h_source);
+	else
+		ether_addr_copy(eth->h_dest, eth_src->h_dest);
+
+	skb->dev = dev;
+
+	return skb;
+}
+
+void gmtp_inter_send_pkt(struct sk_buff *skb)
+{
+	int err = dev_queue_xmit(skb);
+	if(err)
+		gmtp_pr_error("Error %d trying send packet (%p)", err, skb);
+}
+
+/*
+ * Add an ip header to a skbuff and send it out.
+ * Based on netpoll_send_udp(...) (netpoll.c)
+ */
+void gmtp_inter_build_and_send_pkt(struct sk_buff *skb_src, __be32 saddr,
+		__be32 daddr, struct gmtp_hdr *gh_ref, bool backward)
+{
+	struct sk_buff *skb = gmtp_inter_build_pkt(skb_src, saddr, daddr,
+			gh_ref, backward);
+
+	if(skb != NULL)
+		gmtp_inter_send_pkt(skb);
+}
+
+void gmtp_inter_build_and_send_skb(struct sk_buff *skb)
+{
+	struct iphdr *iph = ip_hdr(skb);
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+
+	gmtp_inter_build_and_send_pkt(skb, iph->saddr, iph->daddr, gh, 0);
+}
+
+void gmtp_copy_hdr(struct sk_buff *skb, struct sk_buff *src_skb)
+{
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct gmtp_hdr *gh_src = gmtp_hdr(src_skb);
+
+	if(gh->type == gh_src->type)
+		memcpy(gh, gh_src, gh_src->hdrlen);
+}
+
+void gmtp_copy_data(struct sk_buff *skb, struct sk_buff *src_skb)
+{
+	__u8* data = gmtp_data(skb);
+	__u32 data_len = gmtp_data_len(skb);
+
+	__u8* data_src = gmtp_data(src_skb);
+	__u32 data_src_len = gmtp_data_len(src_skb);
+
+	int diff = (int)data_len - (int)data_src_len;
+
+	if(diff > 0)
+		skb_trim(skb, diff);
+	else if(diff < 0)
+		skb_put(skb, -diff);
+
+	memcpy(data, data_src, data_src_len);
+}
+
+/**
+ * begin
+ * P = p.flowname
+ * If P != NULL:
+ *     p.dest_address = get_multicast_channel(P)
+ *     p.port = get_multicast_port(P)
+ *     send(P)
+ */
+int gmtp_inter_data_out(struct sk_buff *skb)
+{
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct iphdr *iph = ip_hdr(skb);
+	struct gmtp_relay_entry *entry;
+	struct gmtp_flow_info *info;
+
+	entry = gmtp_inter_lookup_media(gmtp.hashtable, gh->flowname);
+	if(entry == NULL) {
+		gmtp_pr_info("Failed to lookup media info in table...");
+		goto out;
+	}
+
+	info = entry->info;
+	if(entry->state == GMTP_INTER_TRANSMITTING) {
+		if(info->buffer_len > info->buffer_min) {
+			struct sk_buff *buffered = gmtp_buffer_dequeue(info);
+			if(buffered != NULL) {
+				info->data_pkt_tx++;
+				gmtp_copy_hdr(skb, buffered);
+				gmtp_copy_data(skb, buffered);
+			}
+		} else
+			return NF_DROP;
+	}
+
+	iph->daddr = entry->channel_addr;
+	ip_send_check(iph);
+	gh->dport = entry->channel_port;
+
+	/** TODO We really trust in declared tx rate from server ? */
+	gmtp_inter_mcc_delay(info, skb, (u64) gh->transm_r);
+
+out:
+	return NF_ACCEPT;
+}
+
+/*
+ * FIXME Send close to multicast (or foreach client) and delete entry later...
+ * Treat close from servers
+ */
+int gmtp_inter_close_out(struct sk_buff *skb)
+{
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+	struct gmtp_relay_entry *entry;
+
+	gmtp_pr_func();
+
+	/**
+	 * If destiny is not me, just let it go!
+	 */
+	entry = gmtp_inter_lookup_media(gmtp.hashtable, gh->flowname);
+	if(entry == NULL)
+		return NF_ACCEPT;
+
+	switch(entry->state) {
+	case GMTP_INTER_TRANSMITTING:
+		return NF_ACCEPT;
+	case GMTP_INTER_CLOSED:
+		pr_info("CLOSED\n");
+		gmtp_inter_del_entry(gmtp.hashtable, gh->flowname);
+		return NF_ACCEPT;
+	case GMTP_INTER_CLOSE_RECEIVED:
+		pr_info("CLOSE_RECEIVED\n");
+		entry->state = GMTP_INTER_CLOSED;
+		break;
+	}
+
+	while(entry->info->buffer_len > 0) {
+		struct sk_buff *buffered = gmtp_buffer_dequeue(entry->info);
+		if(buffered == NULL) {
+			gmtp_pr_error("Buffered is NULL...");
+			return NF_ACCEPT;
+		}
+		buffered->dev = skb->dev;
+		gmtp_inter_build_and_send_skb(buffered);
+	}
+
+	entry->state = GMTP_INTER_CLOSED;
+
+	return NF_STOLEN;
+}
diff --git a/linux-3.17.1/net/gmtp/gmtp-inter/ucc.c b/linux-3.17.1/net/gmtp/gmtp-inter/ucc.c
new file mode 100644
index 0000000..7eb59b5
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/gmtp-inter/ucc.c
@@ -0,0 +1,98 @@
+/*
+ * gmtp-ucc.c
+ *
+ *  Created on: 08/03/2015
+ *      Author: wendell
+ */
+
+#include <linux/kernel.h>
+#include <linux/module.h>
+
+#include "gmtp-inter.h"
+#include "ucc.h"
+
+#define ALPHA(X) (((X)*3)/10)  /* X*0.3 */
+#define BETA(X)  (((X)*6)/10)  /* X*0.6 */
+#define GHAMA(X) (((X)*10)/10) /* X*1.0 */
+#define THETA(X) (((X)*2)/100) /* X*0.02 */
+
+#define MOD(X)   ((X > 0) ? (X) : -(X))
+
+#define C 1250 /* bytes/ms => 10 Mbit/s */
+
+extern struct gmtp_inter gmtp;
+
+unsigned int gmtp_rtt_average()
+{
+	return 1;
+}
+
+unsigned int gmtp_rx_rate()
+{
+	return 0;
+}
+
+unsigned int gmtp_relay_queue_size()
+{
+	return gmtp.total_bytes_rx;
+}
+
+/**
+ * Get the last calculated TX
+ */
+unsigned int gmtp_get_current_rx_rate()
+{
+	return gmtp.total_rx;
+}
+EXPORT_SYMBOL_GPL(gmtp_get_current_rx_rate);
+
+/**
+ * Get TX rate, via RCP
+ */
+void gmtp_update_rx_rate(unsigned int  h_user)
+{
+	unsigned int r = 0;
+	unsigned int H, h, y, q;
+	unsigned int r_prev = gmtp_get_current_rx_rate();
+	int up, delta;
+
+	gmtp_pr_func();
+
+	gmtp_print_debug("r_prev: %d", r_prev);
+
+	h = gmtp_rtt_average();
+	y = gmtp_rx_rate();
+	q = gmtp_relay_queue_size();
+
+	gmtp_print_debug("h_user: %u", h_user);
+	gmtp_print_debug("h0: %u", h);
+	gmtp_print_debug("y(t): %u", y);
+	gmtp_print_debug("q(t): %u", q);
+
+	H = (h < h_user) ? h : h_user;
+
+	up = (H/h) * (ALPHA(GHAMA(C)-y) - BETA(q/h));
+
+	gmtp_print_debug("H/h0: %u", (H/h));
+	gmtp_print_debug("ALPHA(GHAMA(C)-y): %u", ALPHA(GHAMA(C)-y));
+	gmtp_print_debug("BETA(q/h): %u", BETA(q/h));
+	gmtp_print_debug("ALPHA(GHAMA(C)-y) - BETA(q/h): %d", ALPHA(GHAMA(C)-y) - BETA(q/h));
+
+	gmtp_print_debug("up: %d", up);
+
+	delta = ((int)(r_prev) * up)/GHAMA(C);
+
+	gmtp_print_debug("delta = ((r_prev * up)/GHAMA(C)): %d", delta);
+
+	/**
+	 * r = r_prev * (1 + up/GHAMA(C)) =>
+	 * r = r_prev + r_prev * up/GHAMA(C) =>
+	 * r = r_prev + delta
+	 */
+	r = (int)(r_prev) + delta;
+
+	gmtp_print_debug("new_r: %d", r);
+	gmtp.total_rx = r;
+}
+EXPORT_SYMBOL_GPL(gmtp_update_rx_rate);
+
diff --git a/linux-3.17.1/net/gmtp/gmtp-inter/ucc.h b/linux-3.17.1/net/gmtp/gmtp-inter/ucc.h
new file mode 100644
index 0000000..f3ac2f5
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/gmtp-inter/ucc.h
@@ -0,0 +1,18 @@
+/*
+ * ucc.h
+ *
+ *  Created on: 14/05/2015
+ *      Author: wendell
+ */
+
+#ifndef UCC_H_
+#define UCC_H_
+
+/** gmtp-ucc. */
+unsigned int gmtp_rtt_average(void);
+unsigned int gmtp_rx_rate(void);
+unsigned int gmtp_relay_queue_size(void);
+unsigned int gmtp_get_current_rx_rate(void);
+void gmtp_update_rx_rate(unsigned int h_user);
+
+#endif /* UCC_H_ */
diff --git a/linux-3.17.1/net/gmtp/gmtp.h b/linux-3.17.1/net/gmtp/gmtp.h
new file mode 100644
index 0000000..a5b0bed
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/gmtp.h
@@ -0,0 +1,275 @@
+/*
+ * gmtp.h
+ *
+ *  Created on: 18/06/2014
+ *      Author: Wendell Silva Soares <wendell@compelab.org>
+ */
+
+#ifndef GMTP_H_
+#define GMTP_H_
+
+#include <net/inet_timewait_sock.h>
+#include <net/inet_hashtables.h>
+#include <uapi/asm-generic/errno.h>
+#include <uapi/linux/ip.h>
+#include <linux/types.h>
+#include <linux/skbuff.h>
+
+#include <net/netns/gmtp.h>
+#include <linux/gmtp.h>
+#include <uapi/linux/gmtp.h>
+
+#include "hash.h"
+
+extern struct inet_hashinfo gmtp_inet_hashinfo;
+extern struct percpu_counter gmtp_orphan_count;
+
+/** GMTP Debugs */
+#define GMTP_INFO "[GMTP] %s:%d - "
+#define GMTP_DEBUG GMTP_INFO
+#define GMTP_WARNING "[GMTP_WARNING]  %s:%d at %s - "
+#define GMTP_ERROR "[GMTP_ERROR] %s:%d at %s - "
+
+/* TODO Improve debug func names */
+#define gmtp_print_debug(fmt, args...) pr_info(GMTP_DEBUG fmt \
+		"\n", __FUNCTION__, __LINE__, ##args)
+#define gmtp_print_warning(fmt, args...) pr_warning(GMTP_WARNING fmt \
+		"\n", __FUNCTION__, __LINE__, __FILE__, ##args)
+#define gmtp_print_error(fmt, args...) pr_err(GMTP_ERROR fmt \
+		"\n", __FUNCTION__, __LINE__, __FILE__, ##args)
+#define gmtp_print_function() pr_info("-------- %s --------\n" , __FUNCTION__)
+
+/* Better print names */
+#define gmtp_pr_func() pr_info("-------- %s --------\n" , __FUNCTION__)
+#define gmtp_pr_info(fmt, args...) pr_info(GMTP_DEBUG fmt \
+		"\n", __FUNCTION__, __LINE__, ##args)
+#define gmtp_pr_debug(fmt, args...) gmtp_pr_info(fmt, ##args);
+#define gmtp_pr_warning(fmt, args...) pr_warning(GMTP_WARNING fmt \
+		"\n", __FUNCTION__, __LINE__, __FILE__, ##args)
+#define gmtp_pr_error(fmt, args...) pr_err(GMTP_ERROR fmt \
+		"\n", __FUNCTION__, __LINE__, __FILE__, ##args)
+
+/** ---- */
+#define GMTP_MAX_HDR_LEN 2047  /* 2^11 - 1 */
+#define GMTP_FIXED_HDR_LEN 36  /* theoretically: 32 bytes, In fact: 36 bytes */
+#define GMTP_MAX_VARIABLE_HDR_LEN (GMTP_MAX_HDR_LEN - GMTP_FIXED_HDR_LEN)
+
+#define GMTP_MIN_SAMPLE_LEN 100 /* Minimal sample to measure 'instant' Tx rate*/
+#define GMTP_DEFAULT_SAMPLE_LEN 1000 /* Sample to measure 'instant' Tx rate */
+#define GMTP_MAX_SAMPLE_LEN 10000 /* Max sample to measure 'instant' Tx rate */
+
+/**
+ * Based on TCP Default Maximum Segment Size calculation
+ * The solution to these two competing issues was to establish a default MSS
+ * for TCP that was as large as possible while avoiding fragmentation for most
+ * transmitted segments.
+ * This was computed by starting with the minimum MTU for IP networks of 576.
+ * All networks are required to be able to handle an IP datagram of this size
+ * without fragmenting.
+ * From this number, we subtract 36 bytes for the GMTP header and 20 for the
+ * IP header, leaving 536 bytes. This is the standard MSS for GMTP.
+ */
+#define GMTP_DEFAULT_MSS (576 - GMTP_FIXED_HDR_LEN - 20)
+
+
+#define GMTP_DEFAULT_RTT 64  /* milisseconds */
+/*
+ * RTT sampling: sanity bounds and fallback RTT value from RFC 4340, section 3.4
+ * Units in usec (microseconds)
+ */
+#define GMTP_SANE_RTT_MIN	100		    /* 0.1 ms */
+#define GMTP_FALLBACK_RTT	((GMTP_DEFAULT_RTT * USEC_PER_MSEC) / 5)
+#define GMTP_SANE_RTT_MAX	(3 * USEC_PER_SEC)  /* 3 s    */
+
+/* initial RTO value */
+#define GMTP_TIMEOUT_INIT ((unsigned int)(3 * HZ))
+/*
+ * The maximum back-off value for retransmissions. This is needed for
+ *  - retransmitting client-Requests
+ *  - retransmitting Close/CloseReq when closing
+ */
+#define GMTP_RTO_MAX ((unsigned int)(64 * HZ))
+#define GMTP_TIMEWAIT_LEN (60 * HZ)
+
+/* Int to __u8 operations */
+#define TO_U8(x) ((x) > UINT_MAX) ? UINT_MAX : (__u8)(x)
+#define SUB_U8(a, b) ((a-b) > UINT_MAX) ? UINT_MAX : (a-b)
+
+extern struct gmtp_hashtable* gmtp_hashtable;
+
+void gmtp_init_xmit_timers(struct sock *sk);
+static inline void gmtp_clear_xmit_timers(struct sock *sk)
+{
+	inet_csk_clear_xmit_timers(sk);
+}
+
+/** proto.c */
+int gmtp_init_sock(struct sock *sk);
+void gmtp_done(struct sock *sk);
+void gmtp_close(struct sock *sk, long timeout);
+int gmtp_connect(struct sock *sk);
+int gmtp_disconnect(struct sock *sk, int flags);
+int gmtp_ioctl(struct sock *sk, int cmd, unsigned long arg);
+int gmtp_sendmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg,
+		size_t size);
+int gmtp_recvmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg,
+		size_t len, int nonblock, int flags, int *addr_len);
+void gmtp_shutdown(struct sock *sk, int how);
+void gmtp_destroy_sock(struct sock *sk);
+void gmtp_set_state(struct sock*, const int);
+int inet_gmtp_listen(struct socket *sock, int backlog);
+const char *gmtp_packet_name(const int);
+const char *gmtp_state_name(const int);
+void flowname_str(__u8* str, const __u8 *flowname);
+void print_route(struct gmtp_hdr_route *route);
+
+/** sockopt.c */
+int gmtp_getsockopt(struct sock *sk, int level, int optname,
+		char __user *optval, int __user *optlen);
+int gmtp_setsockopt(struct sock *sk, int level, int optname,
+		char __user *optval, unsigned int optlen);
+
+/** input.c */
+int gmtp_rcv_established(struct sock *sk, struct sk_buff *skb,
+		const struct gmtp_hdr *dh, const unsigned int len);
+int gmtp_rcv_state_process(struct sock *sk, struct sk_buff *skb,
+		struct gmtp_hdr *gh, unsigned int len);
+
+/** output.c */
+void gmtp_send_ack(struct sock *sk,  __u8 ackcode);
+void gmtp_send_feedback(struct sock *sk);
+void gmtp_send_close(struct sock *sk, const int active);
+int gmtp_send_reset(struct sock *sk, enum gmtp_reset_codes code);
+void gmtp_write_xmit(struct sock *sk, struct sk_buff *skb);
+unsigned int gmtp_sync_mss(struct sock *sk, u32 pmtu);
+struct sk_buff *gmtp_make_register_reply(struct sock *sk, struct dst_entry *dst,
+		struct request_sock *req);
+struct sk_buff *gmtp_ctl_make_reset(struct sock *sk,
+		struct sk_buff *rcv_skb);
+/** output.c - Packet Output and Timers  */
+void gmtp_write_space(struct sock *sk);
+int gmtp_retransmit_skb(struct sock *sk);
+
+/** minisocks.c */
+void gmtp_time_wait(struct sock *sk, int state, int timeo);
+int gmtp_reqsk_init(struct request_sock *rq, struct gmtp_sock const *gp,
+		struct sk_buff const *skb);
+struct sock *gmtp_create_openreq_child(struct sock *sk,
+				       const struct request_sock *req,
+				       const struct sk_buff *skb);
+int gmtp_child_process(struct sock *parent, struct sock *child,
+		       struct sk_buff *skb);
+struct sock *gmtp_check_req(struct sock *sk, struct sk_buff *skb,
+			    struct request_sock *req,
+			    struct request_sock **prev);
+void gmtp_reqsk_send_ack(struct sock *sk, struct sk_buff *skb,
+			 struct request_sock *rsk);
+
+/** ipv4.c */
+int gmtp_v4_connect(struct sock *sk, struct sockaddr *uaddr, int addr_len);
+
+/**
+ * This is the control buffer. It is free to use by any layer.
+ * This is an opaque area used to store private information.
+ *
+ * struct sk_buff {
+ * (...)
+ * 		char cb[48]
+ * }
+ *
+ * gmtp_skb_cb  -  GMTP per-packet control information
+ *
+ * @type: one of %gmtp_pkt_type (or unknown)
+ * @ackcode: ack code. One of sock, one of %gmtp_ack_codes
+ * @reset_code: one of %gmtp_reset_codes
+ * @reset_data: Data1..3 fields (depend on @gmtpd_reset_code)
+ * @seq: sequence number
+ *
+ * This is used for transmission as well as for reception.
+ */
+struct gmtp_skb_cb {
+	__u8 type :5;
+	__u8 ackcode;
+	__u8 reset_code,
+		reset_data[3];
+	__be32 seq;
+};
+
+#define GMTP_SKB_CB(__skb) ((struct gmtp_skb_cb *)&((__skb)->cb[0]))
+
+/**
+ * gmtp_loss_count - Approximate the number of lost data packets in a burst loss
+ * @s1:  last known sequence number before the loss ('hole')
+ * @s2:  first sequence number seen after the 'hole'
+ */
+static inline __be32 gmtp_loss_count(const __be32 s1, const __be32 s2,
+		const __be32 ndp)
+{
+	__be32 delta = s2 - s1;
+
+	WARN_ON(delta < 0);
+	delta -= ndp + 1;
+
+	return delta > 0 ? delta : 0;
+}
+
+/**
+ * gmtp_loss_free - Evaluate condition for data loss from RFC 4340, 7.7.1
+ */
+static inline bool gmtp_loss_free(const __be32 s1, const __be32 s2,
+		const __be32 ndp)
+{
+	return gmtp_loss_count(s1, s2, ndp) == 0;
+}
+
+static inline int gmtp_data_packet(const struct sk_buff *skb)
+{
+	const __u8 type = GMTP_SKB_CB(skb)->type;
+
+	return type == GMTP_PKT_DATA	 ||
+	       type == GMTP_PKT_DATAACK;
+}
+
+/**
+ * struct gmtp_clients - A list of GMTP Clients
+ *
+ * @addr: ip address of client
+ * @port: reception port of client
+ * @id: id of client
+ */
+struct gmtp_client {
+	struct list_head 	list;
+	unsigned int		id;
+	__be32 			addr;
+	__be16 			port;
+	__u8			reporter:1;
+};
+
+/**
+ * Create and add a client in the list of clients
+ */
+static inline void gmtp_list_add_client(unsigned int id, __be32 addr,
+		__be16 port, __u8 reporter, struct list_head *head)
+{
+	struct gmtp_client *new = kmalloc(sizeof(struct gmtp_client), GFP_ATOMIC);
+
+	if(new == NULL) {
+		gmtp_pr_error("Error while creating new gmtp_client...");
+		return;
+	}
+
+	new->id	  = id;
+	new->addr = addr;
+	new->port = port;
+	new->reporter = reporter;
+
+	gmtp_pr_info("New client (%u): ADDR=%pI4@%-5d\n",
+			new->id, &addr, ntohs(port));
+
+	INIT_LIST_HEAD(&new->list);
+	list_add_tail(&new->list, head);
+}
+
+
+#endif /* GMTP_H_ */
+
diff --git a/linux-3.17.1/net/gmtp/hash.c b/linux-3.17.1/net/gmtp/hash.c
new file mode 100644
index 0000000..11419f3
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/hash.c
@@ -0,0 +1,230 @@
+/*
+ * hash.c
+ *
+ *  Created on: 27/02/2015
+ *      Author: mario
+ */
+
+#include <linux/kernel.h>
+#include <linux/slab.h>
+#include <linux/string.h>
+
+#include "hash.h"
+
+struct gmtp_hashtable *gmtp_create_hashtable(unsigned int size)
+{
+	int i;
+	struct gmtp_hashtable *nt;
+
+	gmtp_print_function();
+	gmtp_print_debug("Size of gmtp_hashtable: %d", size);
+
+	if(size < 1)
+		return NULL;
+
+	nt = kmalloc(sizeof(struct gmtp_hashtable), GFP_KERNEL);
+	if(nt == NULL)
+		return NULL;
+
+	nt->table = kmalloc(sizeof(union gmtp_entry) * size, GFP_KERNEL);
+	if(nt->table == NULL)
+		return NULL;
+
+	for(i = 0; i < size; ++i)
+		nt->table[i].client_entry = NULL; /* serve_entry <- null */
+
+	nt->size = size;
+	return nt;
+}
+
+unsigned int gmtp_hash(struct gmtp_hashtable *hashtable, const __u8 *flowname)
+{
+	unsigned int hashval;
+	int i;
+
+	if(hashtable == NULL)
+		return -EINVAL;
+
+	if(flowname == NULL)
+		return -ENOKEY;
+
+	hashval = 0;
+	for(i=0; i<GMTP_FLOWNAME_LEN; ++i)
+		hashval = flowname[i] + (hashval << 5) - hashval;
+
+	return hashval % hashtable->size;
+}
+
+struct gmtp_client_entry *gmtp_lookup_media(
+		struct gmtp_hashtable *hashtable, const __u8 *media)
+{
+	struct gmtp_client_entry *entry;
+	unsigned int hashval;
+
+	hashval = gmtp_hash(hashtable, media);
+
+	/* Error */
+	if(hashval < 0)
+		return NULL;
+
+	entry = hashtable->table[hashval].client_entry;
+	for(; entry != NULL; entry = entry->next)
+		if(memcmp(media, entry->flowname, GMTP_FLOWNAME_LEN) == 0)
+			return entry;
+	return NULL;
+}
+EXPORT_SYMBOL_GPL(gmtp_lookup_media);
+
+int gmtp_add_client_entry(struct gmtp_hashtable *hashtable, __u8 *flowname,
+		__be32 local_addr, __be16 local_port,
+		__be32 channel_addr, __be16 channel_port)
+{
+	struct gmtp_client_entry *new_entry;
+	struct gmtp_client_entry *cur_entry;
+	unsigned int hashval;
+
+	gmtp_print_function();
+
+	/** Primary key at client hashtable is flowname */
+	hashval = gmtp_hash(hashtable, flowname);
+
+	/* Error */
+	if(hashval < 0)
+		return hashval;
+
+	new_entry = kmalloc(sizeof(struct gmtp_client_entry), GFP_ATOMIC);
+	if(new_entry == NULL)
+		return 1;
+
+	cur_entry = gmtp_lookup_media(hashtable, flowname);
+	if(cur_entry != NULL)
+		return 2; /* TODO Media already being transmitted by other
+								server? */
+
+	memcpy(new_entry->flowname, flowname, GMTP_FLOWNAME_LEN);
+
+	new_entry->clients = kmalloc(sizeof(struct gmtp_client), GFP_ATOMIC);
+	if(new_entry->clients == NULL)
+		return 3;
+	INIT_LIST_HEAD(&new_entry->clients->list);
+	gmtp_list_add_client(0, local_addr, local_port, 0,
+			&new_entry->clients->list);
+
+	new_entry->channel_addr = channel_addr;
+	new_entry->channel_port = channel_port;
+
+	new_entry->next = hashtable->table[hashval].client_entry;
+	hashtable->table[hashval].client_entry = new_entry;
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(gmtp_add_client_entry);
+
+void gmtp_del_clients(struct gmtp_client_entry *entry)
+{
+	struct gmtp_client *client, *temp;
+	gmtp_pr_func();
+	list_for_each_entry_safe(client, temp, &(entry->clients->list), list)
+	{
+		list_del(&client->list);
+		kfree(client);
+	}
+}
+
+void gmtp_del_client_entry(struct gmtp_hashtable *hashtable, __u8 *media)
+{
+	struct gmtp_client_entry *entry;
+	int hashval;
+
+	gmtp_print_function();
+
+	hashval = gmtp_hash(hashtable, media);
+
+	if(hashval < 0)
+		return;
+
+	entry = hashtable->table[hashval].client_entry;
+	if(entry != NULL) {
+		gmtp_del_clients(entry);
+		kfree(entry);
+	}
+}
+
+struct gmtp_server_entry *gmtp_lookup_route(
+		struct gmtp_hashtable *hashtable, const __u8 *relayid)
+{
+	struct gmtp_server_entry *entry;
+	unsigned int hashval;
+
+	hashval = gmtp_hash(hashtable, relayid);
+
+	/* Error */
+	if(hashval < 0)
+		return NULL;
+
+	entry = hashtable->table[hashval].server_entry;
+	for(; entry != NULL; entry = entry->next)
+		if(!memcmp(relayid, entry->srelay->relay_id, GMTP_RELAY_ID_LEN))
+			return entry;
+	return NULL;
+}
+EXPORT_SYMBOL_GPL(gmtp_lookup_route);
+
+int gmtp_add_server_entry(struct gmtp_hashtable *hashtable, __u8 *relayid,
+		__u8 *flowname, struct gmtp_hdr_route *route)
+{
+	struct gmtp_server_entry *new_entry;
+	struct gmtp_server_entry *cur_entry;
+	unsigned int hashval;
+	__u8 nrelays = route->nrelays;
+
+	gmtp_print_function();
+
+	hashval = gmtp_hash(hashtable, relayid);
+
+	/* Error */
+	if(hashval < 0)
+		return hashval;
+
+	new_entry = kmalloc(sizeof(struct gmtp_server_entry), GFP_KERNEL);
+	if(new_entry == NULL)
+		return 1;
+
+	/* TODO Relay already registered */
+	cur_entry = gmtp_lookup_route(hashtable, relayid);
+	if(cur_entry != NULL)
+		return 2;
+
+	memcpy(new_entry->flowname, flowname, GMTP_FLOWNAME_LEN);
+	memcpy(&new_entry->route, route, sizeof(*route));
+	new_entry->srelay = &new_entry->route.relay_list[nrelays];
+
+	new_entry->next = hashtable->table[hashval].server_entry;
+	hashtable->table[hashval].server_entry = new_entry;
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(gmtp_add_server_entry);
+
+void kfree_gmtp_hashtable(struct gmtp_hashtable *hashtable)
+{
+	int i;
+	struct gmtp_client_entry *entry, *tmp;
+
+	gmtp_print_function();
+
+	if(hashtable == NULL)
+		return;
+
+	for(i = 0; i < hashtable->size; ++i) {
+		entry = hashtable->table[i].client_entry;
+		while(entry != NULL) {
+			tmp = entry;
+			entry = entry->next;
+			kfree(tmp);
+		}
+	}
+
+	kfree(hashtable->table);
+	kfree(hashtable);
+}
diff --git a/linux-3.17.1/net/gmtp/hash.h b/linux-3.17.1/net/gmtp/hash.h
new file mode 100644
index 0000000..36ca23f
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/hash.h
@@ -0,0 +1,84 @@
+/*
+ * hash.h
+ *
+ *  Created on: 07/05/2015
+ *      Author: wendell
+ */
+
+#ifndef HASH_H_
+#define HASH_H_
+
+#include "gmtp.h"
+
+#define GMTP_HASH_SIZE  16
+
+/**
+ * struct gmtp_client_entry - An entry in client hash table
+ *
+ * flowname[GMTP_FLOWNAME_LEN];
+ * local_addr:	local client IP address
+ * local_port:	local client port
+ * channel_addr: multicast channel to receive media
+ * channel_port: multicast port to receive media
+ */
+/** TODO Test if when a client requests a media in localhost, we get an error */
+struct gmtp_client_entry {
+	struct gmtp_client_entry *next; /** It must be the first */
+
+	__u8 			flowname[GMTP_FLOWNAME_LEN];
+
+	struct gmtp_client 	*clients;
+	__be32 			channel_addr;
+	__be16 			channel_port;
+};
+
+
+/**
+ * struct gmtp_server_entry - An entry in server hash table
+ *
+ * @next: 	the next entry with the same key (hash)
+ * @srelay: 	source of route (route[route->nrelays]).
+ * 			the primary key at table is 'srelay->relayid'
+ * @route:	the route stored in table
+ */
+struct gmtp_server_entry {
+	struct gmtp_server_entry *next; /** It must be the first */
+
+	struct gmtp_relay *srelay;
+	__u8 flowname[GMTP_FLOWNAME_LEN];
+	struct gmtp_hdr_route route;
+};
+
+/**
+ * struct gmtp_hashtable - The GMTP hash table
+ *
+ * @size: 	the max number of entries in hash table (fixed)
+ * @table:	the array of table entries
+ * 			(it can be a client or a server entry)
+ */
+struct gmtp_hashtable {
+	int size;
+	union gmtp_entry {
+		struct gmtp_client_entry *client_entry;
+		struct gmtp_server_entry *server_entry;
+	} *table;
+};
+
+/** Client */
+struct gmtp_hashtable *gmtp_create_hashtable(unsigned int size);
+struct gmtp_client_entry *gmtp_lookup_media(
+		struct gmtp_hashtable *hashtable, const __u8 *media);
+int gmtp_add_client_entry(struct gmtp_hashtable *hashtable, __u8 *flowname,
+		__be32 local_addr, __be16 local_port,
+		__be32 channel_addr, __be16 channel_port);
+void gmtp_del_client_entry(struct gmtp_hashtable *hashtable, __u8 *media);
+
+/** Server */
+struct gmtp_server_entry *gmtp_lookup_route(
+		struct gmtp_hashtable *hashtable, const __u8 *relayid);
+int gmtp_add_server_entry(struct gmtp_hashtable *hashtable, __u8 *relayid,
+		__u8 *flowname, struct gmtp_hdr_route *route);
+
+void kfree_gmtp_hashtable(struct gmtp_hashtable *hashtable);
+
+#endif /* HASH_H_ */
diff --git a/linux-3.17.1/net/gmtp/input.c b/linux-3.17.1/net/gmtp/input.c
new file mode 100644
index 0000000..187cb79
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/input.c
@@ -0,0 +1,540 @@
+#include <linux/kernel.h>
+#include <linux/skbuff.h>
+#include <linux/slab.h>
+#include <linux/types.h>
+#include <linux/gmtp.h>
+#include <linux/net.h>
+#include <linux/security.h>
+#include <linux/igmp.h>
+
+#include <net/inet_common.h>
+#include <net/inet_sock.h>
+#include <net/sock.h>
+
+#include <uapi/linux/gmtp.h>
+#include "gmtp.h"
+#include "mcc.h"
+
+static void gmtp_enqueue_skb(struct sock *sk, struct sk_buff *skb)
+{
+	gmtp_print_function();
+	__skb_pull(skb, gmtp_hdr(skb)->hdrlen);
+	__skb_queue_tail(&sk->sk_receive_queue, skb);
+	skb_set_owner_r(skb, sk);
+	sk->sk_data_ready(sk);
+}
+
+static void gmtp_fin(struct sock *sk, struct sk_buff *skb)
+{
+	gmtp_print_function();
+	sk->sk_shutdown = SHUTDOWN_MASK;
+	sock_set_flag(sk, SOCK_DONE);
+	gmtp_enqueue_skb(sk, skb);
+}
+
+static int gmtp_rcv_close(struct sock *sk, struct sk_buff *skb)
+{
+	int queued = 0;
+
+	gmtp_print_function();
+
+	switch(sk->sk_state) {
+	/*
+	 * We ignore Close when received in one of the following states:
+	 *  - CLOSED		(may be a late or duplicate packet)
+	 *  - PASSIVE_CLOSEREQ	(the peer has sent a CloseReq earlier)
+	 *  - RESPOND		(already handled by dccp_check_req)
+	 */
+	case GMTP_CLOSING:
+		/*
+		 * Simultaneous-close: receiving a Close after sending one. This
+		 * can happen if both client and server perform active-close and
+		 * will result in an endless ping-pong of crossing and retrans-
+		 * mitted Close packets, which only terminates when one of the
+		 * nodes times out (min. 64 seconds). Quicker convergence can be
+		 * achieved when one of the nodes acts as tie-breaker.
+		 * This is ok as both ends are done with data transfer and each
+		 * end is just waiting for the other to acknowledge termination.
+		 */
+		if(gmtp_role_client(sk))
+			break;
+		/* fall through */
+	case GMTP_REQUESTING:
+	case GMTP_ACTIVE_CLOSEREQ:
+		gmtp_send_reset(sk, GMTP_RESET_CODE_CLOSED);
+		gmtp_done(sk);
+		break;
+	case GMTP_OPEN:
+		/* Clear hash table */
+		/* FIXME: Implement gmtp_del_server_entry() */
+		/*if(gmtp_role_client(sk))
+			gmtp_del_client_entry(gmtp_hashtable, gp->flowname);
+		else if(gp->role == GMTP_ROLE_SERVER)
+			gmtp_print_error("FIXME: "
+					"Implement gmtp_del_server_entry()");*/
+
+		/* Give waiting application a chance to read pending data */
+		queued = 1;
+		gmtp_fin(sk, skb);
+		gmtp_set_state(sk, GMTP_PASSIVE_CLOSE);
+		/* fall through */
+	case GMTP_PASSIVE_CLOSE:
+		/*
+		 * Retransmitted Close: we have already enqueued the first one.
+		 */
+		sk_wake_async(sk, SOCK_WAKE_WAITD, POLL_HUP);
+	}
+	return queued;
+}
+
+static int gmtp_rcv_request_sent_state_process(struct sock *sk,
+					       struct sk_buff *skb,
+					       const struct gmtp_hdr *gh,
+					       const unsigned int len)
+{
+	struct gmtp_sock *gp = gmtp_sk(sk);
+
+	gmtp_print_function();
+	gmtp_print_debug("Packet received: %s", gmtp_packet_name(gh->type));
+
+	/*
+	 * FIXME Clients must receive only GMTP_PKT_REQUESTNOTIFY
+	 * Accepting GMTP_PKT_REGISTER_REPLY temporarily
+	*/
+	if (gh->type == GMTP_PKT_REQUESTNOTIFY ||
+			gh->type == GMTP_PKT_REGISTER_REPLY) {
+
+		const struct inet_connection_sock *icsk = inet_csk(sk);
+
+
+		/*** FIXME Check sequence numbers  ***/
+
+		/* Stop the REQUEST timer */
+		inet_csk_clear_xmit_timer(sk, ICSK_TIME_RETRANS);
+		WARN_ON(sk->sk_send_head == NULL);
+		kfree_skb(sk->sk_send_head);
+		sk->sk_send_head = NULL;
+
+		gp->gsr = gp->isr = GMTP_SKB_CB(skb)->seq;
+		gmtp_sync_mss(sk, icsk->icsk_pmtu_cookie);
+
+		/** First reply received and i have a relay */
+		if(gp->relay_rtt == 0 && gh->type == GMTP_PKT_REQUESTNOTIFY)
+			gp->relay_rtt = jiffies_to_msecs(jiffies - gp->req_stamp);
+
+		gp->rx_rtt = (__u32) gh->server_rtt + gp->relay_rtt;
+		gmtp_pr_debug("Relay RTT: %u ms", gp->relay_rtt);
+
+		/*
+		 *    Step 10: Process REQUEST state (second part)
+		 *       If S.state == REQUESTING,
+		 *	  If we get here, P is a valid Response from the
+		 *	      relay, and we should move to
+		 *	      OPEN state.
+		 *
+		 *	 Connect to multicast channel
+		 *
+		 *	  S.state := OPEN
+		 *	  / * Step 12 will send the Ack completing the
+		 *	      three-way handshake * /
+		 */
+		if (gh->type == GMTP_PKT_REQUESTNOTIFY)
+		{
+			struct sock *newsk;
+			struct gmtp_hdr_reqnotify *gh_rnotify;
+			struct ip_mreqn mreq;
+			struct gmtp_client_entry *media_entry;
+
+			gh_rnotify = gmtp_hdr_reqnotify(skb);
+			gmtp_print_debug("Processing RequestNotify packet...");
+			gmtp_print_debug("RequestNotify => Channel: %pI4@%-5d "
+					"| Error: %d",
+					&gh_rnotify->mcst_addr,
+					ntohs(gh_rnotify->mcst_port),
+					gh_rnotify->error_code);
+
+			media_entry = gmtp_lookup_media(gmtp_hashtable,
+					gh->flowname);
+			if(media_entry == NULL)
+				goto out_invalid_packet;
+
+			/* Obtain usec RTT sample from Request (used by CC). */
+			switch(gh_rnotify->error_code) {
+			case GMTP_REQNOTIFY_CODE_OK_REPORTER:
+				gp->role = GMTP_ROLE_REPORTER;
+
+				/* TODO set witch client is a reporter */
+
+			case GMTP_REQNOTIFY_CODE_OK: /* Process packet */
+				break;
+			case GMTP_REQNOTIFY_CODE_WAIT_REPORTER:
+				gp->role = GMTP_ROLE_REPORTER;
+			case GMTP_REQNOTIFY_CODE_WAIT:  /* Do nothing... */
+				return 0;
+			/* FIXME Del entry in table when receiving error... */
+			case GMTP_REQNOTIFY_CODE_ERROR:
+				goto err;
+			default:
+				goto out_invalid_packet;
+			}
+
+			/* Inserting information in client table */
+			media_entry->channel_addr = gh_rnotify->mcst_addr;
+			media_entry->channel_port = gh_rnotify->mcst_port;
+
+			newsk = sk_clone_lock(sk, GFP_ATOMIC);
+			if(newsk == NULL)
+				goto err;
+
+			/* FIXME Validate received multicast channel */
+			newsk->sk_reuse = true;  /* SO_REUSEADDR */
+			newsk->sk_reuseport = true;
+			newsk->sk_rcv_saddr =  htonl(INADDR_ANY);
+
+			mreq.imr_multiaddr.s_addr = gh_rnotify->mcst_addr;
+			mreq.imr_address.s_addr = htonl(INADDR_ANY);
+			/* FIXME Interface index must be filled */
+			mreq.imr_ifindex = 0;
+
+			gmtp_print_debug("Joining the multicast group...");
+			ip_mc_join_group(newsk, &mreq);
+			__inet_hash_nolisten(newsk, NULL);
+			gmtp_set_state(newsk, GMTP_OPEN);
+		}
+
+		gmtp_set_state(sk, GMTP_OPEN);
+
+		if(gp->role == GMTP_ROLE_REPORTER) {
+			int ret = mcc_rx_init(sk);
+			if(ret)
+				goto err;
+		}
+
+		/* Make sure socket is routed, for correct metrics. */
+		icsk->icsk_af_ops->rebuild_header(sk);
+
+		if (!sock_flag(sk, SOCK_DEAD)) {
+			sk->sk_state_change(sk);
+			sk_wake_async(sk, SOCK_WAKE_IO, POLL_OUT);
+		}
+
+		if (sk->sk_write_pending || icsk->icsk_ack.pingpong ||
+		    icsk->icsk_accept_queue.rskq_defer_accept) {
+			/* Save one ACK. Data will be ready after
+			 * several ticks, if write_pending is set.
+			 */
+			__kfree_skb(skb);
+			return 0;
+		}
+		gmtp_send_ack(sk, GMTP_ACK_REQUESTNOTIFY);
+		return -1;
+ 	}
+
+	/* FIXME Treat invalid responses */
+out_invalid_packet:
+ 	/* gmtp_v4_do_rcv will send a reset */
+ 	GMTP_SKB_CB(skb)->reset_code = GMTP_RESET_CODE_PACKET_ERROR;
+ 	return 1;
+
+err:
+ 	/*
+ 	 * We mark this socket as no longer usable, so that the loop in
+ 	 * gmtp_sendmsg() terminates and the application gets notified.
+ 	 */
+	gmtp_del_client_entry(gmtp_hashtable, gp->flowname);
+ 	gmtp_set_state(sk, GMTP_CLOSED);
+ 	sk->sk_err = ECOMM;
+ 	return 1;
+}
+
+/**** FIXME Make GMTP reset codes */
+static u16 gmtp_reset_code_convert(const u8 code)
+{
+	const u16 error_code[] = {
+	[GMTP_RESET_CODE_CLOSED]	     = 0,	/* normal termination */
+	[GMTP_RESET_CODE_UNSPECIFIED]	     = 0,	/* nothing known */
+	[GMTP_RESET_CODE_ABORTED]	     = ECONNRESET,
+
+	[GMTP_RESET_CODE_NO_CONNECTION]	     = ECONNREFUSED,
+	[GMTP_RESET_CODE_CONNECTION_REFUSED] = ECONNREFUSED,
+	[GMTP_RESET_CODE_TOO_BUSY]	     = EUSERS,
+	[GMTP_RESET_CODE_AGGRESSION_PENALTY] = EDQUOT,
+
+	[GMTP_RESET_CODE_PACKET_ERROR]	     = ENOMSG,
+	[GMTP_RESET_CODE_MANDATORY_ERROR]    = EOPNOTSUPP,
+
+	[GMTP_RESET_CODE_BAD_FLOWNAME]       = EBADR, /* Invalid request
+								descriptor */
+	};
+
+	return code >= GMTP_MAX_RESET_CODES ? 0 : error_code[code];
+}
+
+static void gmtp_rcv_reset(struct sock *sk, struct sk_buff *skb)
+{
+	u16 err = gmtp_reset_code_convert(gmtp_hdr_reset(skb)->reset_code);
+
+	gmtp_print_function();
+
+	sk->sk_err = err;
+
+	/*Queue the equivalent of TCP fin so that gmtp_recvmsg exits the loop */
+	gmtp_fin(sk, skb);
+
+	if (err && !sock_flag(sk, SOCK_DEAD))
+		sk_wake_async(sk, SOCK_WAKE_IO, POLL_ERR);
+	gmtp_time_wait(sk, GMTP_TIME_WAIT, 0);
+}
+
+static void gmtp_deliver_input_to_mcc(struct sock *sk, struct sk_buff *skb)
+{
+	/*const struct gmtp_sock *gp = gmtp_sk(sk);*/
+
+	gmtp_print_function();
+
+	/* Don't deliver to RX MCC when node has shut down read end. */
+	if (!(sk->sk_shutdown & RCV_SHUTDOWN))
+		mcc_rx_packet_recv(sk, skb);
+	/*
+	 * FIXME Until the TX queue has been drained, we can not honour SHUT_WR,
+	 * since we need received feedback as input to adjust congestion control.
+	 */
+/*	if (sk->sk_write_queue.qlen > 0 || !(sk->sk_shutdown & SEND_SHUTDOWN))
+		mcc_tx_packet_recv(sk, skb);*/
+}
+
+
+/* TODO Implement check sequence number */
+static int gmtp_check_seqno(struct sock *sk, struct sk_buff *skb)
+{
+	gmtp_print_function();
+	return 0;
+}
+
+static int __gmtp_rcv_established(struct sock *sk, struct sk_buff *skb,
+		const struct gmtp_hdr *gh, const unsigned int len)
+{
+	struct gmtp_sock *gp = gmtp_sk(sk);
+
+	gmtp_print_function();
+
+	switch (gh->type) {
+	case GMTP_PKT_DATAACK:
+	case GMTP_PKT_DATA:
+		if(gmtp_role_client(sk))
+			gp->rx_rtt = (__u32) gh->server_rtt + gp->relay_rtt;
+		gmtp_enqueue_skb(sk, skb);
+		return 0;
+	case GMTP_PKT_ACK:
+		goto discard;
+	case GMTP_PKT_RESET:
+		/*
+		 *  Step 9: Process Reset
+		 *	If P.type == Reset,
+		 *		Tear down connection
+		 *		S.state := TIMEWAIT
+		 *		Set TIMEWAIT timer
+		 *		Drop packet and return
+		 */
+		gmtp_rcv_reset(sk, skb);
+		return 0;
+	case GMTP_PKT_CLOSE:
+		if (gmtp_rcv_close(sk, skb))
+			return 0;
+		goto discard;
+	}
+discard:
+	__kfree_skb(skb);
+	return 0;
+}
+
+int gmtp_rcv_established(struct sock *sk, struct sk_buff *skb,
+			 const struct gmtp_hdr *gh, const unsigned int len)
+{
+	struct gmtp_sock *gp = gmtp_sk(sk);
+
+	gmtp_print_function();
+
+	/* Check sequence numbers... */
+	if(gmtp_check_seqno(sk, skb))
+		goto discard;
+
+	if(gp->role == GMTP_ROLE_REPORTER)
+		gmtp_deliver_input_to_mcc(sk, skb);
+
+	gp->gsr = gh->seq;
+
+	return __gmtp_rcv_established(sk, skb, gh, len);
+discard:
+	__kfree_skb(skb);
+	return 0;
+}
+EXPORT_SYMBOL_GPL(gmtp_rcv_established);
+
+int gmtp_rcv_route_notify(struct sock *sk, struct sk_buff *skb,
+			 const struct gmtp_hdr *gh)
+{
+	struct gmtp_hdr_route *route = gmtp_hdr_route(skb);
+	struct gmtp_relay *relay;
+	__u8 nrelays = route->nrelays;
+
+	gmtp_print_function();
+	print_route(route);
+
+	if(nrelays <= 0)
+		goto out;
+
+	relay = &route->relay_list[nrelays-1];
+
+	gmtp_add_server_entry(gmtp_hashtable, relay->relay_id,
+			(__u8*)gh->flowname, route);
+out:
+	return 0;
+}
+EXPORT_SYMBOL_GPL(gmtp_rcv_route_notify);
+
+static int gmtp_rcv_request_rcv_state_process(struct sock *sk,
+						   struct sk_buff *skb,
+						   const struct gmtp_hdr *gh,
+						   const unsigned int len)
+{
+	struct inet_connection_sock *icsk = inet_csk(sk);
+	__u32 elapsed = 0;
+	int queued = 0;
+
+	gmtp_print_function();
+
+	switch (gh->type) {
+	case GMTP_PKT_RESET:
+		inet_csk_clear_xmit_timer(sk, ICSK_TIME_DACK);
+		break;
+	case GMTP_PKT_DATA:
+		if (sk->sk_state == GMTP_REQUEST_RECV)
+			break;
+	/* ROUTE_NOTIFY is a special ack */
+	case GMTP_PKT_ROUTE_NOTIFY:
+	case GMTP_PKT_DATAACK:
+	case GMTP_PKT_ACK:
+		elapsed = jiffies_to_msecs(jiffies) - gmtp_sk(sk)->reply_stamp;
+		gmtp_sk(sk)->tx_rtt = elapsed;
+		gmtp_print_debug("RTT: %u ms", gmtp_sk(sk)->tx_rtt);
+
+		inet_csk_clear_xmit_timer(sk, ICSK_TIME_DACK);
+
+		icsk->icsk_af_ops->rebuild_header(sk);
+		smp_mb();
+		gmtp_set_state(sk, GMTP_OPEN);
+		sk->sk_state_change(sk);
+		sk_wake_async(sk, SOCK_WAKE_IO, POLL_OUT);
+
+		if(gh->type == GMTP_PKT_ROUTE_NOTIFY)
+			gmtp_rcv_route_notify(sk, skb, gh);
+
+		if (gh->type == GMTP_PKT_DATAACK)
+		{
+			__gmtp_rcv_established(sk, skb, gh, len);
+			queued = 1;
+		}
+
+		break;
+	}
+	return queued;
+}
+EXPORT_SYMBOL_GPL(gmtp_rcv_request_rcv_state_process);
+
+int gmtp_rcv_state_process(struct sock *sk, struct sk_buff *skb,
+			   struct gmtp_hdr *gh, unsigned int len)
+{
+	struct gmtp_skb_cb *gcb = GMTP_SKB_CB(skb);
+	int queued = 0;
+
+	gmtp_print_function();
+	gmtp_print_debug("State: %s | Packet: %s", gmtp_state_name(sk->sk_state),
+			gmtp_packet_name(gh->type));
+
+	/*
+	 *  Step 3: Process LISTEN state
+	 *
+	 *  If S.state == LISTEN,
+	 *
+	 *  If P.type == Request
+	 *  (* Generate a new socket and switch to that socket *)
+	 *	      Set S := new socket for this port pair
+	 *	      S.state = GMTP_REQUEST_RECV
+	 *	      Continue with S.state == REQ_RECV
+	 *	      (* A REQUEST_REPLY packet will be generated in Step 11 (GMTP) *)
+	 *	 Otherwise,
+	 *	      Generate Reset(No Connection) unless P.type == Reset
+	 *	      Drop packet and return
+	 */
+
+	if (sk->sk_state == GMTP_LISTEN)  {
+
+		if (gh->type == GMTP_PKT_REQUEST || gh->type == GMTP_PKT_REGISTER) {
+			if (inet_csk(sk)->icsk_af_ops->conn_request(sk, skb) < 0)
+				return 1;
+			goto discard;
+		}
+		if (gh->type == GMTP_PKT_RESET)
+			goto discard;
+
+		/* Caller (gmtp_v4_do_rcv) will send Reset */
+		gcb->reset_code = GMTP_RESET_CODE_NO_CONNECTION;
+		return 1;
+	} else if (sk->sk_state == GMTP_CLOSED) {
+		gcb->reset_code = GMTP_RESET_CODE_NO_CONNECTION;
+		return 1;
+	}
+
+	/* Step 6: Check sequence numbers (omitted in LISTEN/REQUEST state) */
+	if (sk->sk_state != GMTP_REQUESTING && gmtp_check_seqno(sk, skb))
+		goto discard;
+
+	/*
+	 *   Step 7: Check for unexpected packet types
+	 */
+	if ((!gmtp_role_client(sk) && gh->type == GMTP_PKT_REQUESTNOTIFY) ||
+		(gmtp_role_client(sk) && gh->type == GMTP_PKT_REQUEST) ||
+		(sk->sk_state == GMTP_REQUEST_RECV && gh->type == GMTP_PKT_DATA))
+	{
+		gmtp_print_error("Unexpected packet type");
+		goto discard;
+	}
+
+	/*
+	 *  Step 9: Process Reset
+	 *	If P.type == Reset,
+	 *		Tear down connection
+	 *		S.state := TIMEWAIT
+	 *		Set TIMEWAIT timer
+	 *		Drop packet and return
+	 */
+	if (gh->type == GMTP_PKT_RESET) {
+		gmtp_rcv_reset(sk, skb);
+		return 0;
+	} else if (gh->type == GMTP_PKT_CLOSE) {		/* Step 14 */
+		if (gmtp_rcv_close(sk, skb))
+			return 0;
+		goto discard;
+	}
+
+	switch (sk->sk_state) {
+	case GMTP_REQUESTING: /* client */
+		queued = gmtp_rcv_request_sent_state_process(sk, skb, gh, len);
+		if (queued >= 0)
+			return queued;
+
+		__kfree_skb(skb);
+		return 0;
+
+	case GMTP_REQUEST_RECV: /* Request or Register was received. */
+		queued = gmtp_rcv_request_rcv_state_process(sk, skb, gh, len);
+		break;
+	}
+
+discard:
+	__kfree_skb(skb);
+	return 0;
+
+}
+EXPORT_SYMBOL_GPL(gmtp_rcv_state_process);
diff --git a/linux-3.17.1/net/gmtp/ipv4.c b/linux-3.17.1/net/gmtp/ipv4.c
new file mode 100644
index 0000000..def7bcf
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/ipv4.c
@@ -0,0 +1,1052 @@
+#include <linux/init.h>
+#include <linux/module.h>
+
+#include <linux/err.h>
+#include <linux/errno.h>
+#include <linux/types.h>
+
+#include <net/inet_hashtables.h>
+#include <net/inet_common.h>
+#include <net/inet_connection_sock.h>
+#include <net/icmp.h>
+#include <net/ip.h>
+#include <net/protocol.h>
+#include <net/request_sock.h>
+#include <net/sock.h>
+#include <net/xfrm.h>
+#include <net/secure_seq.h>
+
+#include <uapi/linux/gmtp.h>
+#include <linux/gmtp.h>
+#include "gmtp.h"
+
+extern int sysctl_ip_nonlocal_bind __read_mostly;
+extern struct inet_timewait_death_row gmtp_death_row;
+
+static inline __u32 gmtp_v4_init_sequence(const struct sk_buff *skb) {
+	gmtp_print_function();
+	return secure_gmtp_sequence_number(ip_hdr(skb)->daddr,
+			ip_hdr(skb)->saddr,
+			gmtp_hdr(skb)->sport,
+			gmtp_hdr(skb)->dport);
+}
+
+int gmtp_v4_connect(struct sock *sk, struct sockaddr *uaddr, int addr_len) {
+
+	const struct sockaddr_in *usin = (struct sockaddr_in *) uaddr;
+	struct inet_sock *inet = inet_sk(sk);
+	struct gmtp_sock *gp = gmtp_sk(sk);
+	__be16 orig_sport, orig_dport;
+	__be32 daddr, nexthop;
+	struct flowi4 *fl4;
+	struct rtable *rt;
+	int err;
+	struct ip_options_rcu *inet_opt;
+
+	gmtp_print_function();
+
+	gp->role = GMTP_ROLE_CLIENT;
+
+	if (addr_len < sizeof(struct sockaddr_in))
+		return -EINVAL;
+
+	if (usin->sin_family != AF_INET)
+		return -EAFNOSUPPORT;
+
+	nexthop = daddr = usin->sin_addr.s_addr;
+
+	inet_opt = rcu_dereference_protected(inet->inet_opt,
+			sock_owned_by_user(sk));
+	if (inet_opt != NULL && inet_opt->opt.srr) {
+		if (daddr == 0)
+			return -EINVAL;
+		nexthop = inet_opt->opt.faddr;
+	}
+
+	orig_sport = inet->inet_sport;
+	orig_dport = usin->sin_port;
+	fl4 = &inet->cork.fl.u.ip4;
+
+	rt = ip_route_connect(fl4, nexthop, inet->inet_saddr, RT_CONN_FLAGS(sk),
+			sk->sk_bound_dev_if,
+			IPPROTO_GMTP, orig_sport, orig_dport, sk);
+	if (IS_ERR(rt))
+		return PTR_ERR(rt);
+
+	if (rt->rt_flags & (RTCF_MULTICAST | RTCF_BROADCAST)) {
+		ip_rt_put(rt);
+		return -ENETUNREACH;
+	}
+
+	if (inet_opt == NULL || !inet_opt->opt.srr)
+		daddr = fl4->daddr;
+
+	if (inet->inet_saddr == 0)
+		inet->inet_saddr = fl4->saddr;
+	inet->inet_rcv_saddr = inet->inet_saddr;
+
+	inet->inet_dport = usin->sin_port;
+	inet->inet_daddr = daddr;
+
+	inet_csk(sk)->icsk_ext_hdr_len = 0;
+	if (inet_opt)
+		inet_csk(sk)->icsk_ext_hdr_len = inet_opt->opt.optlen;
+	/*
+	 * Socket identity is still unknown (sport may be zero).
+	 * However we set state to GMTP_REQUESTING and not releasing socket
+	 * lock select source port, enter ourselves into the hash tables and
+	 * complete initialization after this.
+	 */
+	gmtp_set_state(sk, GMTP_REQUESTING);
+	err = inet_hash_connect(&gmtp_death_row, sk);
+	if (err != 0)
+		goto failure;
+
+	rt = ip_route_newports(fl4, rt, orig_sport, orig_dport,
+			inet->inet_sport, inet->inet_dport, sk);
+
+	if (IS_ERR(rt)) {
+		err = PTR_ERR(rt);
+		rt = NULL;
+		goto failure;
+	}
+	/* OK, now commit destination to socket.  */
+	sk_setup_caps(sk, &rt->dst);
+
+	gp->iss = secure_gmtp_sequence_number(inet->inet_saddr,
+			inet->inet_daddr, inet->inet_sport, inet->inet_dport);
+	gmtp_print_debug("gp->iss: %u", gp->iss);
+	inet->inet_id = gp->iss ^ jiffies;
+
+	err = gmtp_connect(sk);
+	rt = NULL;
+	if (err != 0)
+		goto failure;
+
+out:
+	return err;
+failure:
+	/*
+	 * This unhashes the socket and releases the local port, if necessary.
+	 */
+	gmtp_set_state(sk, GMTP_CLOSED);
+	ip_rt_put(rt);
+	sk->sk_route_caps = 0;
+	inet->inet_dport = 0;
+	goto out;
+}
+EXPORT_SYMBOL_GPL(gmtp_v4_connect);
+
+static void gmtp_do_redirect(struct sk_buff *skb, struct sock *sk)
+{
+	struct dst_entry *dst = __sk_dst_check(sk, 0);
+
+	if (dst)
+		dst->ops->redirect(dst, sk, skb);
+}
+
+/**
+ * This routine is called by the ICMP module when it gets some sort of error
+ * condition.
+ */
+void gmtp_v4_err(struct sk_buff *skb, u32 info)
+{
+	const struct iphdr *iph = (struct iphdr *)skb->data;
+	const u8 offset = iph->ihl << 2;
+	const struct gmtp_hdr *gh = (struct gmtp_hdr *)(skb->data + offset);
+	struct gmtp_sock *gp;
+	struct inet_sock *inet;
+	const int type = icmp_hdr(skb)->type;
+	const int code = icmp_hdr(skb)->code;
+	struct sock *sk;
+	__be32 seq;
+	int err;
+	struct net *net = dev_net(skb->dev);
+
+	struct request_sock *req, **prev;
+
+	gmtp_print_function();
+
+	if(skb->len < offset + sizeof(*gh)) {
+		ICMP_INC_STATS_BH(net, ICMP_MIB_INERRORS);
+		return;
+	}
+
+	sk = inet_lookup(net, &gmtp_inet_hashinfo, iph->daddr, gh->dport,
+			iph->saddr, gh->sport, inet_iif(skb));
+	if(sk == NULL) {
+		ICMP_INC_STATS_BH(net, ICMP_MIB_INERRORS);
+		return;
+	}
+
+	if(sk->sk_state == GMTP_TIME_WAIT) {
+		inet_twsk_put(inet_twsk(sk));
+		return;
+	}
+
+	bh_lock_sock(sk);
+	/* If too many ICMPs get dropped on busy
+	 * servers this needs to be solved differently.
+	 */
+	if(sock_owned_by_user(sk))
+		NET_INC_STATS_BH(net, LINUX_MIB_LOCKDROPPEDICMPS);
+
+	if(sk->sk_state == GMTP_CLOSED)
+		goto out;
+
+	gp = gmtp_sk(sk);
+	seq = gh->seq;
+
+	if((1 << sk->sk_state) & ~(GMTPF_REQUESTING | GMTPF_LISTEN)) {
+		NET_INC_STATS_BH(net, LINUX_MIB_OUTOFWINDOWICMPS);
+		goto out;
+	}
+
+	switch(type) {
+	case ICMP_REDIRECT:
+		gmtp_do_redirect(skb, sk);
+		goto out;
+	case ICMP_SOURCE_QUENCH:
+		/* Just silently ignore these. */
+		goto out;
+	case ICMP_PARAMETERPROB:
+		err = EPROTO;
+		break;
+	case ICMP_DEST_UNREACH:
+		if(code > NR_ICMP_UNREACH)
+			goto out;
+
+		if(code == ICMP_FRAG_NEEDED) { /* PMTU discovery (RFC1191) */
+			if(!sock_owned_by_user(sk))
+			/*FIXME gmtp_do_pmtu_discovery(sk, iph, info);*/;
+			goto out;
+		}
+
+		err = icmp_err_convert[code].errno;
+		break;
+	case ICMP_TIME_EXCEEDED:
+		err = EHOSTUNREACH;
+		break;
+	default:
+		goto out;
+	}
+
+	switch(sk->sk_state) {
+
+	case GMTP_LISTEN:
+		if(sock_owned_by_user(sk))
+			goto out;
+		req = inet_csk_search_req(sk, &prev, gh->dport, iph->daddr,
+				iph->saddr);
+		if(!req)
+			goto out;
+
+		/*
+		 * ICMPs are not backlogged, hence we cannot get an established
+		 * socket here.
+		 */
+		WARN_ON(req->sk);
+		if(!(seq >= gmtp_rsk(req)->iss && seq <= gmtp_rsk(req)->gss)) {
+			NET_INC_STATS_BH(net, LINUX_MIB_OUTOFWINDOWICMPS);
+			goto out;
+		}
+		/*
+		 * Still in RESPOND, just remove it silently.
+		 * There is no good way to pass the error to the newly
+		 * created socket, and POSIX does not want network
+		 * errors returned from accept().
+		 */
+		inet_csk_reqsk_queue_drop(sk, req, prev);
+		goto out;
+
+	case GMTP_REQUESTING:
+	case GMTP_REQUEST_RECV:
+		if(!sock_owned_by_user(sk)) {
+			sk->sk_err = err;
+			sk->sk_error_report(sk);
+			gmtp_done(sk);
+		} else
+			sk->sk_err_soft = err;
+		goto out;
+	}
+
+	/* If we've already connected we will keep trying
+	 * until we time out, or the user gives up.
+	 */
+	inet = inet_sk(sk);
+	if(!sock_owned_by_user(sk) && inet->recverr) {
+		sk->sk_err = err;
+		sk->sk_error_report(sk);
+	} else /* Only an error on timeout */
+		sk->sk_err_soft = err;
+out:
+	bh_unlock_sock(sk);
+	sock_put(sk);
+}
+EXPORT_SYMBOL_GPL(gmtp_v4_err);
+
+static struct dst_entry* gmtp_v4_route_skb(struct net *net, struct sock *sk,
+		struct sk_buff *skb) {
+	struct rtable *rt;
+	const struct iphdr *iph = ip_hdr(skb);
+	struct flowi4 fl4 = {
+			.flowi4_oif = inet_iif(skb),
+			.daddr = iph->saddr,
+			.saddr = iph->daddr,
+			.flowi4_tos = RT_CONN_FLAGS(sk),
+			.flowi4_proto = sk->sk_protocol,
+			.fl4_sport = gmtp_hdr(skb)->dport,
+			.fl4_dport = gmtp_hdr(skb)->sport,
+	};
+
+	gmtp_print_function();
+
+	security_skb_classify_flow(skb, flowi4_to_flowi(&fl4));
+	rt = ip_route_output_flow(net, &fl4, sk);
+	if (IS_ERR(rt)) {
+		IP_INC_STATS_BH(net, IPSTATS_MIB_OUTNOROUTES);
+		return NULL;
+	}
+
+	return &rt->dst;
+}
+
+static int gmtp_v4_send_register_reply(struct sock *sk,
+		struct request_sock *req) {
+
+	int err = -1;
+	struct sk_buff *skb;
+	struct dst_entry *dst;
+	struct flowi4 fl4;
+
+	gmtp_print_function();
+
+	dst = inet_csk_route_req(sk, &fl4, req);
+	if (dst == NULL)
+		goto out;
+
+	skb = gmtp_make_register_reply(sk, dst, req);
+	if (skb != NULL) {
+		const struct inet_request_sock *ireq = inet_rsk(req);
+		gmtp_sk(sk)->reply_stamp = jiffies_to_msecs(jiffies);
+
+		err = ip_build_and_send_pkt(skb, sk, ireq->ir_loc_addr,
+				ireq->ir_rmt_addr, ireq->opt);
+		err = net_xmit_eval(err);
+	}
+
+out:
+	gmtp_print_debug("%s returned: %d", __FUNCTION__, err);
+	dst_release(dst);
+	return err;
+}
+
+static void gmtp_v4_ctl_send_reset(struct sock *sk, struct sk_buff *rxskb) {
+	int err;
+	const struct iphdr *rxiph;
+	struct sk_buff *skb;
+	struct dst_entry *dst;
+	struct net *net = dev_net(skb_dst(rxskb)->dev);
+	struct sock *ctl_sk = net->gmtp.v4_ctl_sk;
+
+	gmtp_print_function();
+
+	/* Never send a reset in response to a reset. */
+	if (gmtp_hdr(rxskb)->type == GMTP_PKT_RESET)
+		return;
+
+	if (skb_rtable(rxskb)->rt_type != RTN_LOCAL)
+		return;
+
+	dst = gmtp_v4_route_skb(net, ctl_sk, rxskb);
+	if (dst == NULL)
+		return;
+
+	skb = gmtp_ctl_make_reset(ctl_sk, rxskb);
+	if (skb == NULL)
+		goto out;
+
+	rxiph = ip_hdr(rxskb);
+	skb_dst_set(skb, dst_clone(dst));
+
+	bh_lock_sock(ctl_sk);
+	err = ip_build_and_send_pkt(skb, ctl_sk, rxiph->daddr, rxiph->saddr, NULL);
+	bh_unlock_sock(ctl_sk);
+
+	if (net_xmit_eval(err) == 0) {
+/*		DCCP_INC_STATS_BH(DCCP_MIB_OUTSEGS);
+		DCCP_INC_STATS_BH(DCCP_MIB_OUTRSTS);*/
+	}
+
+out:
+	dst_release(dst);
+}
+
+#define AF_INET_FAMILY(fam) 1
+
+static struct sock *gmtp_v4_hnd_req(struct sock *sk, struct sk_buff *skb) {
+	const struct gmtp_hdr *gh = gmtp_hdr(skb);
+	const struct iphdr *iph = ip_hdr(skb);
+	struct sock *nsk;
+	struct request_sock **prev;
+
+	/* FIXME req is always null... */
+	/* Find possible connection requests. */
+	struct request_sock *req = inet_csk_search_req(sk, &prev, gh->sport,
+			iph->saddr, iph->daddr);
+
+	gmtp_print_function();
+
+	if (req != NULL)
+		return gmtp_check_req(sk, skb, req, prev);
+
+	/* FIXME nsk is always null... */
+	nsk = inet_lookup_established(sock_net(sk), &gmtp_inet_hashinfo, iph->saddr,
+			gh->sport, iph->daddr, gh->dport, inet_iif(skb));
+
+	gmtp_print_function();
+
+	if (nsk != NULL) {
+		if (nsk->sk_state != GMTP_TIME_WAIT) {
+			bh_lock_sock(nsk);
+			return nsk;
+		}
+		inet_twsk_put(inet_twsk(nsk));
+		return NULL;
+	}
+
+	return sk;
+}
+
+
+int gmtp_v4_do_rcv(struct sock *sk, struct sk_buff *skb) {
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+
+	gmtp_print_function();
+	gmtp_print_debug("sk_state: %s (%d)",
+					gmtp_state_name(sk->sk_state),
+					sk->sk_state);
+
+	if (sk->sk_state == GMTP_OPEN) { /* Fast path */
+
+		if (gmtp_rcv_established(sk, skb, gh, skb->len))
+			goto reset;
+		return 0;
+	}
+
+	/*
+	 * Step 3: Process LISTEN state
+	 *
+	 * If P.type == Request
+	 *     Generate a new socket and switch to that socket.
+	 *     Set S := new socket for this port pair
+	 *	      S.state = RESPOND //TODO change to Request-Reply
+	 *	  A Response packet will be generated in Step 11 *)
+	 *  Otherwise,
+	 *	      Generate Reset(No Connection) unless P.type == Reset
+	 *	      Drop packet and return
+	 */
+	if (sk->sk_state == GMTP_LISTEN) {
+
+		struct sock *nsk;
+
+		nsk = gmtp_v4_hnd_req(sk, skb);
+		if (nsk == NULL)
+			goto discard;
+
+		/* TODO Treat it */
+		if (nsk != sk) {
+			if (gmtp_child_process(sk, nsk, skb))
+				goto reset;
+			return 0;
+		}
+	}
+
+	if (gmtp_rcv_state_process(sk, skb, gh, skb->len))
+		goto reset;
+
+	return 0;
+
+reset:
+	gmtp_v4_ctl_send_reset(sk, skb);
+discard:
+	kfree_skb(skb);
+	return 0;
+
+}
+EXPORT_SYMBOL_GPL(gmtp_v4_do_rcv);
+
+
+/**
+ *	gmtp_check_packet  -  check for malformed packets
+ *	Packets that fail these checks are ignored and do not receive Resets.
+ */
+static int gmtp_check_packet(struct sk_buff *skb)
+{
+
+	const struct gmtp_hdr *gh = gmtp_hdr(skb);
+
+	/* TODO Verify each packet */
+	gmtp_print_function();
+
+	/** Accept multicast only for Data packets */
+	if (skb->pkt_type != PACKET_HOST && gh->type != GMTP_PKT_DATA)
+		return 1;
+
+	/* If the packet is shorter than sizeof(struct gmtp_hdr),
+	 * drop packet and return */
+	if (!pskb_may_pull(skb, sizeof(struct gmtp_hdr))) {
+		gmtp_print_warning("pskb_may_pull failed\n");
+		return 1;
+	}
+
+	/* If P.type is not understood, drop packet and return */
+	if (gh->type >= GMTP_PKT_INVALID) {
+		gmtp_print_warning("invalid packet type\n");
+		return 1;
+	}
+
+	/*
+	 * If P.hdrlen is too small for packet type, drop packet and return
+	 */
+	if (gh->hdrlen < gmtp_hdr_len(skb) / sizeof(u32)) {
+		gmtp_print_debug("P.hdrlen(%u) too small\n", gh->hdrlen);
+		return 1;
+	}
+
+	/* If header checksum is incorrect, drop packet and return.
+	 * (This step is completed in the AF-dependent functions.) */
+	skb->csum = skb_checksum(skb, 0, skb->len, 0);
+
+	return 0;
+}
+
+static int gmtp_v4_sk_receive_skb(struct sk_buff *skb, struct sock *sk)
+{
+	const struct gmtp_hdr *gh = gmtp_hdr(skb);
+
+	if(sk == NULL) {
+		gmtp_print_error("failed to look up flow ID in table and "
+				"get corresponding socket\n");
+		goto no_gmtp_socket;
+	}
+
+	/*
+	 * Step 2:
+	 *	... or S.state == TIMEWAIT,
+	 *		Generate Reset(No Connection) unless P.type == Reset
+	 *		Drop packet and return
+	 */
+	if(sk->sk_state == GMTP_TIME_WAIT) {
+		inet_twsk_put(inet_twsk(sk));
+		goto no_gmtp_socket;
+	}
+
+	if(!xfrm4_policy_check(sk, XFRM_POLICY_IN, skb))
+		goto discard_and_relse;
+
+	nf_reset(skb);
+
+	return sk_receive_skb(sk, skb, 1);
+
+no_gmtp_socket:
+
+	if(!xfrm4_policy_check(NULL, XFRM_POLICY_IN, skb))
+		goto discard_it;
+	/*
+	 * Step 2:
+	 *	If no socket ...
+	 *		Generate Reset(No Connection) unless P.type == Reset
+	 *		Drop packet and return
+	 */
+	if(gh->type != GMTP_PKT_RESET) {
+		GMTP_SKB_CB(skb)->reset_code =
+				GMTP_RESET_CODE_NO_CONNECTION;
+		gmtp_v4_ctl_send_reset(sk, skb);
+	}
+
+discard_it:
+	kfree_skb(skb);
+	return 0;
+
+discard_and_relse:
+	sock_put(sk);
+	goto discard_it;
+
+}
+
+/* this is called when real data arrives */
+static int gmtp_v4_rcv(struct sk_buff *skb)
+{
+	const struct gmtp_hdr *gh;
+	const struct iphdr *iph;
+	struct sock *sk;
+	struct gmtp_client_entry *media_entry;
+
+	unsigned char flowname[GMTP_FLOWNAME_STR_LEN];
+
+	gmtp_print_function();
+
+	/* Step 1: Check header basics */
+	if (gmtp_check_packet(skb))
+		goto discard_it;
+
+	gh = gmtp_hdr(skb);
+	iph = ip_hdr(skb);
+
+	GMTP_SKB_CB(skb)->seq = gh->seq;
+	GMTP_SKB_CB(skb)->type = gh->type;
+
+	flowname_str(flowname, gh->flowname);
+	gmtp_print_debug("%s(%d) src=%pI4@%-5d dst=%pI4@%-5d seq=%llu "
+			"RTT=%u ms, transm_r=%u, flow=%s",
+			gmtp_packet_name(gh->type), gh->type,
+			&iph->saddr, ntohs(gh->sport),
+			&iph->daddr, ntohs(gh->dport),
+			(unsigned long long) GMTP_SKB_CB(skb)->seq,
+			gh->server_rtt, gh->transm_r,
+			flowname);
+
+	if(skb->pkt_type == PACKET_MULTICAST) {
+
+		struct gmtp_client *tmp;
+		pr_info("Multicast packet\n");
+		media_entry = gmtp_lookup_media(gmtp_hashtable, gh->flowname);
+		if(media_entry == NULL) {
+			gmtp_print_error("Failed to look up media flow in "
+					"table");
+			goto discard_it;
+		}
+
+		list_for_each_entry(tmp, &(media_entry->clients->list), list)
+		{
+
+			gmtp_print_debug("Lookup: src=%pI4@%-5d dst=%pI4@%-5d",
+					&iph->saddr, ntohs(gh->sport),
+					&tmp->addr, ntohs(tmp->port));
+
+			sk = __inet_lookup(dev_net(skb_dst(skb)->dev),
+					&gmtp_inet_hashinfo, iph->saddr,
+					gh->sport, tmp->addr, tmp->port,
+					inet_iif(skb));
+
+			/** FIXME Check errors at receive skb... */
+			gmtp_v4_sk_receive_skb(skb_copy(skb, GFP_ATOMIC), sk);
+		}
+		/** We made a copy of skb for each client. We can discard it */
+		goto discard_it;
+
+	} else {
+		/* Normal packet...
+		 * Look up flow ID in table and get corresponding socket
+		 */
+		pr_info("Unicast packet\n");
+		sk = __inet_lookup_skb(&gmtp_inet_hashinfo, skb, gh->sport,
+				gh->dport);
+
+		return gmtp_v4_sk_receive_skb(skb, sk);
+	}
+
+discard_it:
+	kfree_skb(skb);
+	return 0;
+}
+EXPORT_SYMBOL_GPL(gmtp_v4_rcv);
+
+static void gmtp_v4_reqsk_destructor(struct request_sock *req) {
+	gmtp_print_function();
+	kfree(inet_rsk(req)->opt);
+}
+
+void gmtp_syn_ack_timeout(struct sock *sk, struct request_sock *req) {
+	gmtp_print_function();
+}
+EXPORT_SYMBOL(gmtp_syn_ack_timeout);
+
+static struct request_sock_ops gmtp_request_sock_ops __read_mostly = {
+	.family = PF_INET,
+	.obj_size = sizeof(struct gmtp_request_sock),
+	.rtx_syn_ack = gmtp_v4_send_register_reply,
+	.send_ack = gmtp_reqsk_send_ack,
+	.destructor = gmtp_v4_reqsk_destructor,
+	.send_reset = gmtp_v4_ctl_send_reset,
+	.syn_ack_timeout = gmtp_syn_ack_timeout,
+};
+
+/*
+ * Called when a client sends a REQUEST
+ */
+int gmtp_v4_conn_request(struct sock *sk, struct sk_buff *skb) {
+	struct inet_request_sock *ireq;
+
+	struct gmtp_sock *gp = gmtp_sk(sk);
+	struct gmtp_hdr *gh = gmtp_hdr(skb);
+
+	struct request_sock *req;
+	struct gmtp_request_sock *greq;
+	struct gmtp_skb_cb *gcb = GMTP_SKB_CB(skb);
+
+	gmtp_print_function();
+
+	/* Never answer to GMTP_PKT_REQUESTs send to broadcast or multicast */
+	if (skb_rtable(skb)->rt_flags & (RTCF_BROADCAST | RTCF_MULTICAST))
+		return 0; /* discard, don't send a reset here */
+
+	/*
+	 * TW buckets are converted to open requests without
+	 * limitations, they conserve resources and peer is
+	 * evidently real one.
+	 */
+	gcb->reset_code = GMTP_RESET_CODE_TOO_BUSY;
+	if (inet_csk_reqsk_queue_is_full(sk))
+		goto drop;
+
+	/*
+	 * Accept backlog is full. If we have already queued enough
+	 * of warm entries in syn queue, drop request. It is better than
+	 * clogging syn queue with openreqs with exponentially increasing
+	 * timeout.
+	 */
+	if (sk_acceptq_is_full(sk) && inet_csk_reqsk_queue_young(sk) > 1)
+		goto drop;
+
+	req = inet_reqsk_alloc(&gmtp_request_sock_ops);
+	if (req == NULL)
+		goto drop;
+
+	if (gmtp_reqsk_init(req, gmtp_sk(sk), skb))
+		goto drop_and_free;
+
+	if (security_inet_conn_request(sk, skb, req))
+		goto drop_and_free;
+
+	ireq = inet_rsk(req);
+	ireq->ir_loc_addr = ip_hdr(skb)->daddr;
+	ireq->ir_rmt_addr = ip_hdr(skb)->saddr;
+
+	/*
+	 * Step 3: Process LISTEN state
+	 */
+	greq = gmtp_rsk(req);
+	greq->isr	   = gcb->seq;
+	greq->gsr	   = greq->isr;
+	greq->iss	   = greq->isr;
+	greq->gss     = greq->iss;
+	memcpy(greq->flowname, gp->flowname, GMTP_FLOWNAME_LEN);
+	if(memcmp(gh->flowname, gp->flowname, GMTP_FLOWNAME_LEN))
+		goto reset;
+
+	if (gmtp_v4_send_register_reply(sk, req))
+		goto drop_and_free;
+
+	gmtp_print_debug("Calling gmtp_csk_reqsk_queue_hash_add(...)");
+	inet_csk_reqsk_queue_hash_add(sk, req, GMTP_TIMEOUT_INIT);
+
+	return 0;
+
+reset:
+	gcb->reset_code = GMTP_RESET_CODE_BAD_FLOWNAME;
+	gmtp_v4_ctl_send_reset(sk, skb);
+drop_and_free:
+	reqsk_free(req);
+drop:
+	return 0;
+}
+EXPORT_SYMBOL_GPL(gmtp_v4_conn_request);
+
+
+/*
+ * The three way handshake has completed - we got a valid ACK or DATAACK -
+ * now create the new socket.
+ *
+ * This is the equivalent of TCP's tcp_v4_syn_recv_sock
+ */
+struct sock *gmtp_v4_request_recv_sock(struct sock *sk, struct sk_buff *skb,
+		struct request_sock *req, struct dst_entry *dst) {
+	struct inet_request_sock *ireq;
+	struct inet_sock *newinet;
+	struct sock *newsk;
+
+	gmtp_print_function();
+
+	if (sk_acceptq_is_full(sk))
+		goto exit_overflow;
+
+	newsk = gmtp_create_openreq_child(sk, req, skb);
+	if (newsk == NULL)
+		goto exit_nonewsk;
+
+	newinet = inet_sk(newsk);
+	ireq = inet_rsk(req);
+	newinet->inet_daddr = ireq->ir_rmt_addr;
+	newinet->inet_rcv_saddr = ireq->ir_loc_addr;
+	newinet->inet_saddr = ireq->ir_loc_addr;
+	newinet->inet_opt = ireq->opt;
+	ireq->opt = NULL;
+	newinet->mc_index = inet_iif(skb);
+	newinet->mc_ttl = ip_hdr(skb)->ttl;
+	newinet->inet_id = jiffies;
+
+	if(dst == NULL
+			&& (dst = inet_csk_route_child_sock(sk, newsk, req))
+					== NULL)
+		goto put_and_exit;
+
+	sk_setup_caps(newsk, dst);
+
+	gmtp_sync_mss(newsk, dst_mtu(dst));
+
+	if (__inet_inherit_port(sk, newsk) < 0)
+		goto put_and_exit;
+	__inet_hash_nolisten(newsk, NULL);
+
+	return newsk;
+
+exit_overflow:
+	NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENOVERFLOWS);
+exit_nonewsk:
+	dst_release(dst);
+exit:
+	NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS);
+	return NULL;
+put_and_exit:
+	inet_csk_prepare_forced_close(newsk);
+	gmtp_done(newsk);
+	goto exit;
+}
+EXPORT_SYMBOL_GPL(gmtp_v4_request_recv_sock);
+
+void gmtp_v4_send_check(struct sock *sk, struct sk_buff *skb) {
+	gmtp_print_warning("GMTP has no ckecksum!");
+}
+EXPORT_SYMBOL_GPL(gmtp_v4_send_check);
+
+static const struct inet_connection_sock_af_ops gmtp_ipv4_af_ops = {
+	.queue_xmit = ip_queue_xmit,
+	.send_check = gmtp_v4_send_check, /* GMTP has no checksum... */
+	.rebuild_header = inet_sk_rebuild_header,
+	.conn_request =	gmtp_v4_conn_request,
+	.syn_recv_sock = gmtp_v4_request_recv_sock,
+	.net_header_len = sizeof(struct iphdr),
+	.setsockopt = ip_setsockopt,
+	.getsockopt = ip_getsockopt,
+	.addr2sockaddr = inet_csk_addr2sockaddr,
+	.sockaddr_len = sizeof(struct sockaddr_in),
+	.bind_conflict = inet_csk_bind_conflict,
+#ifdef CONFIG_COMPAT
+	.compat_setsockopt = compat_ip_setsockopt,
+	.compat_getsockopt = compat_ip_getsockopt,
+#endif
+};
+
+static int gmtp_v4_init_sock(struct sock *sk) {
+
+/*	static __u8 gmtp_v4_ctl_sock_initialized;*/
+	int err = 0;
+
+	gmtp_print_function();
+
+	err = gmtp_init_sock(sk);
+	if (err == 0) {
+/*		if (unlikely(!gmtp_v4_ctl_sock_initialized))
+			gmtp_v4_ctl_sock_initialized = 1;*/
+
+		/* Setting AF options */
+		inet_csk(sk)->icsk_af_ops = &gmtp_ipv4_af_ops;
+	}
+
+	return err;
+}
+
+/* Networking protocol blocks we attach to sockets.
+ *
+ * socket layer -> transport layer interface (struct proto)
+ * transport -> network interface is defined by (struct inet_proto)
+ */
+static struct proto gmtp_v4_prot = {
+	.name = "GMTP",
+	.owner = THIS_MODULE,
+	.close = gmtp_close,
+	.connect = gmtp_v4_connect,
+	.disconnect = gmtp_disconnect,
+	.ioctl = gmtp_ioctl,
+	.init = gmtp_v4_init_sock,
+	.setsockopt		= gmtp_setsockopt,
+	.getsockopt		= gmtp_getsockopt,
+	.sendmsg		= gmtp_sendmsg,
+	.recvmsg = gmtp_recvmsg,
+	.backlog_rcv = gmtp_v4_do_rcv,
+	.hash =	inet_hash,
+	.unhash = inet_unhash,
+	.accept = inet_csk_accept,
+	.get_port = inet_csk_get_port,
+	.shutdown		= gmtp_shutdown,
+	.destroy		= gmtp_destroy_sock,
+	.orphan_count		= &gmtp_orphan_count,
+	.max_header = GMTP_MAX_HDR_LEN,
+	.obj_size = sizeof(struct gmtp_sock),
+	.slab_flags = SLAB_DESTROY_BY_RCU,
+	.rsk_prot = &gmtp_request_sock_ops,
+	.h.hashinfo = &gmtp_inet_hashinfo,
+};
+
+/**
+ * We define the gmtp_protocol object (net_protocol object) and add it with the
+ * inet_add_protocol() method.
+ * This sets the gmtp_protocol object to be an element in the global
+ * protocols array (inet_protos).
+ *
+ * @handler is called when real data arrives
+ *
+ */
+static const struct net_protocol gmtp_protocol = {
+	.handler = gmtp_v4_rcv,
+	.err_handler = gmtp_v4_err,
+	.no_policy = 1,
+	.netns_ok = 1, /* mandatory */
+	.icmp_strict_tag_validation = 1,
+};
+
+/**
+ * In the socket creation routine, protocol implementer specifies a
+ * 'struct proto_ops' (/include/linux/net.h) instance.
+ * The socket layer calls function members of this proto_ops instance before the
+ * protocol specific functions are called.
+ *
+ * socket layer -> transport layer interface (struct proto)
+ * transport -> network interface is defined by (struct inet_proto)
+ */
+static const struct proto_ops inet_gmtp_ops = {
+	.family = PF_INET,
+	.owner = THIS_MODULE,
+	.release = inet_release,
+	.bind = inet_bind,
+	.connect = inet_stream_connect,
+	.socketpair = sock_no_socketpair,
+	.accept = inet_accept,
+	.getname = inet_getname,
+/*	.poll		   = dccp_poll, */
+	.ioctl = inet_ioctl,
+	.listen = inet_gmtp_listen,
+	.shutdown = inet_shutdown,
+	.setsockopt = sock_common_setsockopt,
+	.getsockopt = sock_common_getsockopt,
+	.sendmsg = inet_sendmsg,
+	.recvmsg = sock_common_recvmsg,
+	.mmap = sock_no_mmap,
+	.sendpage = sock_no_sendpage,
+};
+
+/**
+ * Describes the PF_INET protocols
+ * Defines the different SOCK types for PF_INET
+ * Ex: SOCK_STREAM (TCP), SOCK_DGRAM (UDP), SOCK_RAW
+ *
+ * inet_register_protosw() is the function called to register inet sockets.
+ * There is a static array of type inet_protosw inetsw_array[] which contains
+ * information about all the inet socket types.
+ *
+ * @list: This is a pointer to the next node in the list.
+ * @type: This is the socket type and is a key to search entry for a given
+ * socket and type in inetsw[] array.
+ * @protocol: This is again a key to find an entry for the socket type in the
+ * inetsw[] array. This is an L4 protocol number (L4 Transport layer protocol).
+ * @prot: This is a pointer to struct proto.
+ * ops: This is a pointer to the structure of type 'proto_ops'.
+ */
+static struct inet_protosw gmtp_protosw = {
+	.type = SOCK_GMTP,
+	.protocol =  IPPROTO_GMTP,
+	.prot = &gmtp_v4_prot,
+	.ops = &inet_gmtp_ops,
+	.flags = INET_PROTOSW_ICSK,
+};
+
+static int __net_init gmtp_v4_init_net(struct net *net) {
+	gmtp_print_function();
+
+	if (gmtp_inet_hashinfo.bhash == NULL)
+		return -ESOCKTNOSUPPORT;
+
+	return inet_ctl_sock_create(&net->gmtp.v4_ctl_sk, PF_INET, SOCK_GMTP,
+	IPPROTO_GMTP, net);
+}
+
+static void __net_exit gmtp_v4_exit_net(struct net *net) {
+	gmtp_print_function();
+	inet_ctl_sock_destroy(net->gmtp.v4_ctl_sk);
+}
+
+static struct pernet_operations gmtp_v4_ops = {
+	.init = gmtp_v4_init_net,
+	.exit = gmtp_v4_exit_net,
+};
+
+/*************************************************************/
+static int __init gmtp_v4_init(void) {
+	int err = 0;
+
+	gmtp_print_function();
+	gmtp_print_debug("GMTP IPv4 init!");
+
+	inet_hashinfo_init(&gmtp_inet_hashinfo);
+
+	/* PROTOCOL REGISTER */
+	gmtp_print_debug("GMTP IPv4 proto_register");
+	err = proto_register(&gmtp_v4_prot, 1);
+	if (err != 0)
+		goto out;
+
+	gmtp_print_debug("GMTP IPv4 inet_add_protocol");
+	err = inet_add_protocol(&gmtp_protocol, IPPROTO_GMTP);
+	if (err != 0)
+		goto out_proto_unregister;
+
+	gmtp_print_debug("GMTP IPv4 inet_register_protosw");
+	inet_register_protosw(&gmtp_protosw);
+
+	err = register_pernet_subsys(&gmtp_v4_ops);
+	if (err)
+		goto out_destroy_ctl_sock;
+
+	return err;
+
+out_destroy_ctl_sock:
+	gmtp_print_error("inet_unregister_protosw GMTP IPv4");
+	inet_unregister_protosw(&gmtp_protosw);
+	gmtp_print_error("inet_del_protocol GMTP IPv4");
+	inet_del_protocol(&gmtp_protocol, IPPROTO_GMTP);
+	return err;
+
+out_proto_unregister:
+	gmtp_print_error("proto_unregister GMTP IPv4");
+	proto_unregister(&gmtp_v4_prot);
+
+out:
+	return err;
+}
+
+static void __exit gmtp_v4_exit(void) {
+
+	gmtp_print_function();
+	gmtp_print_debug("GMTP IPv4 exit!");
+
+	unregister_pernet_subsys(&gmtp_v4_ops);
+	inet_unregister_protosw(&gmtp_protosw);
+	inet_del_protocol(&gmtp_protocol, IPPROTO_GMTP);
+	proto_unregister(&gmtp_v4_prot);
+}
+
+module_init(gmtp_v4_init);
+module_exit(gmtp_v4_exit);
+
+MODULE_ALIAS_NET_PF_PROTO_TYPE(PF_INET, IPPROTO_GMTP, SOCK_GMTP);
+MODULE_ALIAS_NET_PF_PROTO_TYPE(PF_INET, 0, SOCK_GMTP);
+
+MODULE_LICENSE("GPL");
+MODULE_AUTHOR("Joilnen Leite <joilnen@gmail.com>");
+MODULE_AUTHOR("Mário André Menezes <mariomenezescosta@gmail.com>");
+MODULE_AUTHOR("Wendell Silva Soares <wss@ic.ufal.br>");
+MODULE_DESCRIPTION("GMTP - Global Media Transmission Protocol");
+
+
diff --git a/linux-3.17.1/net/gmtp/mcc.h b/linux-3.17.1/net/gmtp/mcc.h
new file mode 100644
index 0000000..dd7e062
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/mcc.h
@@ -0,0 +1,22 @@
+/*
+ * mcc.h
+ *
+ *  Created on: 13/04/2015
+ *      Author: wendell
+ */
+
+#ifndef MCC_H_
+#define MCC_H_
+
+#include <linux/gmtp.h>
+
+#include "mcc/mcc_proto.h"
+
+int mcc_lib_init(void);
+void mcc_lib_exit(void);
+
+void mcc_rx_packet_recv(struct sock *sk, struct sk_buff *skb);
+int mcc_rx_init(struct sock *sk);
+void mcc_rx_exit(struct sock *sk);
+
+#endif /* MCC_H_ */
diff --git a/linux-3.17.1/net/gmtp/mcc/loss_interval.c b/linux-3.17.1/net/gmtp/mcc/loss_interval.c
new file mode 100644
index 0000000..e3b4987
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/mcc/loss_interval.c
@@ -0,0 +1,194 @@
+/*
+ *  Copyright (c) 2007   The University of Aberdeen, Scotland, UK
+ *  Copyright (c) 2005-7 The University of Waikato, Hamilton, New Zealand.
+ *  Copyright (c) 2005-7 Ian McDonald <ian.mcdonald@jandi.co.nz>
+ *  Copyright (c) 2005 Arnaldo Carvalho de Melo <acme@conectiva.com.br>
+ *
+ *  Adapted to GMTP by
+ *  Copyright (c) 2015   Federal University of Alagoas, Maceió, Brazil
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ */
+#include <net/sock.h>
+#include <linux/gmtp.h>
+
+#include "mcc_proto.h"
+
+static struct kmem_cache  *tfrc_lh_slab  __read_mostly;
+/* Loss Interval weights from [RFC 3448, 5.4], scaled by 10 */
+static const int tfrc_lh_weights[NINTERVAL] = { 10, 10, 10, 10, 8, 6, 4, 2 };
+
+/* implements LIFO semantics on the array */
+static inline u8 LIH_INDEX(const u8 ctr)
+{
+	return LIH_SIZE - 1 - (ctr % LIH_SIZE);
+}
+
+/* the `counter' index always points at the next entry to be populated */
+static inline struct mcc_loss_interval *mcc_lh_peek(struct mcc_loss_hist *lh)
+{
+	return lh->counter ? lh->ring[LIH_INDEX(lh->counter - 1)] : NULL;
+}
+
+/* given i with 0 <= i <= k, return I_i as per the rfc3448bis notation */
+static inline u32 mcc_lh_get_interval(struct mcc_loss_hist *lh, const u8 i)
+{
+	BUG_ON(i >= lh->counter);
+	return lh->ring[LIH_INDEX(lh->counter - i - 1)]->li_length;
+}
+
+/*
+ *	On-demand allocation and de-allocation of entries
+ */
+static struct mcc_loss_interval *mcc_lh_demand_next(struct mcc_loss_hist *lh)
+{
+	if (lh->ring[LIH_INDEX(lh->counter)] == NULL)
+		lh->ring[LIH_INDEX(lh->counter)] = kmem_cache_alloc(tfrc_lh_slab,
+								    GFP_ATOMIC);
+	return lh->ring[LIH_INDEX(lh->counter)];
+}
+
+void mcc_lh_cleanup(struct mcc_loss_hist *lh)
+{
+	if (!mcc_lh_is_initialised(lh))
+		return;
+
+	for (lh->counter = 0; lh->counter < LIH_SIZE; lh->counter++)
+		if (lh->ring[LIH_INDEX(lh->counter)] != NULL) {
+			kmem_cache_free(tfrc_lh_slab,
+					lh->ring[LIH_INDEX(lh->counter)]);
+			lh->ring[LIH_INDEX(lh->counter)] = NULL;
+		}
+}
+
+static void mcc_lh_calc_i_mean(struct mcc_loss_hist *lh)
+{
+	u32 i_i, i_tot0 = 0, i_tot1 = 0, w_tot = 0;
+	int i, k = mcc_lh_length(lh) - 1; /* k is as in rfc3448bis, 5.4 */
+
+	if (k <= 0)
+		return;
+
+	for (i = 0; i <= k; i++) {
+		i_i = mcc_lh_get_interval(lh, i);
+
+		if (i < k) {
+			i_tot0 += i_i * tfrc_lh_weights[i];
+			w_tot  += tfrc_lh_weights[i];
+		}
+		if (i > 0)
+			i_tot1 += i_i * tfrc_lh_weights[i-1];
+	}
+
+	lh->i_mean = max(i_tot0, i_tot1) / w_tot;
+}
+
+/**
+ * mcc_lh_update_i_mean  -  Update the `open' loss interval I_0
+ * For recomputing p: returns `true' if p > p_prev  <=>  1/p < 1/p_prev
+ */
+u8 mcc_lh_update_i_mean(struct mcc_loss_hist *lh, struct sk_buff *skb)
+{
+	struct mcc_loss_interval *cur = mcc_lh_peek(lh);
+	u32 old_i_mean = lh->i_mean;
+	s64 len;
+
+	if (cur == NULL)			/* not initialised */
+		return 0;
+
+	len = GMTP_SKB_CB(skb)->seq - cur->li_seqno + 1;
+
+	if (len - (s64)cur->li_length <= 0)	/* duplicate or reordered */
+		return 0;
+
+	if(gmtp_hdr(skb)->type == GMTP_PKT_DATA) {
+		if((gmtp_hdr_data(skb)->tstamp - cur->li_tstamp) > cur->li_rtt)
+			/*
+			 * Implements TFRC:
+			 * If a packet S (skb) exists whose seqno comes `after'
+			 * the one starting the current loss interval (cur) and
+			 * if the distance from C(cur) to C(S) is greater than RTT,
+			 * consider all subsequent packets as belonging to a
+			 * new loss interval.
+			 */
+			cur->li_is_closed = 1;
+	}
+
+	if (mcc_lh_length(lh) == 1)		/* due to RFC 3448, 6.3.1 */
+		return 0;
+
+	cur->li_length = len;
+	mcc_lh_calc_i_mean(lh);
+
+	return lh->i_mean < old_i_mean;
+}
+
+/* Determine if `new_loss' does begin a new loss interval [RFC 4342, 10.2] */
+static inline u8 mcc_lh_is_new_loss(struct mcc_loss_interval *cur,
+				     struct mcc_rx_hist_entry *new_loss)
+{
+	return	(new_loss->seqno - cur->li_seqno) > 0 &&
+		(cur->li_is_closed ||
+		(new_loss->tx_tstamp - cur->li_tstamp) > (__u64) cur->li_rtt);
+}
+
+/**
+ * mcc_lh_interval_add  -  Insert new record into the Loss Interval database
+ * @lh:		   Loss Interval database
+ * @rh:		   Receive history containing a fresh loss event
+ * @calc_first_li: Caller-dependent routine to compute length of first interval
+ * @sk:		   Used by @calc_first_li in caller-specific way (subtyping)
+ *
+ * Updates I_mean and returns 1 if a new interval has in fact been added to @lh.
+ */
+int mcc_lh_interval_add(struct mcc_loss_hist *lh, struct mcc_rx_hist *rh,
+			 u32 (*calc_first_li)(struct sock *), struct sock *sk)
+{
+	struct mcc_loss_interval *cur = mcc_lh_peek(lh), *new;
+
+	if (cur != NULL && !mcc_lh_is_new_loss(cur, mcc_rx_hist_loss_prev(rh)))
+		return 0;
+
+	new = mcc_lh_demand_next(lh);
+	if (unlikely(new == NULL)) {
+		gmtp_print_error("Cannot allocate/add loss record.");
+		return 0;
+	}
+
+	new->li_seqno	  = mcc_rx_hist_loss_prev(rh)->seqno;
+	new->li_tstamp 	  = mcc_rx_hist_loss_prev(rh)->tx_tstamp;
+	new->li_rtt 	  = gmtp_sk(sk)->rx_rtt;
+	new->li_is_closed = 0;
+
+	if (++lh->counter == 1)
+		lh->i_mean = new->li_length = (*calc_first_li)(sk);
+	else {
+		cur->li_length = new->li_seqno - cur->li_seqno;
+		new->li_length = mcc_rx_hist_last_rcv(rh)->seqno -
+				new->li_seqno + 1;
+		if (lh->counter > (2*LIH_SIZE))
+			lh->counter -= LIH_SIZE;
+
+		mcc_lh_calc_i_mean(lh);
+	}
+	return 1;
+}
+
+int __init mcc_li_init(void)
+{
+	tfrc_lh_slab = kmem_cache_create("mcc_li_hist",
+					 sizeof(struct mcc_loss_interval), 0,
+					 SLAB_HWCACHE_ALIGN, NULL);
+	return tfrc_lh_slab == NULL ? -ENOBUFS : 0;
+}
+
+void mcc_li_exit(void)
+{
+	if (tfrc_lh_slab != NULL) {
+		kmem_cache_destroy(tfrc_lh_slab);
+		tfrc_lh_slab = NULL;
+	}
+}
diff --git a/linux-3.17.1/net/gmtp/mcc/loss_interval.h b/linux-3.17.1/net/gmtp/mcc/loss_interval.h
new file mode 100644
index 0000000..9bd20b7
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/mcc/loss_interval.h
@@ -0,0 +1,60 @@
+#ifndef _MCC_LI_HIST
+#define _MCC_LI_HIST_
+/*
+ *  Copyright (c) 2007   The University of Aberdeen, Scotland, UK
+ *  Copyright (c) 2005-7 The University of Waikato, Hamilton, New Zealand.
+ *  Copyright (c) 2005-7 Ian McDonald <ian.mcdonald@jandi.co.nz>
+ *  Copyright (c) 2005 Arnaldo Carvalho de Melo <acme@conectiva.com.br>
+ *
+ *  Adapted to GMTP by
+ *  Copyright (c) 2015   Federal University of Alagoas, Maceió, Brazil
+ *
+ *  This program is free software; you can redistribute it and/or modify it
+ *  under the terms of the GNU General Public License as published by the Free
+ *  Software Foundation; either version 2 of the License, or (at your option)
+ *  any later version.
+ */
+#include <linux/ktime.h>
+#include <linux/list.h>
+#include <linux/slab.h>
+
+#include <linux/gmtp.h>
+
+/**
+ *  mcc_loss_interval  -  Loss history record for TFRC-based protocols
+ *  @li_seqno:		Highest received seqno before the start of loss
+ *  @li_is_closed:	Whether @li_seqno is older than 1 RTT
+ *  @li_length:		Loss interval sequence length
+ *  @li_tstamp:		Time stamp of packet with seqno.
+ */
+struct mcc_loss_interval {
+	__be32		 li_seqno;
+	__be32		 li_is_closed:1;
+	__u32		 li_length;
+	__u32		 li_tstamp;
+	__u32		 li_rtt;
+};
+
+static inline void mcc_lh_init(struct mcc_loss_hist *lh)
+{
+	memset(lh, 0, sizeof(struct mcc_loss_hist));
+}
+
+static inline u8 mcc_lh_is_initialised(struct mcc_loss_hist *lh)
+{
+	return lh->counter > 0;
+}
+
+static inline u8 mcc_lh_length(struct mcc_loss_hist *lh)
+{
+	return min(lh->counter, (u8)LIH_SIZE);
+}
+
+struct mcc_rx_hist;
+
+int mcc_lh_interval_add(struct mcc_loss_hist *, struct mcc_rx_hist *,
+			 u32 (*first_li)(struct sock *), struct sock *);
+u8 mcc_lh_update_i_mean(struct mcc_loss_hist *lh, struct sk_buff *);
+void mcc_lh_cleanup(struct mcc_loss_hist *lh);
+
+#endif /* _MCC_LI_HIST */
diff --git a/linux-3.17.1/net/gmtp/mcc/mcc_equation.c b/linux-3.17.1/net/gmtp/mcc/mcc_equation.c
new file mode 100644
index 0000000..6ead8dc
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/mcc/mcc_equation.c
@@ -0,0 +1,713 @@
+/*
+ *  Copyright (c) 2005 The University of Waikato, Hamilton, New Zealand.
+ *  Copyright (c) 2005 Ian McDonald <ian.mcdonald@jandi.co.nz>
+ *  Copyright (c) 2005 Arnaldo Carvalho de Melo <acme@conectiva.com.br>
+ *  Copyright (c) 2003 Nils-Erik Mattsson, Joacim Haggmark, Magnus Erixzon
+ *
+ *  Adapted to GMTP by
+ *  Copyright (c) 2015   Federal University of Alagoas, Maceió, Brazil
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ */
+
+#include <linux/module.h>
+#include "mcc_proto.h"
+#include "../gmtp.h"
+
+#define MCC_CALC_X_ARRSIZE 500
+#define MCC_CALC_X_SPLIT   50000	/* 0.05 * 1000000, details below */
+#define MCC_SMALLEST_P	    (MCC_CALC_X_SPLIT/MCC_CALC_X_ARRSIZE)
+
+/*
+  TFRC TCP Reno Throughput Equation Lookup Table for f(p)
+
+  The following two-column lookup table implements a part of the TCP throughput
+  equation from [RFC 3448, sec. 3.1]:
+
+				     s
+  X_calc  =  --------------------------------------------------------------
+	     R * sqrt(2*b*p/3) + (3 * t_RTO * sqrt(3*b*p/8) * (p + 32*p^3))
+
+  Where:
+	X      is the transmit rate in bytes/second
+	s      is the packet size in bytes
+	R      is the round trip time in seconds
+	p      is the loss event rate, between 0 and 1.0, of the number of loss
+		      events as a fraction of the number of packets transmitted
+	t_RTO  is the TCP retransmission timeout value in seconds
+	b      is the number of packets acknowledged by a single TCP ACK
+
+  We can assume that b = 1 and t_RTO is 4 * R. The equation now becomes:
+
+				     s
+  X_calc  =  -------------------------------------------------------
+	     R * sqrt(p*2/3) + (12 * R * sqrt(p*3/8) * (p + 32*p^3))
+
+  which we can break down into:
+
+		      s
+	X_calc  =  ---------
+		    R * f(p)
+
+  where f(p) is given for 0 < p <= 1 by:
+
+	f(p)  =  sqrt(2*p/3) + 12 * sqrt(3*p/8) *  (p + 32*p^3)
+
+  Since this is kernel code, floating-point arithmetic is avoided in favour of
+  integer arithmetic. This means that nearly all fractional parameters are
+  scaled by 1000000:
+    * the parameters p and R
+    * the return result f(p)
+  The lookup table therefore actually tabulates the following function g(q):
+
+	g(q)  =  1000000 * f(q/1000000)
+
+  Hence, when p <= 1, q must be less than or equal to 1000000. To achieve finer
+  granularity for the practically more relevant case of small values of p (up to
+  5%), the second column is used; the first one ranges up to 100%.  This split
+  corresponds to the value of q = TFRC_CALC_X_SPLIT. At the same time this also
+  determines the smallest resolution possible with this lookup table:
+
+    TFRC_SMALLEST_P   =  TFRC_CALC_X_SPLIT / TFRC_CALC_X_ARRSIZE
+
+  The entire table is generated by:
+    for(i=0; i < TFRC_CALC_X_ARRSIZE; i++) {
+	lookup[i][0]  =  g((i+1) * 1000000/TFRC_CALC_X_ARRSIZE);
+	lookup[i][1]  =  g((i+1) * TFRC_CALC_X_SPLIT/TFRC_CALC_X_ARRSIZE);
+    }
+
+  With the given configuration, we have, with M = TFRC_CALC_X_ARRSIZE-1,
+    lookup[0][0]  =  g(1000000/(M+1))		= 1000000 * f(0.2%)
+    lookup[M][0]  =  g(1000000)			= 1000000 * f(100%)
+    lookup[0][1]  =  g(TFRC_SMALLEST_P)		= 1000000 * f(0.01%)
+    lookup[M][1]  =  g(TFRC_CALC_X_SPLIT)	= 1000000 * f(5%)
+
+  In summary, the two columns represent f(p) for the following ranges:
+    * The first column is for   0.002  <= p <= 1.0
+    * The second column is for  0.0001 <= p <= 0.05
+  Where the columns overlap, the second (finer-grained) is given preference,
+  i.e. the first column is used only for p >= 0.05.
+ */
+static const u32 mcc_calc_x_lookup[MCC_CALC_X_ARRSIZE][2] = {
+	{     37172,   8172 },
+	{     53499,  11567 },
+	{     66664,  14180 },
+	{     78298,  16388 },
+	{     89021,  18339 },
+	{     99147,  20108 },
+	{    108858,  21738 },
+	{    118273,  23260 },
+	{    127474,  24693 },
+	{    136520,  26052 },
+	{    145456,  27348 },
+	{    154316,  28589 },
+	{    163130,  29783 },
+	{    171919,  30935 },
+	{    180704,  32049 },
+	{    189502,  33130 },
+	{    198328,  34180 },
+	{    207194,  35202 },
+	{    216114,  36198 },
+	{    225097,  37172 },
+	{    234153,  38123 },
+	{    243294,  39055 },
+	{    252527,  39968 },
+	{    261861,  40864 },
+	{    271305,  41743 },
+	{    280866,  42607 },
+	{    290553,  43457 },
+	{    300372,  44293 },
+	{    310333,  45117 },
+	{    320441,  45929 },
+	{    330705,  46729 },
+	{    341131,  47518 },
+	{    351728,  48297 },
+	{    362501,  49066 },
+	{    373460,  49826 },
+	{    384609,  50577 },
+	{    395958,  51320 },
+	{    407513,  52054 },
+	{    419281,  52780 },
+	{    431270,  53499 },
+	{    443487,  54211 },
+	{    455940,  54916 },
+	{    468635,  55614 },
+	{    481581,  56306 },
+	{    494785,  56991 },
+	{    508254,  57671 },
+	{    521996,  58345 },
+	{    536019,  59014 },
+	{    550331,  59677 },
+	{    564939,  60335 },
+	{    579851,  60988 },
+	{    595075,  61636 },
+	{    610619,  62279 },
+	{    626491,  62918 },
+	{    642700,  63553 },
+	{    659253,  64183 },
+	{    676158,  64809 },
+	{    693424,  65431 },
+	{    711060,  66050 },
+	{    729073,  66664 },
+	{    747472,  67275 },
+	{    766266,  67882 },
+	{    785464,  68486 },
+	{    805073,  69087 },
+	{    825103,  69684 },
+	{    845562,  70278 },
+	{    866460,  70868 },
+	{    887805,  71456 },
+	{    909606,  72041 },
+	{    931873,  72623 },
+	{    954614,  73202 },
+	{    977839,  73778 },
+	{   1001557,  74352 },
+	{   1025777,  74923 },
+	{   1050508,  75492 },
+	{   1075761,  76058 },
+	{   1101544,  76621 },
+	{   1127867,  77183 },
+	{   1154739,  77741 },
+	{   1182172,  78298 },
+	{   1210173,  78852 },
+	{   1238753,  79405 },
+	{   1267922,  79955 },
+	{   1297689,  80503 },
+	{   1328066,  81049 },
+	{   1359060,  81593 },
+	{   1390684,  82135 },
+	{   1422947,  82675 },
+	{   1455859,  83213 },
+	{   1489430,  83750 },
+	{   1523671,  84284 },
+	{   1558593,  84817 },
+	{   1594205,  85348 },
+	{   1630518,  85878 },
+	{   1667543,  86406 },
+	{   1705290,  86932 },
+	{   1743770,  87457 },
+	{   1782994,  87980 },
+	{   1822973,  88501 },
+	{   1863717,  89021 },
+	{   1905237,  89540 },
+	{   1947545,  90057 },
+	{   1990650,  90573 },
+	{   2034566,  91087 },
+	{   2079301,  91600 },
+	{   2124869,  92111 },
+	{   2171279,  92622 },
+	{   2218543,  93131 },
+	{   2266673,  93639 },
+	{   2315680,  94145 },
+	{   2365575,  94650 },
+	{   2416371,  95154 },
+	{   2468077,  95657 },
+	{   2520707,  96159 },
+	{   2574271,  96660 },
+	{   2628782,  97159 },
+	{   2684250,  97658 },
+	{   2740689,  98155 },
+	{   2798110,  98651 },
+	{   2856524,  99147 },
+	{   2915944,  99641 },
+	{   2976382, 100134 },
+	{   3037850, 100626 },
+	{   3100360, 101117 },
+	{   3163924, 101608 },
+	{   3228554, 102097 },
+	{   3294263, 102586 },
+	{   3361063, 103073 },
+	{   3428966, 103560 },
+	{   3497984, 104045 },
+	{   3568131, 104530 },
+	{   3639419, 105014 },
+	{   3711860, 105498 },
+	{   3785467, 105980 },
+	{   3860253, 106462 },
+	{   3936229, 106942 },
+	{   4013410, 107422 },
+	{   4091808, 107902 },
+	{   4171435, 108380 },
+	{   4252306, 108858 },
+	{   4334431, 109335 },
+	{   4417825, 109811 },
+	{   4502501, 110287 },
+	{   4588472, 110762 },
+	{   4675750, 111236 },
+	{   4764349, 111709 },
+	{   4854283, 112182 },
+	{   4945564, 112654 },
+	{   5038206, 113126 },
+	{   5132223, 113597 },
+	{   5227627, 114067 },
+	{   5324432, 114537 },
+	{   5422652, 115006 },
+	{   5522299, 115474 },
+	{   5623389, 115942 },
+	{   5725934, 116409 },
+	{   5829948, 116876 },
+	{   5935446, 117342 },
+	{   6042439, 117808 },
+	{   6150943, 118273 },
+	{   6260972, 118738 },
+	{   6372538, 119202 },
+	{   6485657, 119665 },
+	{   6600342, 120128 },
+	{   6716607, 120591 },
+	{   6834467, 121053 },
+	{   6953935, 121514 },
+	{   7075025, 121976 },
+	{   7197752, 122436 },
+	{   7322131, 122896 },
+	{   7448175, 123356 },
+	{   7575898, 123815 },
+	{   7705316, 124274 },
+	{   7836442, 124733 },
+	{   7969291, 125191 },
+	{   8103877, 125648 },
+	{   8240216, 126105 },
+	{   8378321, 126562 },
+	{   8518208, 127018 },
+	{   8659890, 127474 },
+	{   8803384, 127930 },
+	{   8948702, 128385 },
+	{   9095861, 128840 },
+	{   9244875, 129294 },
+	{   9395760, 129748 },
+	{   9548529, 130202 },
+	{   9703198, 130655 },
+	{   9859782, 131108 },
+	{  10018296, 131561 },
+	{  10178755, 132014 },
+	{  10341174, 132466 },
+	{  10505569, 132917 },
+	{  10671954, 133369 },
+	{  10840345, 133820 },
+	{  11010757, 134271 },
+	{  11183206, 134721 },
+	{  11357706, 135171 },
+	{  11534274, 135621 },
+	{  11712924, 136071 },
+	{  11893673, 136520 },
+	{  12076536, 136969 },
+	{  12261527, 137418 },
+	{  12448664, 137867 },
+	{  12637961, 138315 },
+	{  12829435, 138763 },
+	{  13023101, 139211 },
+	{  13218974, 139658 },
+	{  13417071, 140106 },
+	{  13617407, 140553 },
+	{  13819999, 140999 },
+	{  14024862, 141446 },
+	{  14232012, 141892 },
+	{  14441465, 142339 },
+	{  14653238, 142785 },
+	{  14867346, 143230 },
+	{  15083805, 143676 },
+	{  15302632, 144121 },
+	{  15523842, 144566 },
+	{  15747453, 145011 },
+	{  15973479, 145456 },
+	{  16201939, 145900 },
+	{  16432847, 146345 },
+	{  16666221, 146789 },
+	{  16902076, 147233 },
+	{  17140429, 147677 },
+	{  17381297, 148121 },
+	{  17624696, 148564 },
+	{  17870643, 149007 },
+	{  18119154, 149451 },
+	{  18370247, 149894 },
+	{  18623936, 150336 },
+	{  18880241, 150779 },
+	{  19139176, 151222 },
+	{  19400759, 151664 },
+	{  19665007, 152107 },
+	{  19931936, 152549 },
+	{  20201564, 152991 },
+	{  20473907, 153433 },
+	{  20748982, 153875 },
+	{  21026807, 154316 },
+	{  21307399, 154758 },
+	{  21590773, 155199 },
+	{  21876949, 155641 },
+	{  22165941, 156082 },
+	{  22457769, 156523 },
+	{  22752449, 156964 },
+	{  23049999, 157405 },
+	{  23350435, 157846 },
+	{  23653774, 158287 },
+	{  23960036, 158727 },
+	{  24269236, 159168 },
+	{  24581392, 159608 },
+	{  24896521, 160049 },
+	{  25214642, 160489 },
+	{  25535772, 160929 },
+	{  25859927, 161370 },
+	{  26187127, 161810 },
+	{  26517388, 162250 },
+	{  26850728, 162690 },
+	{  27187165, 163130 },
+	{  27526716, 163569 },
+	{  27869400, 164009 },
+	{  28215234, 164449 },
+	{  28564236, 164889 },
+	{  28916423, 165328 },
+	{  29271815, 165768 },
+	{  29630428, 166208 },
+	{  29992281, 166647 },
+	{  30357392, 167087 },
+	{  30725779, 167526 },
+	{  31097459, 167965 },
+	{  31472452, 168405 },
+	{  31850774, 168844 },
+	{  32232445, 169283 },
+	{  32617482, 169723 },
+	{  33005904, 170162 },
+	{  33397730, 170601 },
+	{  33792976, 171041 },
+	{  34191663, 171480 },
+	{  34593807, 171919 },
+	{  34999428, 172358 },
+	{  35408544, 172797 },
+	{  35821174, 173237 },
+	{  36237335, 173676 },
+	{  36657047, 174115 },
+	{  37080329, 174554 },
+	{  37507197, 174993 },
+	{  37937673, 175433 },
+	{  38371773, 175872 },
+	{  38809517, 176311 },
+	{  39250924, 176750 },
+	{  39696012, 177190 },
+	{  40144800, 177629 },
+	{  40597308, 178068 },
+	{  41053553, 178507 },
+	{  41513554, 178947 },
+	{  41977332, 179386 },
+	{  42444904, 179825 },
+	{  42916290, 180265 },
+	{  43391509, 180704 },
+	{  43870579, 181144 },
+	{  44353520, 181583 },
+	{  44840352, 182023 },
+	{  45331092, 182462 },
+	{  45825761, 182902 },
+	{  46324378, 183342 },
+	{  46826961, 183781 },
+	{  47333531, 184221 },
+	{  47844106, 184661 },
+	{  48358706, 185101 },
+	{  48877350, 185541 },
+	{  49400058, 185981 },
+	{  49926849, 186421 },
+	{  50457743, 186861 },
+	{  50992759, 187301 },
+	{  51531916, 187741 },
+	{  52075235, 188181 },
+	{  52622735, 188622 },
+	{  53174435, 189062 },
+	{  53730355, 189502 },
+	{  54290515, 189943 },
+	{  54854935, 190383 },
+	{  55423634, 190824 },
+	{  55996633, 191265 },
+	{  56573950, 191706 },
+	{  57155606, 192146 },
+	{  57741621, 192587 },
+	{  58332014, 193028 },
+	{  58926806, 193470 },
+	{  59526017, 193911 },
+	{  60129666, 194352 },
+	{  60737774, 194793 },
+	{  61350361, 195235 },
+	{  61967446, 195677 },
+	{  62589050, 196118 },
+	{  63215194, 196560 },
+	{  63845897, 197002 },
+	{  64481179, 197444 },
+	{  65121061, 197886 },
+	{  65765563, 198328 },
+	{  66414705, 198770 },
+	{  67068508, 199213 },
+	{  67726992, 199655 },
+	{  68390177, 200098 },
+	{  69058085, 200540 },
+	{  69730735, 200983 },
+	{  70408147, 201426 },
+	{  71090343, 201869 },
+	{  71777343, 202312 },
+	{  72469168, 202755 },
+	{  73165837, 203199 },
+	{  73867373, 203642 },
+	{  74573795, 204086 },
+	{  75285124, 204529 },
+	{  76001380, 204973 },
+	{  76722586, 205417 },
+	{  77448761, 205861 },
+	{  78179926, 206306 },
+	{  78916102, 206750 },
+	{  79657310, 207194 },
+	{  80403571, 207639 },
+	{  81154906, 208084 },
+	{  81911335, 208529 },
+	{  82672880, 208974 },
+	{  83439562, 209419 },
+	{  84211402, 209864 },
+	{  84988421, 210309 },
+	{  85770640, 210755 },
+	{  86558080, 211201 },
+	{  87350762, 211647 },
+	{  88148708, 212093 },
+	{  88951938, 212539 },
+	{  89760475, 212985 },
+	{  90574339, 213432 },
+	{  91393551, 213878 },
+	{  92218133, 214325 },
+	{  93048107, 214772 },
+	{  93883493, 215219 },
+	{  94724314, 215666 },
+	{  95570590, 216114 },
+	{  96422343, 216561 },
+	{  97279594, 217009 },
+	{  98142366, 217457 },
+	{  99010679, 217905 },
+	{  99884556, 218353 },
+	{ 100764018, 218801 },
+	{ 101649086, 219250 },
+	{ 102539782, 219698 },
+	{ 103436128, 220147 },
+	{ 104338146, 220596 },
+	{ 105245857, 221046 },
+	{ 106159284, 221495 },
+	{ 107078448, 221945 },
+	{ 108003370, 222394 },
+	{ 108934074, 222844 },
+	{ 109870580, 223294 },
+	{ 110812910, 223745 },
+	{ 111761087, 224195 },
+	{ 112715133, 224646 },
+	{ 113675069, 225097 },
+	{ 114640918, 225548 },
+	{ 115612702, 225999 },
+	{ 116590442, 226450 },
+	{ 117574162, 226902 },
+	{ 118563882, 227353 },
+	{ 119559626, 227805 },
+	{ 120561415, 228258 },
+	{ 121569272, 228710 },
+	{ 122583219, 229162 },
+	{ 123603278, 229615 },
+	{ 124629471, 230068 },
+	{ 125661822, 230521 },
+	{ 126700352, 230974 },
+	{ 127745083, 231428 },
+	{ 128796039, 231882 },
+	{ 129853241, 232336 },
+	{ 130916713, 232790 },
+	{ 131986475, 233244 },
+	{ 133062553, 233699 },
+	{ 134144966, 234153 },
+	{ 135233739, 234608 },
+	{ 136328894, 235064 },
+	{ 137430453, 235519 },
+	{ 138538440, 235975 },
+	{ 139652876, 236430 },
+	{ 140773786, 236886 },
+	{ 141901190, 237343 },
+	{ 143035113, 237799 },
+	{ 144175576, 238256 },
+	{ 145322604, 238713 },
+	{ 146476218, 239170 },
+	{ 147636442, 239627 },
+	{ 148803298, 240085 },
+	{ 149976809, 240542 },
+	{ 151156999, 241000 },
+	{ 152343890, 241459 },
+	{ 153537506, 241917 },
+	{ 154737869, 242376 },
+	{ 155945002, 242835 },
+	{ 157158929, 243294 },
+	{ 158379673, 243753 },
+	{ 159607257, 244213 },
+	{ 160841704, 244673 },
+	{ 162083037, 245133 },
+	{ 163331279, 245593 },
+	{ 164586455, 246054 },
+	{ 165848586, 246514 },
+	{ 167117696, 246975 },
+	{ 168393810, 247437 },
+	{ 169676949, 247898 },
+	{ 170967138, 248360 },
+	{ 172264399, 248822 },
+	{ 173568757, 249284 },
+	{ 174880235, 249747 },
+	{ 176198856, 250209 },
+	{ 177524643, 250672 },
+	{ 178857621, 251136 },
+	{ 180197813, 251599 },
+	{ 181545242, 252063 },
+	{ 182899933, 252527 },
+	{ 184261908, 252991 },
+	{ 185631191, 253456 },
+	{ 187007807, 253920 },
+	{ 188391778, 254385 },
+	{ 189783129, 254851 },
+	{ 191181884, 255316 },
+	{ 192588065, 255782 },
+	{ 194001698, 256248 },
+	{ 195422805, 256714 },
+	{ 196851411, 257181 },
+	{ 198287540, 257648 },
+	{ 199731215, 258115 },
+	{ 201182461, 258582 },
+	{ 202641302, 259050 },
+	{ 204107760, 259518 },
+	{ 205581862, 259986 },
+	{ 207063630, 260454 },
+	{ 208553088, 260923 },
+	{ 210050262, 261392 },
+	{ 211555174, 261861 },
+	{ 213067849, 262331 },
+	{ 214588312, 262800 },
+	{ 216116586, 263270 },
+	{ 217652696, 263741 },
+	{ 219196666, 264211 },
+	{ 220748520, 264682 },
+	{ 222308282, 265153 },
+	{ 223875978, 265625 },
+	{ 225451630, 266097 },
+	{ 227035265, 266569 },
+	{ 228626905, 267041 },
+	{ 230226576, 267514 },
+	{ 231834302, 267986 },
+	{ 233450107, 268460 },
+	{ 235074016, 268933 },
+	{ 236706054, 269407 },
+	{ 238346244, 269881 },
+	{ 239994613, 270355 },
+	{ 241651183, 270830 },
+	{ 243315981, 271305 }
+};
+
+/* return largest index i such that fval <= lookup[i][small] */
+static inline u32 mcc_binsearch(u32 fval, u8 small)
+{
+	u32 try, low = 0, high = MCC_CALC_X_ARRSIZE - 1;
+
+	while (low < high) {
+		try = (low + high) / 2;
+		if (fval <= mcc_calc_x_lookup[try][small])
+			high = try;
+		else
+			low  = try + 1;
+	}
+	return high;
+}
+
+/**
+ * mcc_calc_x - Calculate the send rate as per section 3.1 of RFC3448
+ * @s: packet size          in bytes
+ * @R: RTT                  scaled by 1000000   (i.e., microseconds)
+ * @p: loss ratio estimate  scaled by 1000000
+ *
+ * Returns X_calc           in bytes per second (not scaled).
+ */
+u32 mcc_calc_x(u16 s, u32 R, u32 p)
+{
+	u16 index;
+	u32 f;
+	u64 result;
+
+	/* check against invalid parameters and divide-by-zero   */
+	BUG_ON(p >  1000000);		/* p must not exceed 100%   */
+	BUG_ON(p == 0);			/* f(0) = 0, divide by zero */
+
+	/*
+	if(p == 0 || p > 1000000) {
+		gmtp_pr_error("Invalid value of p: %u", p);
+		return 0;
+	}
+	*/
+
+	if (R == 0) {			/* possible  divide by zero */
+		gmtp_pr_error("WARNING: RTT is 0, returning maximum X_calc.");
+		return ~0U;
+	}
+
+	if (p <= MCC_CALC_X_SPLIT)		{     /* 0.0000 < p <= 0.05   */
+		if (p < MCC_SMALLEST_P)	      /* 0.0000 < p <  0.0001 */
+			index = 0;
+		else			      /* 0.0001 <= p <= 0.05  */
+			index =  p/MCC_SMALLEST_P - 1;
+
+		f = mcc_calc_x_lookup[index][1];
+
+	} else {				      /* 0.05   <  p <= 1.00  */
+		index = p/(1000000/MCC_CALC_X_ARRSIZE) - 1;
+		f = mcc_calc_x_lookup[index][0];
+	}
+
+	/*
+	 * Compute X = s/(R*f(p)) in bytes per second.
+	 * Since f(p) and R are both scaled by 1000000, we need to multiply by
+	 * 1000000^2. To avoid overflow, the result is computed in two stages.
+	 * This works under almost all reasonable operational conditions, for a
+	 * wide range of parameters. Yet, should some strange combination of
+	 * parameters result in overflow, the use of scaled_div32 will catch
+	 * this and return UINT_MAX - which is a logically adequate consequence.
+	 */
+	result = scaled_div(s, R);
+	return scaled_div32(result, f);
+}
+
+/**
+ *  mcc_calc_x_reverse_lookup  -  try to find p given f(p)
+ *  @fvalue: function value to match, scaled by 1000000
+ *
+ *  Returns closest match for p, also scaled by 1000000
+ */
+u32 mcc_calc_x_reverse_lookup(u32 fvalue)
+{
+	int index;
+
+	if (fvalue == 0)	/* f(p) = 0  whenever  p = 0 */
+		return 0;
+
+	/* Error cases. */
+	if (fvalue < mcc_calc_x_lookup[0][1]) {
+		gmtp_pr_warning("fvalue %u smaller than resolution\n", fvalue);
+		return MCC_SMALLEST_P;
+	}
+	if (fvalue > mcc_calc_x_lookup[MCC_CALC_X_ARRSIZE - 1][0]) {
+		gmtp_pr_warning("fvalue %u exceeds bounds!\n", fvalue);
+		return 1000000;
+	}
+
+	if (fvalue <= mcc_calc_x_lookup[MCC_CALC_X_ARRSIZE - 1][1]) {
+		index = mcc_binsearch(fvalue, 1);
+		return (index + 1) * MCC_CALC_X_SPLIT / MCC_CALC_X_ARRSIZE;
+	}
+
+	/* else ... it must be in the coarse-grained column */
+	index = mcc_binsearch(fvalue, 0);
+	return (index + 1) * 1000000 / MCC_CALC_X_ARRSIZE;
+}
+
+/**
+ * mcc_invert_loss_event_rate  -  Compute p so that 10^6 corresponds to 100%
+ * When @loss_event_rate is large, there is a chance that p is truncated to 0.
+ * To avoid re-entering slow-start in that case, we set p = TFRC_SMALLEST_P > 0.
+ */
+u32 mcc_invert_loss_event_rate(u32 loss_event_rate)
+{
+	if (loss_event_rate == UINT_MAX)		/* see RFC 4342, 8.5 */
+		return 0;
+	if (unlikely(loss_event_rate == 0))		/* map 1/0 into 100% */
+		return 1000000;
+	return max_t(u32, scaled_div(1, loss_event_rate), MCC_SMALLEST_P);
+}
diff --git a/linux-3.17.1/net/gmtp/mcc/mcc_input.c b/linux-3.17.1/net/gmtp/mcc/mcc_input.c
new file mode 100644
index 0000000..22b0a30
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/mcc/mcc_input.c
@@ -0,0 +1,300 @@
+/*
+ * mcc_input.c
+ *
+ *  Created on: 13/04/2015
+ *      Author: wendell
+ *
+ *  GMTP-MCC receiver routines
+ */
+
+#include <linux/gmtp.h>
+
+#include "mcc_proto.h"
+
+/* GMTP-MCC feedback types */
+enum mcc_fback_type {
+	MCC_FBACK_NONE = 0,
+	MCC_FBACK_INITIAL,
+	MCC_FBACK_PERIODIC,
+	MCC_FBACK_PARAM_CHANGE
+};
+
+static const char *mcc_rx_state_name(enum mcc_rx_states state)
+{
+	static const char *const mcc_rx_state_names[] = {
+	[MCC_RSTATE_NO_DATA] = "NO_DATA",
+	[MCC_RSTATE_DATA]    = "DATA",
+	};
+
+	return mcc_rx_state_names[state];
+}
+
+static void mcc_rx_set_state(struct sock *sk, enum mcc_rx_states state)
+{
+	struct gmtp_sock *hc = gmtp_sk(sk);
+	enum mcc_rx_states oldstate = hc->rx_state;
+
+	gmtp_pr_func();
+	mcc_pr_debug("%s(%p) %-8.8s -> %s\n",
+			gmtp_role_name(sk), sk, mcc_rx_state_name(oldstate),
+		       mcc_rx_state_name(state));
+	WARN_ON(state == oldstate);
+	hc->rx_state = state;
+}
+
+
+static void mcc_rx_send_feedback(struct sock *sk,
+				      const struct sk_buff *skb,
+				      enum mcc_fback_type fbtype)
+{
+	struct gmtp_sock *hc = gmtp_sk(sk);
+	ktime_t now = ktime_get_real();
+	u32 sample;
+	s64 delta = 0;
+	u32 p;
+
+	gmtp_pr_func();
+
+	switch (fbtype) {
+	case MCC_FBACK_INITIAL:
+		pr_info("MCC_FBACK_INITIAL\n");
+		hc->rx_x_recv = 0;
+		hc->rx_pinv   = ~0U;   /* see RFC 4342, 8.5 */
+		break;
+	case MCC_FBACK_PARAM_CHANGE:
+		/*
+		 * When parameters change (new loss or p > p_prev), we do not
+		 * have a reliable estimate for R_m of [RFC 3448, 6.2] and so
+		 * need to  reuse the previous value of X_recv. However, when
+		 * X_recv was 0 (due to early loss), this would kill X down to
+		 * s/t_mbi (i.e. one packet in 64 seconds).
+		 * To avoid such drastic reduction, we approximate X_recv as
+		 * the number of bytes since last feedback.
+		 * This is a safe fallback, since X is bounded above by X_calc.
+		 */
+		pr_info("MCC_FBACK_PARAM_CHANGE\n");
+		if (hc->rx_x_recv > 0)
+			break;
+		/* fall through */
+	case MCC_FBACK_PERIODIC:
+		pr_info("MCC_FBACK_PERIODIC\n");
+		delta = ktime_us_delta(now, hc->rx_tstamp_last_feedback);
+		if (delta <= 0)
+			gmtp_pr_error("delta (%ld) <= 0", (long)delta);
+		else
+			hc->rx_x_recv = scaled_div32(hc->rx_bytes_recv, delta);
+		break;
+	default:
+		return;
+	}
+
+	now = ktime_get_real();
+	hc->rx_tstamp_last_feedback = now;
+	hc->rx_bytes_recv	    = 0;
+	sample = hc->rx_rtt * USEC_PER_MSEC;
+
+	pr_info("Sample: %u us\n", sample);
+
+	if(sample != 0)
+		hc->rx_avg_rtt = mcc_ewma(hc->rx_avg_rtt, sample, 9);
+
+	pr_info("rx_avg_rtt: %u us\n", hc->rx_avg_rtt);
+
+	if(hc->rx_avg_rtt <= 0)
+		hc->rx_avg_rtt = GMTP_SANE_RTT_MIN;
+
+	p = mcc_invert_loss_event_rate(hc->rx_pinv);
+	if(p > 0) {
+		u32 new_rate = mcc_calc_x(hc->rx_s, hc->rx_avg_rtt, p);
+		gmtp_pr_info("new_rate = %u bytes/s", new_rate);
+		/*
+		 * Change only if the value is valid!
+		 */
+		if(new_rate > 0)
+			hc->rx_max_rate = new_rate;
+	} else {
+		/*
+		 * No loss events. Returning max X_calc.
+		 * Sender will ignore feedback and keep last TX
+		 */
+		hc->rx_max_rate = ~0U;
+	}
+
+	mcc_pr_debug("RESULT: %s, RTT=%u us (sample=%u us), s=%u, "
+			       "p=%u, X_calc=%u, X_recv=%u",
+			       gmtp_role_name(sk),
+			       hc->rx_avg_rtt, sample,
+			       hc->rx_s, p,
+			       hc->rx_max_rate,
+			       hc->rx_x_recv);
+
+	gmtp_send_feedback(sk);
+}
+
+
+
+/**
+ * mcc_first_li  -  Implements [RFC 5348, 6.3.1]
+ *
+ * Determine the length of the first loss interval via inverse lookup.
+ * Assume that X_recv can be computed by the throughput equation
+ *		    s
+ *	X_recv = --------
+ *		 R * fval
+ * Find some p such that f(p) = fval; return 1/p (scaled).
+ */
+static u32 mcc_first_li(struct sock *sk)
+{
+	struct gmtp_sock *hc = gmtp_sk(sk);
+	u32 x_recv, p, delta;
+	u64 fval;
+
+	if (hc->rx_rtt == 0) {
+		gmtp_pr_warning("No RTT estimate available, using fallback RTT");
+		/* FIXME Use server RTT */
+		hc->rx_rtt = GMTP_FALLBACK_RTT;
+	}
+
+	delta  = ktime_to_us(net_timedelta(hc->rx_tstamp_last_feedback));
+	x_recv = scaled_div32(hc->rx_bytes_recv, delta);
+	if (x_recv == 0) {		/* would also trigger divide-by-zero */
+		gmtp_pr_warning("X_recv==0\n");
+		if (hc->rx_x_recv == 0) {
+			gmtp_pr_error("stored value of X_recv is zero");
+			return ~0U;
+		}
+		x_recv = hc->rx_x_recv;
+	}
+
+	fval = scaled_div(hc->rx_s, hc->rx_rtt);
+	fval = scaled_div32(fval, x_recv);
+	p = mcc_calc_x_reverse_lookup(fval);
+
+	mcc_pr_debug("%s receive rate=%u bytes/s, implied "
+		       "loss rate=%u\n", gmtp_role_name(sk), x_recv, p);
+
+	return p == 0 ? ~0U : scaled_div(1, p);
+}
+
+
+void mcc_rx_packet_recv(struct sock *sk, struct sk_buff *skb)
+{
+	struct gmtp_sock *hc = gmtp_sk(sk);
+	enum mcc_fback_type do_feedback = MCC_FBACK_NONE;
+	const __be32 ndp = gmtp_sk(sk)->ndp_count;
+	const bool is_data_packet = gmtp_data_packet(skb);
+	ktime_t now = ktime_get_real();
+	s64 delta = 0;
+
+	gmtp_pr_func();
+
+	if(unlikely(hc->rx_state == MCC_RSTATE_NO_DATA)) {
+		if(is_data_packet) {
+			const u32 payload = skb->len
+					- gmtp_hdr(skb)->hdrlen * 4;
+			do_feedback = MCC_FBACK_INITIAL;
+			mcc_rx_set_state(sk, MCC_RSTATE_DATA);
+			hc->rx_s = payload;
+			/*
+			 * Not necessary to update rx_bytes_recv here,
+			 * since X_recv = 0 for the first feedback packet (cf.
+			 * RFC 3448, 6.3) -- gerrit
+			 */
+		}
+		goto update_records;
+	}
+
+	if(mcc_rx_hist_duplicate(&hc->rx_hist, skb))
+		return;  /* done receiving */
+
+	if(is_data_packet) {
+		const u32 payload = skb->len - gmtp_hdr(skb)->hdrlen;
+		/*
+		 * Update moving-average of s and the sum of received payload bytes
+		 */
+		hc->rx_s = mcc_ewma(hc->rx_s, payload, 9);
+		hc->rx_bytes_recv += payload;
+	}
+
+	/*
+	 * Perform loss detection and handle pending losses
+	 */
+	if(mcc_rx_handle_loss(&hc->rx_hist, &hc->rx_li_hist,
+			skb, ndp, mcc_first_li, sk)) {
+		do_feedback = MCC_FBACK_PARAM_CHANGE;
+		goto done_receiving;
+	}
+
+	if(mcc_rx_hist_loss_pending(&hc->rx_hist))
+		return;  /* done receiving */
+
+	/*
+	 * Handle data packets: RTT sampling and monitoring p
+	 */
+	if(unlikely(!is_data_packet))
+		goto update_records;
+
+	if(!mcc_lh_is_initialised(&hc->rx_li_hist)) {
+		/* ms to us */
+		const u32 sample = jiffies_to_usecs(msecs_to_jiffies(hc->rx_rtt));
+		/*
+		 * Empty loss history: no loss so far, hence p stays 0.
+		 * Sample RTT values, since an RTT estimate is required for the
+		 * computation of p when the first loss occurs; RFC 3448, 6.3.1.
+		 */
+		if(sample != 0)
+			hc->rx_avg_rtt = mcc_ewma(hc->rx_avg_rtt, sample, 9);
+
+	} else if(mcc_lh_update_i_mean(&hc->rx_li_hist, skb)) {
+		/*
+		 * Step (3) of [RFC 3448, 6.1]: Recompute I_mean and, if I_mean
+		 * has decreased (resp. p has increased), send feedback now.
+		 */
+		do_feedback = MCC_FBACK_PARAM_CHANGE;
+	}
+
+	/*
+	 * Check if the periodic once-per-RTT feedback is due; RFC 4342, 10.3
+	 */
+	delta = ktime_us_delta(now, hc->rx_tstamp_last_feedback);
+	if(delta <= 0)
+		gmtp_pr_error("delta (%ld) <= 0", (long )delta);
+	else if(delta >= hc->rx_avg_rtt)
+		do_feedback = MCC_FBACK_PERIODIC;
+
+update_records:
+	mcc_rx_hist_add_packet(&hc->rx_hist, skb, ndp);
+
+done_receiving:
+	if(do_feedback)
+		mcc_rx_send_feedback(sk, skb, do_feedback);
+}
+EXPORT_SYMBOL_GPL(mcc_rx_packet_recv);
+
+int mcc_rx_init(struct sock *sk)
+{
+	struct gmtp_sock *hc = gmtp_sk(sk);
+
+	gmtp_pr_func();
+
+	hc->rx_state = MCC_RSTATE_NO_DATA;
+	hc->ndp_count = 0;
+	mcc_lh_init(&hc->rx_li_hist);
+	return mcc_rx_hist_alloc(&hc->rx_hist);
+}
+
+void mcc_rx_exit(struct sock *sk)
+{
+	/*struct gmtp_sock *hc = gmtp_sk(sk);*/
+
+	gmtp_pr_func();
+
+	/* FIXME this breaks the modules  */
+	/*
+	mcc_rx_hist_purge(&hc->rx_hist);
+	mcc_lh_cleanup(&hc->rx_li_hist);
+	*/
+}
+
+
+
diff --git a/linux-3.17.1/net/gmtp/mcc/mcc_proto.c b/linux-3.17.1/net/gmtp/mcc/mcc_proto.c
new file mode 100644
index 0000000..144de61
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/mcc/mcc_proto.c
@@ -0,0 +1,38 @@
+/*
+ * GMTP-MCC library initialisation
+
+ *
+ * Copyright (c) 2007 The University of Aberdeen, Scotland, UK
+ * Copyright (c) 2007 Arnaldo Carvalho de Melo <acme@redhat.com>
+ *
+ * Adapted to GMTP by
+ * Copyright (c) 2015 Federal University of Alagoas, Maceió, Brazil
+ */
+
+#include <linux/init.h>
+#include <linux/module.h>
+#include "mcc_proto.h"
+
+int __init mcc_lib_init(void)
+{
+	int rc = mcc_li_init();
+
+	mcc_pr_debug("Starting GMTP-MCC");
+
+	rc = mcc_rx_packet_history_init();
+	if (rc)
+		goto out;
+
+	return 0;
+
+out:
+	mcc_li_exit();
+	return rc;
+}
+
+void mcc_lib_exit(void)
+{
+	mcc_pr_debug("Finishing GMTP-MCC");
+	mcc_rx_packet_history_exit();
+	mcc_li_exit();
+}
diff --git a/linux-3.17.1/net/gmtp/mcc/mcc_proto.h b/linux-3.17.1/net/gmtp/mcc/mcc_proto.h
new file mode 100644
index 0000000..615e8b1
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/mcc/mcc_proto.h
@@ -0,0 +1,68 @@
+#ifndef _MCC_H_
+#define _MCC_H_
+/*
+ *  Copyright (c) 2007   The University of Aberdeen, Scotland, UK
+ *  Copyright (c) 2005-6 The University of Waikato, Hamilton, New Zealand.
+ *  Copyright (c) 2005-6 Ian McDonald <ian.mcdonald@jandi.co.nz>
+ *  Copyright (c) 2005   Arnaldo Carvalho de Melo <acme@conectiva.com.br>
+ *  Copyright (c) 2003   Nils-Erik Mattsson, Joacim Haggmark, Magnus Erixzon
+ *
+ *  Adapted to GMTP by
+ *  Copyright (c) 2015   Federal University of Alagoas, Maceió, Brazil
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ */
+#include <linux/types.h>
+#include <linux/math64.h>
+
+#include "../gmtp.h"
+
+#include "loss_interval.h"
+#include "packet_history.h"
+
+#define MCC_DEBUG "[GMTP-MCC] %s:%d - "
+#define mcc_pr_debug(format, args...) pr_info(MCC_DEBUG format \
+		"\n", __FUNCTION__, __LINE__, ##args)
+
+/* integer-arithmetic divisions of type (a * 1000000)/b */
+static inline u64 scaled_div(u64 a, u64 b)
+{
+	BUG_ON(b == 0);
+	return div64_u64(a * 1000000, b);
+}
+
+static inline u32 scaled_div32(u64 a, u64 b)
+{
+	u64 result = scaled_div(a, b);
+
+	if (result > UINT_MAX) {
+		gmtp_print_error("Overflow: %llu/%llu > UINT_MAX",
+			  (unsigned long long)a, (unsigned long long)b);
+		return UINT_MAX;
+	}
+	return result;
+}
+
+/**
+ * mcc_ewma  -  Exponentially weighted moving average
+ * @weight: Weight to be used as damping factor, in units of 1/10
+ */
+static inline u32 mcc_ewma(const u32 avg, const u32 newval, const u8 weight)
+{
+	return avg ? (weight * avg + (10 - weight) * newval) / 10 : newval;
+}
+
+u32 mcc_calc_x(u16 s, u32 R, u32 p);
+u32 mcc_calc_x_reverse_lookup(u32 fvalue);
+u32 mcc_invert_loss_event_rate(u32 loss_event_rate);
+
+int mcc_rx_packet_history_init(void);
+void mcc_rx_packet_history_exit(void);
+
+int mcc_li_init(void);
+void mcc_li_exit(void);
+
+#endif /* _MCC_H_ */
diff --git a/linux-3.17.1/net/gmtp/mcc/packet_history.c b/linux-3.17.1/net/gmtp/mcc/packet_history.c
new file mode 100644
index 0000000..088a923
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/mcc/packet_history.c
@@ -0,0 +1,364 @@
+/*
+ *  Copyright (c) 2007   The University of Aberdeen, Scotland, UK
+ *  Copyright (c) 2005-7 The University of Waikato, Hamilton, New Zealand.
+ *
+ *  This code has been developed by the University of Waikato WAND
+ *  research group. For further information please see http://www.wand.net.nz/
+ *  or e-mail Ian McDonald - ian.mcdonald@jandi.co.nz
+ *
+ *  This code also uses code from Lulea University, rereleased as GPL by its
+ *  authors:
+ *  Copyright (c) 2003 Nils-Erik Mattsson, Joacim Haggmark, Magnus Erixzon
+ *
+ *  Changes to meet Linux coding standards, to make it meet latest ccid3 draft
+ *  and to make it work as a loadable module in the DCCP stack written by
+ *  Arnaldo Carvalho de Melo <acme@conectiva.com.br>.
+ *
+ *  Copyright (c) 2005 Arnaldo Carvalho de Melo <acme@conectiva.com.br>
+ *
+ *  Adapted to GMTP by
+ *  Copyright (c) 2015   Federal University of Alagoas, Maceió, Brazil
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ */
+
+#include <linux/string.h>
+#include <linux/slab.h>
+#include "packet_history.h"
+
+#include "../gmtp.h"
+
+/*
+ *	Receiver History Routines
+ */
+static struct kmem_cache *tfrc_rx_hist_slab;
+
+int __init mcc_rx_packet_history_init(void)
+{
+	tfrc_rx_hist_slab = kmem_cache_create("mcc_rxh_cache",
+					      sizeof(struct mcc_rx_hist_entry),
+					      0, SLAB_HWCACHE_ALIGN, NULL);
+	return tfrc_rx_hist_slab == NULL ? -ENOBUFS : 0;
+}
+
+void mcc_rx_packet_history_exit(void)
+{
+	if (tfrc_rx_hist_slab != NULL) {
+		kmem_cache_destroy(tfrc_rx_hist_slab);
+		tfrc_rx_hist_slab = NULL;
+	}
+}
+
+/**
+ * FIXME insert timestamp from gmtp_hdr...
+ */
+static inline void mcc_rx_hist_entry_from_skb(struct mcc_rx_hist_entry *entry,
+					       const struct sk_buff *skb,
+					       const __be32 ndp)
+{
+	const struct gmtp_hdr *gh = gmtp_hdr(skb);
+
+	entry->seqno = GMTP_SKB_CB(skb)->seq;
+	entry->type  = gh->type;
+	entry->ndp   = ndp;
+	entry->tstamp = ktime_get_real();
+
+	if(gh->type == GMTP_PKT_DATA) {
+		const struct gmtp_hdr_data *gh_data = gmtp_hdr_data(skb);
+		entry->tx_tstamp = gh_data->tstamp;
+	}
+}
+
+void mcc_rx_hist_add_packet(struct mcc_rx_hist *h,
+			     const struct sk_buff *skb,
+			     const __be32 ndp)
+{
+	struct mcc_rx_hist_entry *entry = mcc_rx_hist_last_rcv(h);
+	mcc_rx_hist_entry_from_skb(entry, skb, ndp);
+}
+
+/* has the packet contained in skb been seen before? */
+int mcc_rx_hist_duplicate(struct mcc_rx_hist *h, struct sk_buff *skb)
+{
+	const __be32 seq = GMTP_SKB_CB(skb)->seq;
+	struct mcc_rx_hist_entry *loss_prev = mcc_rx_hist_loss_prev(h);
+	int i;
+
+	gmtp_pr_func();
+
+	if(loss_prev == NULL) {
+		gmtp_pr_warning("loss_prev is NULL");
+		return 1;
+	}
+
+	if ((seq - loss_prev->seqno) <= 0)
+		return 1;
+
+	for (i = 1; i <= h->loss_count; i++)
+		if (mcc_rx_hist_entry(h, i)->seqno == seq)
+			return 1;
+
+	return 0;
+}
+
+static void mcc_rx_hist_swap(struct mcc_rx_hist *h, const u8 a, const u8 b)
+{
+	const u8 idx_a = mcc_rx_hist_index(h, a),
+		 idx_b = mcc_rx_hist_index(h, b);
+	struct mcc_rx_hist_entry *tmp = h->ring[idx_a];
+
+	h->ring[idx_a] = h->ring[idx_b];
+	h->ring[idx_b] = tmp;
+}
+
+/*
+ * Private helper functions for loss detection.
+ *
+ * In the descriptions, `Si' refers to the sequence number of entry number i,
+ * whose NDP count is `Ni' (lower case is used for variables).
+ * Note: All __xxx_loss functions expect that a test against duplicates has been
+ *       performed already: the seqno of the skb must not be less than the seqno
+ *       of loss_prev; and it must not equal that of any valid history entry.
+ */
+static void __do_track_loss(struct mcc_rx_hist *h, struct sk_buff *skb,
+		__be32 n1)
+{
+	__be32 s0 = mcc_rx_hist_loss_prev(h)->seqno,
+	    s1 = GMTP_SKB_CB(skb)->seq;
+
+	if (!gmtp_loss_free(s0, s1, n1)) {	/* gap between S0 and S1 */
+		h->loss_count = 1;
+		mcc_rx_hist_entry_from_skb(mcc_rx_hist_entry(h, 1), skb, n1);
+	}
+}
+
+static void __one_after_loss(struct mcc_rx_hist *h, struct sk_buff *skb, u32 n2)
+{
+	__be32 s0 = mcc_rx_hist_loss_prev(h)->seqno,
+	    s1 = mcc_rx_hist_entry(h, 1)->seqno,
+	    s2 = GMTP_SKB_CB(skb)->seq;
+
+	if (likely((s2 - s1) > 0)) {	/* S1  <  S2 */
+		h->loss_count = 2;
+		mcc_rx_hist_entry_from_skb(mcc_rx_hist_entry(h, 2), skb, n2);
+		return;
+	}
+
+	/* S0  <  S2  <  S1 */
+
+	if (gmtp_loss_free(s0, s2, n2)) {
+		__be32 n1 = mcc_rx_hist_entry(h, 1)->ndp;
+
+		if (gmtp_loss_free(s2, s1, n1)) {
+			/* hole is filled: S0, S2, and S1 are consecutive */
+			h->loss_count = 0;
+			h->loss_start = mcc_rx_hist_index(h, 1);
+		} else
+			/* gap between S2 and S1: just update loss_prev */
+			mcc_rx_hist_entry_from_skb(mcc_rx_hist_loss_prev(h), skb, n2);
+
+	} else {	/* gap between S0 and S2 */
+		/*
+		 * Reorder history to insert S2 between S0 and S1
+		 */
+		mcc_rx_hist_swap(h, 0, 3);
+		h->loss_start = mcc_rx_hist_index(h, 3);
+		mcc_rx_hist_entry_from_skb(mcc_rx_hist_entry(h, 1), skb, n2);
+		h->loss_count = 2;
+	}
+}
+
+/* return 1 if a new loss event has been identified */
+static int __two_after_loss(struct mcc_rx_hist *h, struct sk_buff *skb, u32 n3)
+{
+	__be32 s0 = mcc_rx_hist_loss_prev(h)->seqno,
+	    s1 = mcc_rx_hist_entry(h, 1)->seqno,
+	    s2 = mcc_rx_hist_entry(h, 2)->seqno,
+	    s3 = GMTP_SKB_CB(skb)->seq;
+
+	if (likely((s3 - s2) > 0)) {	/* S2  <  S3 */
+		h->loss_count = 3;
+		mcc_rx_hist_entry_from_skb(mcc_rx_hist_entry(h, 3), skb, n3);
+		return 1;
+	}
+
+	/* S3  <  S2 */
+	if ((s3 - s1) > 0) {		/* S1  <  S3  <  S2 */
+		/*
+		 * Reorder history to insert S3 between S1 and S2
+		 */
+		mcc_rx_hist_swap(h, 2, 3);
+		mcc_rx_hist_entry_from_skb(mcc_rx_hist_entry(h, 2), skb, n3);
+		h->loss_count = 3;
+		return 1;
+	}
+
+	/* S0  <  S3  <  S1 */
+	if (gmtp_loss_free(s0, s3, n3)) {
+		__be32 n1 = mcc_rx_hist_entry(h, 1)->ndp;
+
+		if (gmtp_loss_free(s3, s1, n1)) {
+			/* hole between S0 and S1 filled by S3 */
+			__be32 n2 = mcc_rx_hist_entry(h, 2)->ndp;
+
+			if (gmtp_loss_free(s1, s2, n2)) {
+				/* entire hole filled by S0, S3, S1, S2 */
+				h->loss_start = mcc_rx_hist_index(h, 2);
+				h->loss_count = 0;
+			} else {
+				/* gap remains between S1 and S2 */
+				h->loss_start = mcc_rx_hist_index(h, 1);
+				h->loss_count = 1;
+			}
+
+		} else /* gap exists between S3 and S1, loss_count stays at 2 */
+			mcc_rx_hist_entry_from_skb(mcc_rx_hist_loss_prev(h), skb, n3);
+
+		return 0;
+	}
+
+	/*
+	 * The remaining case:  S0  <  S3  <  S1  <  S2;  gap between S0 and S3
+	 * Reorder history to insert S3 between S0 and S1.
+	 */
+	mcc_rx_hist_swap(h, 0, 3);
+	h->loss_start = mcc_rx_hist_index(h, 3);
+	mcc_rx_hist_entry_from_skb(mcc_rx_hist_entry(h, 1), skb, n3);
+	h->loss_count = 3;
+
+	return 1;
+}
+
+/* recycle RX history records to continue loss detection if necessary */
+static void __three_after_loss(struct mcc_rx_hist *h)
+{
+	/*
+	 * At this stage we know already that there is a gap between S0 and S1
+	 * (since S0 was the highest sequence number received before detecting
+	 * the loss). To recycle the loss record, it is	thus only necessary to
+	 * check for other possible gaps between S1/S2 and between S2/S3.
+	 */
+	__be32 s1 = mcc_rx_hist_entry(h, 1)->seqno,
+	    s2 = mcc_rx_hist_entry(h, 2)->seqno,
+	    s3 = mcc_rx_hist_entry(h, 3)->seqno;
+	__be32 n2 = mcc_rx_hist_entry(h, 2)->ndp,
+	    n3 = mcc_rx_hist_entry(h, 3)->ndp;
+
+	if (gmtp_loss_free(s1, s2, n2)) {
+
+		if (gmtp_loss_free(s2, s3, n3)) {
+			/* no gap between S2 and S3: entire hole is filled */
+			h->loss_start = mcc_rx_hist_index(h, 3);
+			h->loss_count = 0;
+		} else {
+			/* gap between S2 and S3 */
+			h->loss_start = mcc_rx_hist_index(h, 2);
+			h->loss_count = 1;
+		}
+
+	} else {	/* gap between S1 and S2 */
+		h->loss_start = mcc_rx_hist_index(h, 1);
+		h->loss_count = 2;
+	}
+}
+
+/**
+ *  mcc_rx_handle_loss  -  Loss detection and further processing
+ *  @h:		    The non-empty RX history object
+ *  @lh:	    Loss Intervals database to update
+ *  @skb:	    Currently received packet
+ *  @ndp:	    The NDP count belonging to @skb
+ *  @calc_first_li: Caller-dependent computation of first loss interval in @lh
+ *  @sk:	    Used by @calc_first_li (see mcc_lh_interval_add)
+ *
+ *  Chooses action according to pending loss, updates LI database when a new
+ *  loss was detected, and does required post-processing. Returns 1 when caller
+ *  should send feedback, 0 otherwise.
+ *  Since it also takes care of reordering during loss detection and updates the
+ *  records accordingly, the caller should not perform any more RX history
+ *  operations when loss_count is greater than 0 after calling this function.
+ */
+int mcc_rx_handle_loss(struct mcc_rx_hist *h,
+			struct mcc_loss_hist *lh,
+			struct sk_buff *skb, const __be32 ndp,
+			u32 (*calc_first_li)(struct sock *), struct sock *sk)
+{
+	int is_new_loss = 0;
+
+	if (h->loss_count == 0) {
+		__do_track_loss(h, skb, ndp);
+	} else if (h->loss_count == 1) {
+		__one_after_loss(h, skb, ndp);
+	} else if (h->loss_count != 2) {
+		gmtp_print_error("invalid loss_count %d", h->loss_count);
+	} else if (__two_after_loss(h, skb, ndp)) {
+		/*
+		 * Update Loss Interval database and recycle RX records
+		 */
+		is_new_loss = mcc_lh_interval_add(lh, h, calc_first_li, sk);
+		__three_after_loss(h);
+	}
+	return is_new_loss;
+}
+
+int mcc_rx_hist_alloc(struct mcc_rx_hist *h)
+{
+	int i;
+
+	for (i = 0; i <= MCC_NDUPACK; i++) {
+		h->ring[i] = kmem_cache_alloc(tfrc_rx_hist_slab, GFP_ATOMIC);
+		if (h->ring[i] == NULL)
+			goto out_free;
+	}
+
+	h->loss_count = h->loss_start = 0;
+	return 0;
+
+out_free:
+	while (i-- != 0) {
+		kmem_cache_free(tfrc_rx_hist_slab, h->ring[i]);
+		h->ring[i] = NULL;
+	}
+	return -ENOBUFS;
+}
+
+void mcc_rx_hist_purge(struct mcc_rx_hist *h)
+{
+	int i;
+
+	for (i = 0; i <= MCC_NDUPACK; ++i)
+		if (h->ring[i] != NULL) {
+			kmem_cache_free(tfrc_rx_hist_slab, h->ring[i]);
+			h->ring[i] = NULL;
+		}
+}
+
+/**
+ * tfrc_rx_hist_rtt_last_s - reference entry to compute RTT samples against
+ */
+static inline struct mcc_rx_hist_entry *
+			mcc_rx_hist_rtt_last_s(const struct mcc_rx_hist *h)
+{
+	return h->ring[0];
+}
+
+/**
+ * tfrc_rx_hist_rtt_prev_s - previously suitable (wrt rtt_last_s) RTT-sampling entry
+ */
+static inline struct mcc_rx_hist_entry *
+			mcc_rx_hist_rtt_prev_s(const struct mcc_rx_hist *h)
+{
+	return h->ring[h->rtt_sample_prev];
+}
diff --git a/linux-3.17.1/net/gmtp/mcc/packet_history.h b/linux-3.17.1/net/gmtp/mcc/packet_history.h
new file mode 100644
index 0000000..f833617
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/mcc/packet_history.h
@@ -0,0 +1,115 @@
+/*
+ *  Packet RX/TX history data structures and routines for TFRC-based protocols.
+ *
+ *  Copyright (c) 2007   The University of Aberdeen, Scotland, UK
+ *  Copyright (c) 2005-6 The University of Waikato, Hamilton, New Zealand.
+ *
+ *  Adapted to GMTP by
+ *  Copyright (c) 2015   Federal University of Alagoas, Maceió, Brazil
+ *
+ *  This code has been developed by the University of Waikato WAND
+ *  research group. For further information please see http://www.wand.net.nz/
+ *  or e-mail Ian McDonald - ian.mcdonald@jandi.co.nz
+ *
+ *  This code also uses code from Lulea University, rereleased as GPL by its
+ *  authors:
+ *  Copyright (c) 2003 Nils-Erik Mattsson, Joacim Haggmark, Magnus Erixzon
+ *
+ *  Changes to meet Linux coding standards, to make it meet latest ccid3 draft
+ *  and to make it work as a loadable module in the DCCP stack written by
+ *  Arnaldo Carvalho de Melo <acme@conectiva.com.br>.
+ *
+ *  Copyright (c) 2005 Arnaldo Carvalho de Melo <acme@conectiva.com.br>
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ */
+
+#ifndef _GMTP_PKT_HIST_
+#define _GMTP_PKT_HIST_
+
+#include <linux/list.h>
+#include <linux/slab.h>
+#include "mcc_proto.h"
+
+/**
+ * mcc_rx_hist_entry - Store information about a single received packet
+ * @seqno:	GMTP packet sequence number
+ * @ndp:	the NDP count (if any) of the packet
+ * @tstamp:	actual receive time of packet
+ * @tx_tstamp:	send time of packet with sequence number @seqno
+ */
+struct mcc_rx_hist_entry {
+	__be32		 seqno;
+	__be32		 type:5;
+	__be32		 ndp;
+	ktime_t		 tstamp;
+	__u32 		 tx_tstamp;
+};
+
+/**
+ * mcc_rx_hist_index - index to reach n-th entry after loss_start
+ */
+static inline u8 mcc_rx_hist_index(const struct mcc_rx_hist *h, const u8 n)
+{
+	return (h->loss_start + n) & MCC_NDUPACK;
+}
+
+/**
+ * mcc_rx_hist_last_rcv - entry with highest-received-seqno so far
+ */
+static inline struct mcc_rx_hist_entry *
+			mcc_rx_hist_last_rcv(const struct mcc_rx_hist *h)
+{
+	return h->ring[mcc_rx_hist_index(h, h->loss_count)];
+}
+
+/**
+ * mcc_rx_hist_entry - return the n-th history entry after loss_start
+ */
+static inline struct mcc_rx_hist_entry *
+			mcc_rx_hist_entry(const struct mcc_rx_hist *h, const u8 n)
+{
+	return h->ring[mcc_rx_hist_index(h, n)];
+}
+
+/**
+ * mcc_rx_hist_loss_prev - entry with highest-received-seqno before loss was detected
+ */
+static inline struct mcc_rx_hist_entry *
+			mcc_rx_hist_loss_prev(const struct mcc_rx_hist *h)
+{
+	return h->ring[h->loss_start];
+}
+
+/* indicate whether previously a packet was detected missing */
+static inline bool mcc_rx_hist_loss_pending(const struct mcc_rx_hist *h)
+{
+	return h->loss_count > 0;
+}
+
+void mcc_rx_hist_add_packet(struct mcc_rx_hist *h, const struct sk_buff *skb,
+			     const __be32 ndp);
+
+int mcc_rx_hist_duplicate(struct mcc_rx_hist *h, struct sk_buff *skb);
+
+struct mcc_loss_hist;
+int mcc_rx_handle_loss(struct mcc_rx_hist *h, struct mcc_loss_hist *lh,
+			struct sk_buff *skb, const __be32 ndp,
+			u32 (*first_li)(struct sock *sk), struct sock *sk);
+u32 mcc_rx_hist_sample_rtt(struct mcc_rx_hist *h, const struct sk_buff *skb);
+int mcc_rx_hist_alloc(struct mcc_rx_hist *h);
+void mcc_rx_hist_purge(struct mcc_rx_hist *h);
+
+#endif /* _GMTP_PKT_HIST_ */
diff --git a/linux-3.17.1/net/gmtp/minisocks.c b/linux-3.17.1/net/gmtp/minisocks.c
new file mode 100644
index 0000000..2afff43
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/minisocks.c
@@ -0,0 +1,247 @@
+/*
+ * minisocks.c
+ *
+ *  Created on: 21/01/2015
+ *      Author: wendell
+ */
+
+#include <linux/gfp.h>
+#include <linux/kernel.h>
+#include <linux/skbuff.h>
+#include <linux/timer.h>
+
+#include <net/sock.h>
+#include <net/xfrm.h>
+#include <net/inet_timewait_sock.h>
+
+#include <linux/gmtp.h>
+#include "gmtp.h"
+
+struct inet_timewait_death_row gmtp_death_row = {
+	.sysctl_max_tw_buckets = NR_FILE * 2,
+	.period		= GMTP_TIMEWAIT_LEN / INET_TWDR_TWKILL_SLOTS,
+	.death_lock	= __SPIN_LOCK_UNLOCKED(gmpt_death_row.death_lock),
+	.hashinfo	= &gmtp_inet_hashinfo,
+	.tw_timer	= TIMER_INITIALIZER(inet_twdr_hangman, 0,
+					    (unsigned long)&gmtp_death_row),
+	.twkill_work	= __WORK_INITIALIZER(gmtp_death_row.twkill_work,
+					     inet_twdr_twkill_work),
+/* Short-time timewait calendar */
+
+	.twcal_hand	= -1,
+	.twcal_timer	= TIMER_INITIALIZER(inet_twdr_twcal_tick, 0,
+					    (unsigned long)&gmtp_death_row),
+};
+EXPORT_SYMBOL_GPL(gmtp_death_row);
+
+void gmtp_time_wait(struct sock *sk, int state, int timeo)
+{
+	struct inet_timewait_sock *tw = NULL;
+
+	gmtp_print_function();
+
+	if (gmtp_death_row.tw_count < gmtp_death_row.sysctl_max_tw_buckets) {
+		gmtp_print_debug("We entered in if...");
+//		tw = inet_twsk_alloc(sk, state);
+	}
+
+	if (tw != NULL) {
+//		const struct inet_connection_sock *icsk = inet_csk(sk);
+//		const int rto = (icsk->icsk_rto << 2) - (icsk->icsk_rto >> 1);
+//#if IS_ENABLED(CONFIG_IPV6)
+//		if (tw->tw_family == PF_INET6) {
+//			tw->tw_v6_daddr = sk->sk_v6_daddr;
+//			tw->tw_v6_rcv_saddr = sk->sk_v6_rcv_saddr;
+//			tw->tw_ipv6only = sk->sk_ipv6only;
+//		}
+//#endif
+//		/* Linkage updates.*/
+//		__inet_twsk_hashdance(tw, sk, &gmtp_inet_hashinfo);
+//
+//		/* Get the TIME_WAIT timeout firing.*/
+//		if (timeo < rto)
+//			timeo = rto;
+//
+//		tw->tw_timeout = GMTP_TIMEWAIT_LEN;
+//		if (state == GMTP_TIME_WAIT)
+//			timeo = GMTP_TIMEWAIT_LEN;
+//
+//		inet_twsk_schedule(tw, &gmtp_death_row, timeo,
+//				   GMTP_TIMEWAIT_LEN);
+//		inet_twsk_put(tw);
+	} else {
+		/* If we're out of memory, just CLOSE this
+		 * socket up.
+		 */
+
+		gmtp_print_warning("time wait bucket table overflow!");
+	}
+
+	gmtp_done(sk);
+}
+
+struct sock *gmtp_create_openreq_child(struct sock *sk,
+				       const struct request_sock *req,
+				       const struct sk_buff *skb)
+{
+	/*
+	 * Step 3: Process LISTEN state
+	 *
+	 *   (* Generate a new socket and switch to that socket *)
+	 *   Set S := new socket for this port pair
+	 */
+	struct sock *newsk = inet_csk_clone_lock(sk, req, GFP_ATOMIC);
+
+	gmtp_print_function();
+
+	if (newsk != NULL) {
+		struct gmtp_request_sock *dreq = gmtp_rsk(req);
+		struct inet_connection_sock *newicsk = inet_csk(newsk);
+		struct gmtp_sock *newdp = gmtp_sk(newsk);
+
+		newdp->role	    = GMTP_ROLE_SERVER;
+		memcpy(newdp->flowname, dreq->flowname, GMTP_FLOWNAME_LEN);
+		newicsk->icsk_rto   = GMTP_TIMEOUT_INIT;
+
+		/* Step 3: Process LISTEN state
+		 *
+		 *    Choose S.ISS (initial seqno)
+		 *    Set S.ISR, S.GSR from packet
+		 */
+		newdp->iss = dreq->iss;
+		newdp->gss = dreq->gss;
+		newdp->isr = dreq->isr;
+		newdp->gsr = dreq->gsr;
+
+
+		gmtp_init_xmit_timers(newsk);
+	}
+	return newsk;
+}
+EXPORT_SYMBOL_GPL(gmtp_create_openreq_child);
+
+/*
+ * Process an incoming packet for RESPOND sockets represented
+ * as an request_sock.
+ */
+struct sock *gmtp_check_req(struct sock *sk, struct sk_buff *skb,
+			    struct request_sock *req,
+			    struct request_sock **prev)
+{
+	struct sock *child = NULL;
+	struct gmtp_request_sock *greq = gmtp_rsk(req);
+	__be32 seq;
+
+	gmtp_print_function();
+
+ 	if (gmtp_hdr(skb)->type == GMTP_PKT_REQUEST) {
+
+ 		if(GMTP_SKB_CB(skb)->seq > greq->gsr) {
+ 			gmtp_print_debug("Retransmitted REQUEST\n");
+ 			greq->gsr = GMTP_SKB_CB(skb)->seq;
+ 			/*
+ 			 * Send another RESPONSE packet
+ 			 * To protect against Request floods, increment retrans
+ 			 * counter (backoff, monitored by gmtp_response_timer).
+ 			 */
+ 			inet_rtx_syn_ack(sk, req);
+ 		 }
+ 		/* Network Duplicate, discard packet */
+ 		return NULL;
+ 	}
+
+	GMTP_SKB_CB(skb)->reset_code = GMTP_RESET_CODE_PACKET_ERROR;
+
+	if (gmtp_hdr(skb)->type != GMTP_PKT_ROUTE_NOTIFY &&
+	    gmtp_hdr(skb)->type != GMTP_PKT_ACK &&
+	    gmtp_hdr(skb)->type != GMTP_PKT_DATAACK)
+		goto drop;
+
+	/* Check for invalid Sequence nuber */
+	seq = GMTP_SKB_CB(skb)->seq;
+	if(!(seq >= greq->iss && seq <= greq->gss)) {
+		gmtp_print_debug(
+				"Invalid Seq number: "
+				"seq=%llu, iss=%llu, gss=%llu\n",
+				(unsigned long long ) seq,
+				(unsigned long long ) greq->iss,
+				(unsigned long long ) greq->gss);
+		goto drop;
+	}
+
+	child = inet_csk(sk)->icsk_af_ops->syn_recv_sock(sk, skb, req, NULL);
+	if (child == NULL)
+		goto listen_overflow;
+
+	inet_csk_reqsk_queue_unlink(sk, req, prev);
+	inet_csk_reqsk_queue_removed(sk, req);
+	inet_csk_reqsk_queue_add(sk, req, child);
+out:
+	return child;
+listen_overflow:
+	gmtp_print_error("listen_overflow!\n");
+	GMTP_SKB_CB(skb)->reset_code = GMTP_RESET_CODE_TOO_BUSY;
+drop:
+	if (gmtp_hdr(skb)->type != GMTP_PKT_RESET)
+		req->rsk_ops->send_reset(sk, skb);
+
+	inet_csk_reqsk_queue_drop(sk, req, prev);
+	goto out;
+}
+EXPORT_SYMBOL_GPL(gmtp_check_req);
+
+/*
+ *  Queue segment on the new socket if the new socket is active,
+ *  otherwise we just shortcircuit this and continue with
+ *  the new socket.
+ */
+int gmtp_child_process(struct sock *parent, struct sock *child,
+		       struct sk_buff *skb)
+{
+	int ret = 0;
+	const int state = child->sk_state;
+
+	if (!sock_owned_by_user(child)) {
+		ret = gmtp_rcv_state_process(child, skb, gmtp_hdr(skb),
+					     skb->len);
+
+		/* Wakeup parent, send SIGIO */
+		if (state == GMTP_REQUEST_RECV && child->sk_state != state)
+			parent->sk_data_ready(parent);
+	} else {
+		/* Alas, it is possible again, because we do lookup
+		 * in main socket hash table and lock on listening
+		 * socket does not protect us more.
+		 */
+		__sk_add_backlog(child, skb);
+	}
+
+	bh_unlock_sock(child);
+	sock_put(child);
+	return ret;
+}
+
+EXPORT_SYMBOL_GPL(gmtp_child_process);
+
+void gmtp_reqsk_send_ack(struct sock *sk, struct sk_buff *skb,
+			 struct request_sock *rsk)
+{
+	gmtp_print_error("GMTP-ACK packets are never sent in LISTEN state");
+}
+EXPORT_SYMBOL_GPL(gmtp_reqsk_send_ack);
+
+int gmtp_reqsk_init(struct request_sock *req,
+		    struct gmtp_sock const *gp, struct sk_buff const *skb)
+{
+/*	struct gmtp_request_sock *greq = gmtp_rsk(req);*/
+
+	gmtp_print_function();
+
+	inet_rsk(req)->ir_rmt_port = gmtp_hdr(skb)->sport;
+	inet_rsk(req)->ir_num	   = ntohs(gmtp_hdr(skb)->dport);
+	inet_rsk(req)->acked	   = 0;
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(gmtp_reqsk_init);
+
diff --git a/linux-3.17.1/net/gmtp/output.c b/linux-3.17.1/net/gmtp/output.c
new file mode 100644
index 0000000..2c38b38
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/output.c
@@ -0,0 +1,597 @@
+#include <linux/kernel.h>
+#include <linux/skbuff.h>
+#include <linux/slab.h>
+#include <linux/types.h>
+#include <linux/if_ether.h>
+#include <asm/param.h>
+
+#include <net/inet_sock.h>
+#include <net/tcp.h>
+#include <net/sock.h>
+
+#include <uapi/linux/gmtp.h>
+#include <linux/gmtp.h>
+#include "gmtp.h"
+
+static inline void gmtp_event_ack_sent(struct sock *sk)
+{
+	inet_csk_clear_xmit_timer(sk, ICSK_TIME_DACK);
+}
+
+/* enqueue @skb on sk_send_head for retransmission, return clone to send now */
+static struct sk_buff *gmtp_skb_entail(struct sock *sk, struct sk_buff *skb) {
+	gmtp_print_function();
+	skb_set_owner_w(skb, sk);
+	WARN_ON(sk->sk_send_head);
+	sk->sk_send_head = skb;
+	return skb_clone(sk->sk_send_head, gfp_any());
+}
+/*
+ * All SKB's seen here are completely headerless. It is our
+ * job to build the GMTP header, and pass the packet down to
+ * IP so it can do the same plus pass the packet off to the
+ * device.
+ */
+static int gmtp_transmit_skb(struct sock *sk, struct sk_buff *skb) {
+
+	if (likely(skb != NULL)) {
+
+		struct inet_sock *inet = inet_sk(sk);
+		const struct inet_connection_sock *icsk = inet_csk(sk);
+		struct gmtp_sock *gp = gmtp_sk(sk);
+		struct gmtp_skb_cb *gcb = GMTP_SKB_CB(skb);
+		struct gmtp_hdr *gh;
+		const u32 gmtp_header_size = sizeof(struct gmtp_hdr) +
+				gmtp_packet_hdr_variable_len(gcb->type);
+		int err, set_ack = 1;
+
+		switch (gcb->type) {
+		case GMTP_PKT_DATA:
+			set_ack = 0;
+			/* fall through */
+		case GMTP_PKT_DATAACK:
+		case GMTP_PKT_RESET:
+			break;
+		case GMTP_PKT_REQUEST:
+			set_ack = 0;
+			/* Use ISS on the first (non-retransmitted) Request. */
+			if (icsk->icsk_retransmits == 0)
+				gcb->seq = gp->iss;
+			gp->req_stamp = jiffies_to_msecs(jiffies);
+			/* fall through */
+		default:
+			/*
+			 * Set owner/destructor: some skbs are allocated via
+			 * alloc_skb (e.g. when retransmission may happen).
+			 * Only Data, DataAck, and Reset packets should come
+			 * through here with skb->sk set.
+			 */
+			WARN_ON(skb->sk);
+			skb_set_owner_w(skb, sk);
+			break;
+		}
+
+		gh = gmtp_zeroed_hdr(skb, gmtp_header_size);
+
+		gh->version = GMTP_VERSION;
+		gh->type = gcb->type;
+		gh->sport = inet->inet_sport;
+		gh->dport = inet->inet_dport;
+		gh->hdrlen = gmtp_header_size;
+		gh->server_rtt = gp->role == GMTP_ROLE_SERVER ?
+				TO_U8(gp->tx_rtt) : TO_U8(gp->rx_rtt);
+
+		memcpy(gh->flowname, gp->flowname, GMTP_FLOWNAME_LEN);
+
+		if (gcb->type == GMTP_PKT_FEEDBACK)
+			gh->transm_r = gp->rx_max_rate;
+		else
+			gh->transm_r = (__be32) gp->tx_max_rate;
+
+		if (gcb->type == GMTP_PKT_RESET)
+			gmtp_hdr_reset(skb)->reset_code = gcb->reset_code;
+
+		if(gcb->type == GMTP_PKT_DATA) {
+			struct gmtp_hdr_data *gh_data = gmtp_hdr_data(skb);
+			gh_data->tstamp = jiffies_to_msecs(jiffies);
+		}
+
+		gcb->seq = ++gp->gss;
+		if (set_ack) {
+			struct gmtp_hdr_ack *gack = gmtp_hdr_ack(skb);
+			gack->ackcode = gcb->ackcode;
+			gcb->seq = --gp->gss;
+			gmtp_event_ack_sent(sk);
+		}
+		gh->seq = gcb->seq;
+
+		err = icsk->icsk_af_ops->queue_xmit(sk, skb, &inet->cork.fl);
+		return net_xmit_eval(err);
+	}
+	return -ENOBUFS;
+}
+
+unsigned int gmtp_sync_mss(struct sock *sk, u32 pmtu)
+{
+	struct inet_connection_sock *icsk = inet_csk(sk);
+	struct gmtp_sock *gp = gmtp_sk(sk);
+	u32 cur_mps = pmtu;
+
+	gmtp_print_function();
+
+	/* Account for header lengths and IPv4/v6 option overhead */
+	/* FIXME Account variable part of GMTP Header */
+	cur_mps -= (icsk->icsk_af_ops->net_header_len + icsk->icsk_ext_hdr_len +
+		    sizeof(struct gmtp_hdr));
+
+	/* And store cached results */
+	icsk->icsk_pmtu_cookie = pmtu;
+	gp->mss = cur_mps;
+
+	gmtp_print_debug("mss: %u", gp->mss);
+
+	return cur_mps;
+}
+EXPORT_SYMBOL_GPL(gmtp_sync_mss);
+
+void gmtp_write_space(struct sock *sk)
+{
+	struct socket_wq *wq;
+
+	rcu_read_lock();
+	wq = rcu_dereference(sk->sk_wq);
+	if (wq_has_sleeper(wq))
+		wake_up_interruptible(&wq->wait);
+	/* Should agree with poll, otherwise some programs break */
+	if (sock_writeable(sk))
+		sk_wake_async(sk, SOCK_WAKE_SPACE, POLL_OUT);
+
+	rcu_read_unlock();
+}
+
+/**
+ * gmtp_retransmit_skb  -  Retransmit Request, Close, or CloseReq packets
+ * This function expects sk->sk_send_head to contain the original skb.
+ */
+int gmtp_retransmit_skb(struct sock *sk)
+{
+	WARN_ON(sk->sk_send_head == NULL);
+
+	if (inet_csk(sk)->icsk_af_ops->rebuild_header(sk) != 0)
+		return -EHOSTUNREACH; /* Routing failure or similar. */
+
+	/* this count is used to distinguish original and retransmitted skb */
+	inet_csk(sk)->icsk_retransmits++;
+
+	return gmtp_transmit_skb(sk, skb_clone(sk->sk_send_head, GFP_ATOMIC));
+}
+
+struct sk_buff *gmtp_make_register_reply(struct sock *sk, struct dst_entry *dst,
+				   struct request_sock *req)
+{
+	struct gmtp_hdr *gh;
+	struct gmtp_request_sock *greq;
+
+	const u32 gmtp_header_size = sizeof(struct gmtp_hdr) +
+			gmtp_packet_hdr_variable_len(GMTP_PKT_REGISTER_REPLY);
+
+	struct sk_buff *skb = sock_wmalloc(sk, sk->sk_prot->max_header, 1,
+			GFP_ATOMIC);
+
+	gmtp_print_function();
+
+	if (skb == NULL)
+		return NULL;
+
+	/* Reserve space for headers. */
+	skb_reserve(skb, sk->sk_prot->max_header);
+
+	skb_dst_set(skb, dst_clone(dst));
+
+	greq = gmtp_rsk(req);
+	if (inet_rsk(req)->acked)	/* increase GSS upon retransmission */
+		greq->gss++;
+	GMTP_SKB_CB(skb)->type = GMTP_PKT_REGISTER_REPLY;
+	GMTP_SKB_CB(skb)->seq  = greq->gss;
+
+	/* Build header */
+	gh = gmtp_zeroed_hdr(skb, gmtp_header_size);
+
+	/* At this point, Register-Reply specific header is zeroed. */
+	gh->sport	= htons(inet_rsk(req)->ir_num);
+	gh->dport	= inet_rsk(req)->ir_rmt_port;
+	gh->type	= GMTP_PKT_REGISTER_REPLY;
+	gh->seq 	= greq->gss;
+	gh->server_rtt	= TO_U8(gmtp_sk(sk)->tx_rtt);
+	gh->transm_r	= (__be32) gmtp_sk(sk)->tx_max_rate;
+	gh->hdrlen	= gmtp_header_size;
+	memcpy(gh->flowname, greq->flowname, GMTP_FLOWNAME_LEN);
+
+	/* We use `acked' to remember that a Register-Reply was already sent. */
+	inet_rsk(req)->acked = 1;
+
+	return skb;
+}
+EXPORT_SYMBOL_GPL(gmtp_make_register_reply);
+
+
+/* answer offending packet in @rcv_skb with Reset from control socket @ctl */
+struct sk_buff *gmtp_ctl_make_reset(struct sock *sk, struct sk_buff *rcv_skb)
+{
+	struct gmtp_hdr *rxgh = gmtp_hdr(rcv_skb), *gh;
+	struct gmtp_sock *gp = gmtp_sk(sk);
+	struct gmtp_skb_cb *gcb = GMTP_SKB_CB(rcv_skb);
+	const u32 gmtp_hdr_reset_len = sizeof(struct gmtp_hdr) +
+			sizeof(struct gmtp_hdr_reset);
+
+	struct gmtp_hdr_reset *ghr;
+	struct sk_buff *skb;
+
+	gmtp_print_function();
+
+	skb = alloc_skb(sk->sk_prot->max_header, GFP_ATOMIC);
+	if (skb == NULL)
+		return NULL;
+
+	skb_reserve(skb, sk->sk_prot->max_header);
+
+	/* FIXME Insert reset data in GMTP header (variable part) */
+
+	/* Swap the send and the receive. */
+	gh = gmtp_zeroed_hdr(skb, gmtp_hdr_reset_len);
+	gh->type	= GMTP_PKT_RESET;
+	gh->sport	= rxgh->dport;
+	gh->dport	= rxgh->sport;
+	gh->hdrlen	= gmtp_hdr_reset_len;
+	gh->seq 	= gp->iss;
+	gh->server_rtt	= TO_U8(gp->tx_rtt);
+	gh->transm_r	= (__be32) gp->tx_max_rate;
+	memcpy(gh->flowname, gp->flowname, GMTP_FLOWNAME_LEN);
+
+	ghr = gmtp_hdr_reset(skb);
+	ghr->reset_code = gcb->reset_code;
+
+	switch (gcb->reset_code) {
+	case GMTP_RESET_CODE_PACKET_ERROR:
+		ghr->reset_data[0] = rxgh->type;
+		break;
+	case GMTP_RESET_CODE_MANDATORY_ERROR:
+		memcpy(ghr->reset_data, gcb->reset_data, 3);
+		break;
+	default:
+		break;
+	}
+
+	return skb;
+}
+EXPORT_SYMBOL_GPL(gmtp_ctl_make_reset);
+
+int gmtp_send_reset(struct sock *sk, enum gmtp_reset_codes code)
+{
+	struct sk_buff *skb;
+	int err = inet_csk(sk)->icsk_af_ops->rebuild_header(sk);
+
+	gmtp_print_function();
+
+	if (err != 0)
+		return err;
+
+	skb = sock_wmalloc(sk, sk->sk_prot->max_header, 1, GFP_ATOMIC);
+	if (skb == NULL)
+		return -ENOBUFS;
+
+	/* Reserve space for headers and prepare control bits. */
+	skb_reserve(skb, sk->sk_prot->max_header);
+	GMTP_SKB_CB(skb)->type = GMTP_PKT_RESET;
+	GMTP_SKB_CB(skb)->reset_code = code;
+
+	return gmtp_transmit_skb(sk, skb);
+}
+
+/*
+ * Do all connect socket setups that can be done AF independent.
+ */
+int gmtp_connect(struct sock *sk)
+{
+	struct sk_buff *skb;
+	struct gmtp_sock *gp = gmtp_sk(sk);
+	struct dst_entry *dst = __sk_dst_get(sk);
+	struct inet_sock *inet = inet_sk(sk);
+	struct inet_connection_sock *icsk = inet_csk(sk);
+
+	struct gmtp_client_entry *client_entry;
+	int err = 0;
+
+	gmtp_print_function();
+
+	sk->sk_err = 0;
+	sock_reset_flag(sk, SOCK_DONE);
+
+	gmtp_sync_mss(sk, dst_mtu(dst));
+
+	/** First transmission: gss <- iss */
+	gp->gss = gp->iss;
+
+	skb = alloc_skb(sk->sk_prot->max_header, sk->sk_allocation);
+	if (unlikely(skb == NULL))
+		return -ENOBUFS;
+
+	/* Reserve space for headers. */
+	skb_reserve(skb, sk->sk_prot->max_header);
+	GMTP_SKB_CB(skb)->type = GMTP_PKT_REQUEST;
+
+	client_entry = gmtp_lookup_media(gmtp_hashtable, gp->flowname);
+	if(client_entry == NULL)
+		err = gmtp_add_client_entry(gmtp_hashtable, gp->flowname,
+				inet->inet_saddr, inet->inet_sport, 0, 0);
+	else
+		gmtp_list_add_client(0, inet->inet_saddr, inet->inet_sport, 0,
+				&client_entry->clients->list);
+
+	pr_info("Err: %d\n", err);
+
+	gmtp_transmit_skb(sk, gmtp_skb_entail(sk, skb));
+
+	icsk->icsk_retransmits = 0;
+	inet_csk_reset_xmit_timer(sk, ICSK_TIME_RETRANS,
+					  icsk->icsk_rto, GMTP_RTO_MAX);
+	return err;
+}
+EXPORT_SYMBOL_GPL(gmtp_connect);
+
+void gmtp_send_ack(struct sock *sk, __u8 ackcode)
+{
+	gmtp_print_function();
+
+	/* If we have been reset, we may not send again. */
+	if(sk->sk_state != GMTP_CLOSED) {
+
+		struct sk_buff *skb = alloc_skb(sk->sk_prot->max_header,
+		GFP_ATOMIC);
+
+		/* FIXME How to define the ackcode in this case? */
+		if(skb == NULL) {
+			inet_csk_schedule_ack(sk);
+			inet_csk(sk)->icsk_ack.ato = TCP_ATO_MIN;
+			inet_csk_reset_xmit_timer(sk, ICSK_TIME_DACK,
+			TCP_DELACK_MAX,
+			GMTP_RTO_MAX);
+			return;
+		}
+
+		/* Reserve space for headers */
+		skb_reserve(skb, sk->sk_prot->max_header);
+		GMTP_SKB_CB(skb)->type = GMTP_PKT_ACK;
+		GMTP_SKB_CB(skb)->ackcode = ackcode;
+		gmtp_transmit_skb(sk, skb);
+	}
+}
+EXPORT_SYMBOL_GPL(gmtp_send_ack);
+
+
+void gmtp_send_feedback(struct sock *sk)
+{
+	gmtp_pr_func();
+
+	if(sk->sk_state != GMTP_CLOSED) {
+
+		struct sk_buff *skb = alloc_skb(sk->sk_prot->max_header,
+		GFP_ATOMIC);
+
+		/* Reserve space for headers */
+		skb_reserve(skb, sk->sk_prot->max_header);
+		GMTP_SKB_CB(skb)->type = GMTP_PKT_FEEDBACK;
+		gmtp_transmit_skb(sk, skb);
+	}
+}
+EXPORT_SYMBOL_GPL(gmtp_send_feedback);
+
+/*
+ * Send a GMTP_PKT_CLOSE/CLOSEREQ. The caller locks the socket for us.
+ * This cannot be allowed to fail queueing a GMTP_PKT_CLOSE/CLOSEREQ frame
+ * under any circumstances.
+ */
+void gmtp_send_close(struct sock *sk, const int active)
+{
+	struct sk_buff *skb;
+	const gfp_t prio = active ? GFP_KERNEL : GFP_ATOMIC;
+
+	gmtp_print_function();
+
+	skb = alloc_skb(sk->sk_prot->max_header, prio);
+	if(skb == NULL)
+		return;
+
+	/* Reserve space for headers and prepare control bits. */
+	skb_reserve(skb, sk->sk_prot->max_header);
+	GMTP_SKB_CB(skb)->type = GMTP_PKT_CLOSE;
+
+	if(active) {
+		skb = gmtp_skb_entail(sk, skb);
+		/*
+		 * TODO Verify if we need Retransmission timer
+		 * for active-close...
+		 */
+		/*inet_csk_reset_xmit_timer(sk, ICSK_TIME_RETRANS,
+				GMTP_TIMEOUT_INIT, GMTP_RTO_MAX);*/
+	}
+	gmtp_transmit_skb(sk, skb);
+}
+
+/**
+ * gmtp_wait_for_delay  -  Await GMTP send permission
+ * @sk:    socket to wait for
+ * @delay: timeout in jiffies
+ *
+ * To delay the send time in process context.
+ */
+static long gmtp_wait_for_delay(struct sock *sk, unsigned long delay)
+{
+	DEFINE_WAIT(wait);
+	long remaining;
+
+	prepare_to_wait(sk_sleep(sk), &wait, TASK_UNINTERRUPTIBLE);
+	sk->sk_write_pending++;
+	release_sock(sk);
+
+	remaining = schedule_timeout(delay);
+
+	lock_sock(sk);
+	sk->sk_write_pending--;
+	finish_wait(sk_sleep(sk), &wait);
+
+	if (signal_pending(current) || sk->sk_err)
+		return -1;
+	return remaining;
+}
+
+static inline unsigned int packet_len(struct sk_buff *skb)
+{
+	/* Total = Data + (GMTP + IP + MAC) */
+	return skb->len + (gmtp_hdr_len(skb) + 20 + ETH_HLEN);
+}
+
+static inline unsigned int payload_len(struct sk_buff *skb)
+{
+	/* Data = Total - (GMTP + IP + MAC) */
+	return skb->len - (gmtp_hdr_len(skb) + 20 + ETH_HLEN);
+}
+
+/*static inline void packet_sent(struct gmtp_sock *gp, int data_len)*/
+static inline void packet_sent(struct sock *sk, struct sk_buff *skb)
+{
+	struct gmtp_sock *gp = gmtp_sk(sk);
+	unsigned long elapsed = 0;
+	int data_len = payload_len(skb);
+
+	if(gp->tx_dpkts_sent == 0)
+		gmtp_pr_info("Start sending data packets...");
+
+	++gp->tx_dpkts_sent;
+	gp->tx_data_sent += data_len;
+	gp->tx_bytes_sent += skb->len;
+
+	gp->tx_last_stamp = jiffies;
+	if(gp->tx_first_stamp == 0) { /* This is the first sent */
+		gp->tx_first_stamp = gp->tx_last_stamp;
+		gp->tx_time_sample = jiffies;
+		gp->tx_byte_sample = gp->tx_bytes_sent;
+	}
+
+	if(gp->tx_byte_budget != INT_MIN)
+		gp->tx_byte_budget -= (int) skb->len;
+
+	elapsed = jiffies - gp->tx_first_stamp;
+	if(gp->tx_first_stamp != 0 && elapsed != 0)
+		gp->tx_total_rate = mult_frac(HZ, gp->tx_bytes_sent, elapsed);
+
+	if(gp->tx_dpkts_sent >= gp->tx_sample_len) {
+
+		gp->tx_time_sample = jiffies - gp->tx_time_sample;
+		gp->tx_byte_sample = gp->tx_bytes_sent - gp->tx_byte_sample;
+
+		if(gp->tx_time_sample != 0 && gp->tx_byte_sample != 0)
+			gp->tx_sample_rate = mult_frac(HZ,
+							gp->tx_byte_sample,
+							gp->tx_time_sample);
+	}
+}
+
+static void gmtp_xmit_packet(struct sock *sk, struct sk_buff *skb) {
+
+	int err;
+
+	GMTP_SKB_CB(skb)->type = GMTP_PKT_DATA;
+
+	err = gmtp_transmit_skb(sk, skb);
+	if (err)
+		gmtp_pr_error("transmit_skb() returned err=%d\n", err);
+
+	/*
+	 * Register this one as sent (even if an error occurred).
+	 */
+	packet_sent(sk, skb);
+}
+
+/**
+ * Return difference between actual tx_rate and max tx_rate
+ * If return > 0, actual tx_rate is greater than max tx_rate
+ */
+static long get_rate_gap(struct gmtp_sock *gp, int acum)
+{
+	long rate = (long)gp->tx_sample_rate;
+	long tx = (long)gp->tx_max_rate;
+	long coef_adj = 0;
+
+	if(gp->tx_dpkts_sent < GMTP_MIN_SAMPLE_LEN)
+		return 0;
+
+	if(rate <= gp->tx_total_rate/2) /* Eliminate discrepancies */
+		rate = (long)gp->tx_total_rate;
+
+	coef_adj = mult_frac((rate - tx), 100, tx);
+
+	if(acum) {
+		coef_adj += gp->tx_adj_budget;
+		if(coef_adj > 110 || coef_adj < -90)
+			gp->tx_adj_budget = 0;
+		else
+			gp->tx_adj_budget += coef_adj;
+	}
+
+	return coef_adj;
+}
+
+void gmtp_write_xmit(struct sock *sk, struct sk_buff *skb)
+{
+	struct gmtp_sock *gp = gmtp_sk(sk);
+	int len = (int) packet_len(skb);
+	unsigned long elapsed = 0;
+	long delay = 0, delay2 = 0, delay_budget = 0;
+
+	/** TODO Continue tests with different scales... */
+	static const int scale = 1;
+	/*static const int scale = HZ/100;*/
+
+	if(gp->tx_max_rate == 0UL)
+		goto send;
+
+	/*
+	pr_info("[%d] Tx rate: %lu bytes/s\n", gp->pkt_sent, gp->total_rate);
+	pr_info("[-] Tx rate (sample): %lu bytes/s\n", gp->sample_rate);
+	*/
+
+	elapsed = jiffies - gp->tx_last_stamp; /* time elapsed since last sent */
+
+	if(gp->tx_byte_budget >= mult_frac(len, 3, 4)) {
+		goto send;
+	} else if(gp->tx_byte_budget != INT_MIN) {
+		delay_budget = scale;
+		goto wait;
+	}
+
+	delay = DIV_ROUND_CLOSEST((HZ * len), gp->tx_max_rate);
+	delay2 = delay - elapsed;
+
+	if(delay2 > 0)
+		delay2 += mult_frac(delay2, get_rate_gap(gp, 1), 100);
+
+wait:
+	delay2 += delay_budget;
+	if(delay2 > 0)
+		gmtp_wait_for_delay(sk, delay2);
+
+	/*
+	 * TODO More tests with byte_budgets...
+	 */
+	if(delay <= 0)
+		gp->tx_byte_budget = mult_frac(scale, gp->tx_max_rate, HZ) -
+			mult_frac(gp->tx_byte_budget, (int) get_rate_gap(gp, 0), 100);
+	else
+		gp->tx_byte_budget = INT_MIN;
+
+send:
+	gmtp_xmit_packet(sk, skb);
+}
+EXPORT_SYMBOL_GPL(gmtp_write_xmit);
+
diff --git a/linux-3.17.1/net/gmtp/proto.c b/linux-3.17.1/net/gmtp/proto.c
new file mode 100644
index 0000000..2d0dc55
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/proto.c
@@ -0,0 +1,837 @@
+#include <asm/ioctls.h>
+
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/types.h>
+
+#include <net/inet_hashtables.h>
+#include <net/sock.h>
+#include <net/tcp.h>
+
+#include <uapi/linux/gmtp.h>
+#include <linux/gmtp.h>
+#include "gmtp.h"
+#include "mcc.h"
+
+struct percpu_counter gmtp_orphan_count;
+EXPORT_SYMBOL_GPL(gmtp_orphan_count);
+
+struct inet_hashinfo gmtp_inet_hashinfo;
+EXPORT_SYMBOL_GPL(gmtp_inet_hashinfo);
+
+struct gmtp_hashtable* gmtp_hashtable;
+EXPORT_SYMBOL_GPL(gmtp_hashtable);
+
+const char *gmtp_packet_name(const int type)
+{
+	static const char *const gmtp_packet_names[] = {
+		[GMTP_PKT_REQUEST]  = "REQUEST",
+		[GMTP_PKT_REQUESTNOTIFY]  = "REQUESTNOTIFY",
+		[GMTP_PKT_RESPONSE] = "RESPONSE",
+		[GMTP_PKT_REGISTER] = "REGISTER",
+		[GMTP_PKT_REGISTER_REPLY] = "REGISTER_REPLY",
+		[GMTP_PKT_ROUTE_NOTIFY] = "ROUTE_NOTIFY",
+		[GMTP_PKT_RELAYQUERY] = "RELAYQUERY",
+		[GMTP_PKT_RELAYQUERY_REPLY] = "RELAYQUERY_REPLY",
+		[GMTP_PKT_DATA]	    = "DATA",
+		[GMTP_PKT_ACK]	    = "ACK",
+		[GMTP_PKT_DATAACK]  = "DATAACK",
+		[GMTP_PKT_MEDIADESC]  = "MEDIADESC",
+		[GMTP_PKT_DATAPULL_REQUEST]  = "DATAPULL_REQUEST",
+		[GMTP_PKT_DATAPULL_RESPONSE]  = "DATAPULL_RESPONSE",
+		[GMTP_PKT_ELECT_REQUEST]  = "ELECT_REQUEST",
+		[GMTP_PKT_ELECT_RESPONSE]  = "ELECT_RESPONSE",
+		[GMTP_PKT_CLOSE]    = "CLOSE",
+		[GMTP_PKT_RESET]    = "RESET",
+		[GMTP_PKT_FEEDBACK]    = "REPORTER_FEEDBACK",
+	};
+
+	if (type >= GMTP_NR_PKT_TYPES)
+		return "INVALID";
+	else
+		return gmtp_packet_names[type];
+}
+EXPORT_SYMBOL_GPL(gmtp_packet_name);
+
+void gmtp_done(struct sock *sk)
+{
+	gmtp_print_function();
+
+	gmtp_set_state(sk, GMTP_CLOSED);
+	gmtp_clear_xmit_timers(sk);
+
+	sk->sk_shutdown = SHUTDOWN_MASK;
+
+	if(!sock_flag(sk, SOCK_DEAD))
+		sk->sk_state_change(sk);
+	else
+		inet_csk_destroy_sock(sk);
+}
+EXPORT_SYMBOL_GPL(gmtp_done);
+
+const char *gmtp_state_name(const int state)
+{
+	static const char *const gmtp_state_names[] = {
+	[GMTP_OPEN]		= "OPEN",
+	[GMTP_REQUESTING]	= "REQUESTING",
+	[GMTP_LISTEN]		= "LISTEN",
+	[GMTP_REQUEST_RECV]		= "REQUEST/REGISTER_RECEIVED",
+	[GMTP_ACTIVE_CLOSEREQ]	= "CLOSEREQ",
+	[GMTP_PASSIVE_CLOSE]	= "PASSIVE_CLOSE",
+	[GMTP_CLOSING]		= "CLOSING",
+	[GMTP_TIME_WAIT]	= "TIME_WAIT",
+	[GMTP_CLOSED]		= "CLOSED",
+	};
+
+	if (state >= GMTP_PKT_INVALID)
+		return "INVALID STATE!";
+	else
+		return gmtp_state_names[state];
+}
+EXPORT_SYMBOL_GPL(gmtp_state_name);
+
+/**
+ * @str size MUST HAVE len >= GMTP_FLOWNAME_STR_LEN
+ */
+void flowname_str(__u8* str, const __u8 *flowname)
+{
+	int i;
+	for(i = 0; i < GMTP_FLOWNAME_LEN; ++i)
+		sprintf(&str[i*2], "%02x", flowname[i]);
+}
+EXPORT_SYMBOL(flowname_str);
+
+/**
+ * @str size MUST HAVE len >= GMTP_FLOWNAME_STR_LEN
+ */
+void relayid_str(__u8* str, const __u8 *relayid)
+{
+	flowname_str(str, relayid);
+}
+
+void print_route(struct gmtp_hdr_route *route)
+{
+	int i;
+	unsigned char relayid[GMTP_RELAY_ID_LEN];
+	const struct gmtp_relay *gr;
+
+	if(route->nrelays <= 0)
+		return;
+
+	gr = &route->relay_list[route->nrelays-1];
+	relayid_str(relayid, gr->relay_id);
+
+	for(i=0; i < route->nrelays; ++i)
+		pr_info("Route[%d]: %s :: %pI4\n", i, relayid, &gr->relay_ip);
+}
+EXPORT_SYMBOL(print_route);
+
+void gmtp_set_state(struct sock *sk, const int state)
+{
+	const int oldstate = sk->sk_state;
+
+	gmtp_print_function();
+	gmtp_print_debug("%s --> %s\n", gmtp_state_name(oldstate),
+			gmtp_state_name(state));
+
+	if(state == oldstate)
+		gmtp_print_warning("new state == old state!");
+
+	switch(state) {
+	case GMTP_CLOSED:
+		/* TODO Implement protocol stats
+		if(oldstate == GMTP_OPEN || oldstate == GMTP_CLOSING)
+			DCCP_INC_STATS(DCCP_MIB_ESTABRESETS); */
+
+		sk->sk_prot->unhash(sk);
+		if(inet_csk(sk)->icsk_bind_hash != NULL
+				&& !(sk->sk_userlocks & SOCK_BINDPORT_LOCK))
+			inet_put_port(sk);
+		/* fall through */
+	}
+
+	/* Change state AFTER socket is unhashed to avoid closed
+	 * socket sitting in hash tables.
+	 */
+	sk->sk_state = state;
+}
+EXPORT_SYMBOL_GPL(gmtp_set_state);
+
+static void gmtp_finish_passive_close(struct sock *sk)
+{
+	gmtp_print_function();
+	if(sk->sk_state == GMTP_PASSIVE_CLOSE) {
+		/* Node (client or server) has received Close packet. */
+		gmtp_send_reset(sk, GMTP_RESET_CODE_CLOSED);
+		gmtp_set_state(sk, GMTP_CLOSED);
+	}
+}
+
+int gmtp_init_sock(struct sock *sk)
+{
+	struct gmtp_sock *gp = gmtp_sk(sk);
+	struct inet_connection_sock *icsk = inet_csk(sk);
+	int ret = 0;
+
+	gmtp_print_function();
+
+	icsk->icsk_rto		= GMTP_TIMEOUT_INIT;
+	icsk->icsk_syn_retries	= TCP_SYN_RETRIES;
+	sk->sk_state		= GMTP_CLOSED;
+	sk->sk_write_space	= gmtp_write_space;
+	icsk->icsk_sync_mss	= gmtp_sync_mss;
+
+	gp->mss			= GMTP_DEFAULT_MSS;
+	gp->role		= GMTP_ROLE_UNDEFINED;
+
+	gp->req_stamp		= 0;
+	gp->tx_rtt		= GMTP_DEFAULT_RTT;
+	gp->relay_rtt		= 0;
+
+	gp->rx_max_rate 	= 0;
+
+	gp->tx_dpkts_sent 	= 0;
+	gp->tx_data_sent 	= 0;
+	gp->tx_bytes_sent 	= 0;
+
+	gp->tx_sample_len 	= GMTP_DEFAULT_SAMPLE_LEN;
+	gp->tx_time_sample 	= 0;
+	gp->tx_byte_sample 	= 0;
+
+	gp->tx_sample_rate 	= 0;
+	gp->tx_total_rate 	= 0;
+
+	gp->tx_first_stamp	= 0UL;
+	gp->tx_last_stamp	= 0UL;
+	gp->tx_max_rate		= 0UL; /* Unlimited */
+	gp->tx_byte_budget	= INT_MIN;
+	gp->tx_adj_budget	= 0;
+
+	memset(gp->flowname, 0, GMTP_FLOWNAME_LEN);
+
+	gmtp_init_xmit_timers(sk);
+
+	return ret;
+}
+EXPORT_SYMBOL_GPL(gmtp_init_sock);
+
+void gmtp_destroy_sock(struct sock *sk)
+{
+	gmtp_pr_func();
+
+	if(gmtp_sk(sk)->role == GMTP_ROLE_REPORTER)
+		mcc_rx_exit(sk);
+
+	if (sk->sk_send_head != NULL) {
+		kfree_skb(sk->sk_send_head);
+		sk->sk_send_head = NULL;
+	}
+
+	/* Clean up a referenced GMTP bind bucket. */
+	if (inet_csk(sk)->icsk_bind_hash != NULL)
+		inet_put_port(sk);
+
+}
+EXPORT_SYMBOL_GPL(gmtp_destroy_sock);
+
+static void gmtp_terminate_connection(struct sock *sk)
+{
+	u8 next_state = GMTP_CLOSED;
+
+	gmtp_print_function();
+
+	switch (sk->sk_state) {
+	case GMTP_PASSIVE_CLOSE:
+		gmtp_finish_passive_close(sk);
+		break;
+	case GMTP_OPEN:
+		gmtp_send_close(sk, 1);
+
+		if (gmtp_sk(sk)->role == GMTP_ROLE_SERVER &&
+		    !gmtp_sk(sk)->server_timewait)
+			next_state = GMTP_ACTIVE_CLOSEREQ;
+		else
+			next_state = GMTP_CLOSING;
+		/* fall through */
+	default:
+		gmtp_set_state(sk, next_state);
+	}
+}
+
+void gmtp_close(struct sock *sk, long timeout)
+{
+	struct gmtp_sock *gp = gmtp_sk(sk);
+	struct sk_buff *skb;
+	u32 data_was_unread = 0;
+	int state;
+
+	gmtp_pr_func();
+	gmtp_pr_info("Closing connection...");
+	gmtp_pr_info("Timeout: %ld", timeout);
+	gmtp_pr_info("sk->st_state: %s", gmtp_state_name(sk->sk_state));
+
+	lock_sock(sk);
+
+	sk->sk_shutdown = SHUTDOWN_MASK;
+	if(sk->sk_state == GMTP_LISTEN) {
+		gmtp_set_state(sk, GMTP_CLOSED);
+
+		/* Special case. */
+		inet_csk_listen_stop(sk);
+
+		goto adjudge_to_death;
+	}
+	gmtp_print_debug("Stopping timers...");
+	sk_stop_timer(sk, &gp->xmit_timer);
+
+	/*
+	 * We need to flush the recv. buffs.  We do this only on the
+	 * descriptor close, not protocol-sourced closes, because the
+	 * reader process may not have drained the data yet!
+	 */
+	while((skb = __skb_dequeue(&sk->sk_receive_queue)) != NULL) {
+		data_was_unread += skb->len;
+		__kfree_skb(skb);
+	}
+
+	if(data_was_unread) {
+		/* Unread data was tossed, send an appropriate Reset Code */
+		gmtp_print_warning("ABORT with %u bytes unread\n",
+				data_was_unread);
+		gmtp_send_reset(sk, GMTP_RESET_CODE_ABORTED);
+		gmtp_set_state(sk, GMTP_CLOSED);
+	} else if(sock_flag(sk, SOCK_LINGER) && !sk->sk_lingertime) {
+		/* Check zero linger _after_ checking for unread data. */
+		sk->sk_prot->disconnect(sk, 0);
+	} else if(sk->sk_state != GMTP_CLOSED) {
+		/*
+		 * TODO Normal connection termination.
+		 * May need to wait if there are still packets in the
+		 * TX queue that are delayed by the CCID.
+		 */
+		gmtp_print_debug("TODO: Normal connection termination.");
+		gmtp_terminate_connection(sk);
+	}
+
+	/*
+	 * Flush write queue. This may be necessary in several cases:
+	 * - we have been closed by the peer but still have application data;
+	 * - abortive termination (unread data or zero linger time),
+	 * - normal termination but queue could not be flushed within time limit
+	 */
+	__skb_queue_purge(&sk->sk_write_queue);
+	sk_stream_wait_close(sk, timeout);
+
+adjudge_to_death:
+	state = sk->sk_state;
+	sock_hold(sk);
+	sock_orphan(sk);
+
+	/*
+	 * It is the last release_sock in its life. It will remove backlog.
+	 */
+	release_sock(sk);
+	/*
+	 * Now socket is owned by kernel and we acquire BH lock
+	 * to finish close. No need to check for user refs.
+	 */
+	local_bh_disable();
+	bh_lock_sock(sk);
+	WARN_ON(sock_owned_by_user(sk));
+
+	percpu_counter_inc(sk->sk_prot->orphan_count);
+
+	/* Have we already been destroyed by a softirq or backlog? */
+	if(state != GMTP_CLOSED && sk->sk_state == GMTP_CLOSED) {
+		gmtp_print_debug("we already been destroyed by a "
+				"softirq or backlog");
+		goto out;
+	}
+
+	if(sk->sk_state == GMTP_CLOSED)
+		inet_csk_destroy_sock(sk);
+
+	/* Otherwise, socket is reprieved until protocol close. */
+out:
+	bh_unlock_sock(sk);
+	local_bh_enable();
+	sock_put(sk);
+}
+EXPORT_SYMBOL_GPL(gmtp_close);
+
+static inline int gmtp_need_reset(int state)
+{
+	return state != GMTP_CLOSED && state != GMTP_LISTEN &&
+	       state != GMTP_REQUESTING;
+}
+
+int gmtp_disconnect(struct sock *sk, int flags)
+{
+	struct inet_connection_sock *icsk = inet_csk(sk);
+	struct inet_sock *inet = inet_sk(sk);
+	int err = 0;
+	const int old_state = sk->sk_state;
+
+	gmtp_print_function();
+
+	if(old_state != GMTP_CLOSED)
+		gmtp_set_state(sk, GMTP_CLOSED);
+
+
+	/* This corresponds to the ABORT function of RFC793, sec. 3.8
+	 * TCP uses a RST segment, DCCP a Reset packet with Code 2, "Aborted".
+	 */
+	if(old_state == GMTP_LISTEN) {
+		inet_csk_listen_stop(sk);
+	} else if(gmtp_need_reset(old_state)) {
+		gmtp_send_reset(sk, GMTP_RESET_CODE_ABORTED);
+		sk->sk_err = ECONNRESET;
+	} else if(old_state == GMTP_REQUESTING)
+		sk->sk_err = ECONNRESET;
+
+	gmtp_clear_xmit_timers(sk);
+
+	__skb_queue_purge(&sk->sk_receive_queue);
+	__skb_queue_purge(&sk->sk_write_queue);
+	if(sk->sk_send_head != NULL) {
+		__kfree_skb(sk->sk_send_head);
+		sk->sk_send_head = NULL;
+	}
+
+	inet->inet_dport = 0;
+
+	if(!(sk->sk_userlocks & SOCK_BINDADDR_LOCK))
+		inet_reset_saddr(sk);
+
+	sk->sk_shutdown = 0;
+	sock_reset_flag(sk, SOCK_DONE);
+
+	icsk->icsk_backoff = 0;
+	inet_csk_delack_init(sk);
+	__sk_dst_reset(sk);
+
+	WARN_ON(inet->inet_num && !icsk->icsk_bind_hash);
+
+	sk->sk_error_report(sk);
+	return err;
+}
+EXPORT_SYMBOL_GPL(gmtp_disconnect);
+
+int gmtp_ioctl(struct sock *sk, int cmd, unsigned long arg)
+{
+	int rc = -ENOTCONN;
+
+	gmtp_print_function();
+	lock_sock(sk);
+
+	if (sk->sk_state == GMTP_LISTEN)
+		goto out;
+
+	switch (cmd) {
+	case SIOCINQ: {
+		struct sk_buff *skb;
+		unsigned long amount = 0;
+
+		skb = skb_peek(&sk->sk_receive_queue);
+		if (skb != NULL) {
+			/*
+			 * We will only return the amount of this packet since
+			 * that is all that will be read.
+			 */
+			amount = skb->len;
+		}
+		rc = put_user(amount, (int __user *)arg);
+	}
+	break;
+	default:
+		rc = -ENOIOCTLCMD;
+		break;
+	}
+out:
+	release_sock(sk);
+	return rc;
+}
+EXPORT_SYMBOL_GPL(gmtp_ioctl);
+
+int gmtp_recvmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg,
+		 size_t len, int nonblock, int flags, int *addr_len)
+{
+	const struct gmtp_hdr *gh;
+	long timeo;
+
+	lock_sock(sk);
+
+	if(sk->sk_state == GMTP_LISTEN) {
+		len = -ENOTCONN;
+		goto out;
+	}
+
+	timeo = sock_rcvtimeo(sk, nonblock);
+
+	do {
+		struct sk_buff *skb = skb_peek(&sk->sk_receive_queue);
+		if(skb == NULL)
+			goto verify_sock_status;
+
+		gh = gmtp_hdr(skb);
+
+		switch(gh->type) {
+		case GMTP_PKT_DATA:
+		case GMTP_PKT_DATAACK:
+			goto found_ok_skb;
+		case GMTP_PKT_CLOSE:
+			if(!(flags & MSG_PEEK))
+				gmtp_finish_passive_close(sk);
+			/* fall through */
+		case GMTP_PKT_RESET:
+			gmtp_print_debug("found fin (%s) ok!\n",
+					gmtp_packet_name(gh->type));
+			len = 0;
+			goto found_fin_ok;
+		default:
+			gmtp_print_debug("packet_type=%s\n",
+					gmtp_packet_name(gh->type));
+			sk_eat_skb(sk, skb, false);
+		}
+verify_sock_status:
+		if(sock_flag(sk, SOCK_DONE)) {
+			len = 0;
+			break;
+		}
+
+		if(sk->sk_err) {
+			len = sock_error(sk);
+			break;
+		}
+
+		if(sk->sk_shutdown & RCV_SHUTDOWN) {
+			len = 0;
+			break;
+		}
+
+		if(sk->sk_state == GMTP_CLOSED) {
+			if(!sock_flag(sk, SOCK_DONE)) {
+				/* This occurs when user tries to read
+				 * from never connected socket.
+				 */
+				len = -ENOTCONN;
+				break;
+			}
+			len = 0;
+			break;
+		}
+
+		if(!timeo) {
+			len = -EAGAIN;
+			break;
+		}
+
+		if(signal_pending(current)) {
+			len = sock_intr_errno(timeo);
+			break;
+		}
+
+		sk_wait_data(sk, &timeo);
+		continue;
+found_ok_skb:
+		if(len > skb->len)
+			len = skb->len;
+		else if(len < skb->len)
+			msg->msg_flags |= MSG_TRUNC;
+
+		if(skb_copy_datagram_iovec(skb, 0, msg->msg_iov, len)) {
+			/* Exception. Bailout! */
+			len = -EFAULT;
+			break;
+		}
+		if(flags & MSG_TRUNC)
+			len = skb->len;
+found_fin_ok:
+		if(!(flags & MSG_PEEK))
+			sk_eat_skb(sk, skb, false);
+		break;
+	} while(1);
+out:
+	release_sock(sk);
+	return len;
+}
+
+EXPORT_SYMBOL_GPL(gmtp_recvmsg);
+
+int gmtp_sendmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg,
+		size_t len)
+{
+	const struct gmtp_sock *gp = gmtp_sk(sk);
+	const int flags = msg->msg_flags;
+	const int noblock = flags & MSG_DONTWAIT;
+	struct sk_buff *skb;
+	int rc, size;
+	long timeo;
+
+	if (len > gp->mss)
+		return -EMSGSIZE;
+
+	lock_sock(sk);
+
+	timeo = sock_sndtimeo(sk, noblock);
+
+	/*
+	 * We have to use sk_stream_wait_connect here to set sk_write_pending,
+	 * so that the trick in gmtp_rcv_request_sent_state_process.
+	 */
+	/* Wait for a connection to finish. */
+	if ((1 << sk->sk_state) & ~(GMTPF_OPEN | GMTPF_PASSIVE_CLOSE))
+		if ((rc = sk_stream_wait_connect(sk, &timeo)) != 0)
+			goto out_release;
+
+	size = sk->sk_prot->max_header + len;
+	release_sock(sk);
+
+	skb = sock_alloc_send_skb(sk, size, noblock, &rc);
+
+	lock_sock(sk);
+	if (skb == NULL)
+		goto out_release;
+
+	skb_reserve(skb, sk->sk_prot->max_header);
+	rc = memcpy_fromiovec(skb_put(skb, len), msg->msg_iov, len);
+	if (rc != 0)
+		goto out_discard;
+
+	/**
+	 * FIXME Use a timer to rate-based congestion control protocols.
+	 * The timer will expire when congestion control permits to release
+	 * further packets into the network
+	 */
+	/*if (!timer_pending(&gp->xmit_timer))*/
+	gmtp_write_xmit(sk, skb);
+
+out_release:
+	release_sock(sk);
+	return rc ? : len;
+out_discard:
+	kfree_skb(skb);
+	goto out_release;
+
+}
+EXPORT_SYMBOL_GPL(gmtp_sendmsg);
+
+int inet_gmtp_listen(struct socket *sock, int backlog)
+{
+	struct sock *sk = sock->sk;
+	struct gmtp_sock *gs = gmtp_sk(sk);
+	unsigned char old_state;
+	int err;
+
+	gmtp_print_function();
+
+	lock_sock(sk);
+
+	err = -EINVAL;
+	if (sock->state != SS_UNCONNECTED || sock->type != SOCK_GMTP)
+		goto out;
+
+	old_state = sk->sk_state;
+	if (!((1 << old_state) & (GMTPF_CLOSED | GMTPF_LISTEN)))
+		goto out;
+
+	/* Really, if the socket is already in listen state
+	 * we can only allow the backlog to be adjusted.
+	 */
+	if (old_state != GMTP_LISTEN) {
+
+		gs->role = GMTP_ROLE_LISTEN;
+
+		err = inet_csk_listen_start(sk, backlog);
+		gmtp_print_debug("inet_csk_listen_start(sk, %d) "
+				"returns: %d", backlog, err);
+		if (err)
+			goto out;
+	}
+	err = 0;
+out:
+	release_sock(sk);
+	return err;
+}
+EXPORT_SYMBOL_GPL(inet_gmtp_listen);
+
+void gmtp_shutdown(struct sock *sk, int how)
+{
+	gmtp_print_function();
+	gmtp_print_debug("called shutdown(%x)", how);
+}
+EXPORT_SYMBOL_GPL(gmtp_shutdown);
+
+/* TODO Study thash_entries... This is from DCCP thash_entries */
+static int thash_entries;
+module_param(thash_entries, int, 0444);
+MODULE_PARM_DESC(thash_entries, "Number of ehash buckets");
+
+/**
+ * Unfortunately, we can't use the alloc_large_system_hash method...
+ * So, this method is an adaptation from dccp hashinfo initialization
+ */
+static int gmtp_create_inet_hashinfo(void)
+{
+	unsigned long goal;
+	int ehash_order, bhash_order, i;
+	int rc;
+
+	gmtp_print_function();
+
+	BUILD_BUG_ON(sizeof(struct gmtp_skb_cb) >
+	FIELD_SIZEOF(struct sk_buff, cb));
+
+	rc = -ENOBUFS;
+
+	inet_hashinfo_init(&gmtp_inet_hashinfo);
+	gmtp_inet_hashinfo.bind_bucket_cachep =
+			kmem_cache_create("gmtp_bind_bucket",
+					sizeof(struct inet_bind_bucket), 0,
+					SLAB_HWCACHE_ALIGN, NULL);
+	if (!gmtp_inet_hashinfo.bind_bucket_cachep)
+		goto out_fail;
+
+	/*
+	 * Size and allocate the main established and bind bucket
+	 * hash tables.
+	 *
+	 * The methodology is similar to that of the buffer cache.
+	 */
+	if (totalram_pages >= (128 * 1024))
+		goal = totalram_pages >> (21 - PAGE_SHIFT);
+	else
+		goal = totalram_pages >> (23 - PAGE_SHIFT);
+
+	if (thash_entries)
+		goal = (thash_entries *
+				sizeof(struct inet_ehash_bucket)) >> PAGE_SHIFT;
+	for (ehash_order = 0; (1UL << ehash_order) < goal; ehash_order++)
+		;
+
+	do {
+		unsigned long hash_size = (1UL << ehash_order) * PAGE_SIZE /
+				sizeof(struct inet_ehash_bucket);
+
+		while (hash_size & (hash_size - 1))
+			hash_size--;
+		gmtp_inet_hashinfo.ehash_mask = hash_size - 1;
+		gmtp_inet_hashinfo.ehash = (struct inet_ehash_bucket *)
+				__get_free_pages(GFP_ATOMIC|__GFP_NOWARN,
+						ehash_order);
+
+	} while (!gmtp_inet_hashinfo.ehash && --ehash_order > 0);
+
+	if (!gmtp_inet_hashinfo.ehash) {
+		gmtp_print_error("Failed to allocate GMTP established "
+				"hash table");
+		goto out_free_bind_bucket_cachep;
+	}
+
+	for (i = 0; i <= gmtp_inet_hashinfo.ehash_mask; i++)
+		INIT_HLIST_NULLS_HEAD(&gmtp_inet_hashinfo.ehash[i].chain, i);
+
+	if (inet_ehash_locks_alloc(&gmtp_inet_hashinfo))
+		goto out_free_gmtp_ehash;
+
+	bhash_order = ehash_order;
+
+	do {
+		gmtp_inet_hashinfo.bhash_size = (1UL << bhash_order) * PAGE_SIZE /
+				sizeof(struct inet_bind_hashbucket);
+		if ((gmtp_inet_hashinfo.bhash_size > (64 * 1024)) &&
+				bhash_order > 0)
+			continue;
+		gmtp_inet_hashinfo.bhash = (struct inet_bind_hashbucket *)
+				__get_free_pages(GFP_ATOMIC|__GFP_NOWARN,
+						bhash_order);
+
+	} while (!gmtp_inet_hashinfo.bhash && --bhash_order >= 0);
+
+	if (!gmtp_inet_hashinfo.bhash) {
+		gmtp_print_error("Failed to allocate GMTP bind hash table");
+		goto out_free_gmtp_locks;
+	}
+
+	for (i = 0; i < gmtp_inet_hashinfo.bhash_size; i++) {
+		spin_lock_init(&gmtp_inet_hashinfo.bhash[i].lock);
+		INIT_HLIST_HEAD(&gmtp_inet_hashinfo.bhash[i].chain);
+	}
+
+	return 0;
+
+out_free_gmtp_locks:
+	inet_ehash_locks_free(&gmtp_inet_hashinfo);
+out_free_gmtp_ehash:
+	free_pages((unsigned long)gmtp_inet_hashinfo.ehash, ehash_order);
+out_free_bind_bucket_cachep:
+	kmem_cache_destroy(gmtp_inet_hashinfo.bind_bucket_cachep);
+out_fail:
+	gmtp_print_error("gmtp_init_hashinfo: FAIL");
+	gmtp_inet_hashinfo.bhash = NULL;
+	gmtp_inet_hashinfo.ehash = NULL;
+	gmtp_inet_hashinfo.bind_bucket_cachep = NULL;
+
+	return rc;
+}
+
+static int ghash_entries = 256;
+module_param(ghash_entries, int, 0444);
+MODULE_PARM_DESC(ghash_entries, "Number of GMTP hash entries");
+
+/*************************************************/
+static int __init gmtp_init(void)
+{
+	int rc = 0;
+	gmtp_print_debug("GMTP init!");
+	gmtp_print_function();
+
+	rc = mcc_lib_init();
+	if(rc)
+		goto out;
+
+	rc = percpu_counter_init(&gmtp_orphan_count, 0);
+	if(rc) {
+		percpu_counter_destroy(&gmtp_orphan_count);
+		goto out;
+	}
+
+	rc = gmtp_create_inet_hashinfo();
+	if(rc)
+		goto out;
+
+	gmtp_hashtable = gmtp_create_hashtable(ghash_entries);
+	if(gmtp_hashtable == NULL)
+		rc = ENOBUFS;
+
+out:
+	return rc;
+}
+
+static void __exit gmtp_exit(void)
+{
+	gmtp_print_function();
+	gmtp_print_debug("GMTP exit!");
+	free_pages((unsigned long)gmtp_inet_hashinfo.bhash,
+			get_order(gmtp_inet_hashinfo.bhash_size *
+					sizeof(struct inet_bind_hashbucket)));
+	free_pages((unsigned long)gmtp_inet_hashinfo.ehash,
+			get_order((gmtp_inet_hashinfo.ehash_mask + 1) *
+					sizeof(struct inet_ehash_bucket)));
+	inet_ehash_locks_free(&gmtp_inet_hashinfo);
+	kmem_cache_destroy(gmtp_inet_hashinfo.bind_bucket_cachep);
+
+	kfree_gmtp_hashtable(gmtp_hashtable);
+	percpu_counter_destroy(&gmtp_orphan_count);
+	mcc_lib_exit();
+}
+
+module_init(gmtp_init);
+module_exit(gmtp_exit);
+
+MODULE_LICENSE("GPL");
+MODULE_AUTHOR("Joilnen Leite <joilnen@gmail.com>");
+MODULE_AUTHOR("Mário André Menezes <mariomenezescosta@gmail.com>");
+MODULE_AUTHOR("Wendell Silva Soares <wss@ic.ufal.br>");
+MODULE_DESCRIPTION("GMTP - Global Media Transmission Protocol");
+
diff --git a/linux-3.17.1/net/gmtp/sockopt.c b/linux-3.17.1/net/gmtp/sockopt.c
new file mode 100644
index 0000000..73dec2d
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/sockopt.c
@@ -0,0 +1,139 @@
+#include <uapi/linux/gmtp.h>
+#include <linux/gmtp.h>
+#include "gmtp.h"
+
+static int gmtp_setsockopt_flowname(struct gmtp_sock *gp, char __user *optval,
+		unsigned int optlen)
+{
+	gmtp_print_function();
+
+	if(optlen > GMTP_FLOWNAME_LEN)
+		return -ENOBUFS;
+
+	memcpy(gp->flowname, optval, optlen);
+	return 0;
+}
+
+static int do_gmtp_setsockopt(struct sock *sk, int level, int optname,
+		char __user *optval, unsigned int optlen)
+{
+	struct gmtp_sock *gp = gmtp_sk(sk);
+	int val, err = 0;
+
+	gmtp_print_function();
+	gmtp_print_debug("Set optname: %d | optlen: %u", optname, optlen);
+
+	if (optlen < (int)sizeof(int))
+		return -EINVAL;
+
+	if(get_user(val, (int __user *)optval))
+		return -EFAULT;
+
+	lock_sock(sk);
+	switch (optname) {
+        case GMTP_SOCKOPT_MAX_TX_RATE:
+        	if(val > 0)
+        		gp->tx_max_rate = (unsigned long) val;
+        	else
+        		err = -EINVAL;
+        	break;
+	case GMTP_SOCKOPT_FLOWNAME:
+		err = gmtp_setsockopt_flowname(gp, optval, optlen);
+		break;
+	case GMTP_SOCKOPT_SERVER_TIMEWAIT:
+		if(gp->role != GMTP_ROLE_SERVER)
+			err = -EOPNOTSUPP;
+		else
+			gp->server_timewait = (val != 0);
+		break;
+	default:
+		err = -ENOPROTOOPT;
+		break;
+	}
+	release_sock(sk);
+
+	return err;
+}
+
+int gmtp_setsockopt(struct sock *sk, int level, int optname,
+		char __user *optval, unsigned int optlen)
+{
+	int ret;
+
+	gmtp_print_function();
+
+	if (level == SOL_GMTP)
+		ret = do_gmtp_setsockopt(sk, level, optname, optval, optlen);
+	else
+		ret = inet_csk(sk)->icsk_af_ops->setsockopt(sk, level,
+							     optname, optval,
+							     optlen);
+	return ret;
+}
+EXPORT_SYMBOL_GPL(gmtp_setsockopt);
+
+static int gmtp_getsockopt_flowname(struct gmtp_sock *gp, char __user *optval,
+		unsigned int *optlen)
+{
+	int len;
+	__u8 *val;
+
+	val = gp->flowname;
+	len = GMTP_FLOWNAME_LEN * sizeof(*val);
+
+	if (put_user(len, optlen) || copy_to_user(optval, val, len))
+		return -EFAULT;
+
+	return 0;
+}
+
+static int do_gmtp_getsockopt(struct sock *sk, int level, int optname,
+		    char __user *optval, int __user *optlen)
+{
+	/* TODO Validate every getsockoptc using a C/C++ application */
+	struct gmtp_sock *gp;
+	int val, len;
+
+	gmtp_print_function();
+
+	if (get_user(len, optlen))
+		return -EFAULT;
+
+	if (len < (int)sizeof(int))
+		return -EINVAL;
+
+	gp = gmtp_sk(sk);
+	gmtp_print_debug("Role: %d", gp->role);
+	gmtp_print_debug("Getting => optname: %d", optname);
+
+	switch (optname) {
+	case GMTP_SOCKOPT_FLOWNAME:
+		return gmtp_getsockopt_flowname(gp, optval, optlen);
+	case GMTP_SOCKOPT_GET_CUR_MSS:
+		val = gp->mss;
+		break;
+	case GMTP_SOCKOPT_SERVER_TIMEWAIT:
+		val = gp->server_timewait;
+		break;
+	default:
+		return -ENOPROTOOPT;
+	}
+
+	len = sizeof(val);
+	if (put_user(len, optlen) || copy_to_user(optval, &val, len))
+		return -EFAULT;
+
+	return 0;
+}
+
+int gmtp_getsockopt(struct sock *sk, int level, int optname,
+		char __user *optval, int __user *optlen)
+{
+	gmtp_print_function();
+	if (level != SOL_GMTP)
+		return inet_csk(sk)->icsk_af_ops->getsockopt(sk, level,
+				optname, optval,
+				optlen);
+	return do_gmtp_getsockopt(sk, level, optname, optval, optlen);
+}
+EXPORT_SYMBOL_GPL(gmtp_getsockopt);
diff --git a/linux-3.17.1/net/gmtp/timer.c b/linux-3.17.1/net/gmtp/timer.c
new file mode 100644
index 0000000..15779c8
--- /dev/null
+++ b/linux-3.17.1/net/gmtp/timer.c
@@ -0,0 +1,282 @@
+/*
+ * timer.c
+ *
+ *  Created on: 04/02/2015
+ *      Author: wendell
+ */
+
+#include <linux/skbuff.h>
+#include <linux/export.h>
+
+#include <net/tcp.h>
+
+#include <linux/gmtp.h>
+#include "gmtp.h"
+
+static void gmtp_write_err(struct sock *sk)
+{
+	gmtp_print_function();
+
+	sk->sk_err = sk->sk_err_soft ? : ETIMEDOUT;
+	sk->sk_error_report(sk);
+
+	gmtp_send_reset(sk, GMTP_RESET_CODE_ABORTED);
+	gmtp_done(sk);
+}
+
+/* A write timeout has occurred. Process the after effects. */
+static int gmtp_write_timeout(struct sock *sk)
+{
+	const struct inet_connection_sock *icsk = inet_csk(sk);
+	int retry_until;
+	gmtp_print_function();
+
+	if (sk->sk_state == GMTP_REQUESTING) {
+		if (icsk->icsk_retransmits != 0)
+			dst_negative_advice(sk);
+		retry_until = icsk->icsk_syn_retries ?
+			    : TCP_SYN_RETRIES;
+	} else {
+		if (icsk->icsk_retransmits >= TCP_RETR1) {
+		/* NOTE. draft-ietf-tcpimpl-pmtud-01.txt requires pmtu
+		   black hole detection. :-(
+
+		   It is place to make it. It is not made. I do not want
+		   to make it. It is disguisting. It does not work in any
+		   case. Let me to cite the same draft, which requires for
+		   us to implement this:
+
+   "The one security concern raised by this memo is that ICMP black holes
+   are often caused by over-zealous security administrators who block
+   all ICMP messages.  It is vitally important that those who design and
+   deploy security systems understand the impact of strict filtering on
+   upper-layer protocols.  The safest web site in the world is worthless
+   if most TCP implementations cannot transfer data from it.  It would
+   be far nicer to have all of the black holes fixed rather than fixing
+   all of the TCP implementations."
+
+			   Golden words :-).
+		   */
+
+			dst_negative_advice(sk);
+		}
+
+		retry_until = TCP_RETR2;
+		/*
+		 * FIXME: see tcp_write_timout and tcp_out_of_resources
+		 */
+	}
+
+	if (icsk->icsk_retransmits >= retry_until) {
+		/* Has it gone just too far? */
+		gmtp_write_err(sk);
+		return 1;
+	}
+	return 0;
+}
+
+/*
+ *	The GMTP retransmit timer.
+ */
+static void gmtp_retransmit_timer(struct sock *sk)
+{
+	struct inet_connection_sock *icsk = inet_csk(sk);
+	gmtp_print_function();
+
+	/*
+	 * More than than 4MSL (8 minutes) has passed, a RESET(aborted) was
+	 * sent, no need to retransmit, this sock is dead.
+	 */
+	if (gmtp_write_timeout(sk))
+		return;
+
+	/*
+	 * We want to know the number of packets retransmitted, not the
+	 * total number of retransmissions of clones of original packets.
+	 */
+	if (icsk->icsk_retransmits == 0)
+/*		DCCP_INC_STATS_BH(DCCP_MIB_TIMEOUTS);*/
+		;
+
+	if (gmtp_retransmit_skb(sk) != 0) {
+		/*
+		 * Retransmission failed because of local congestion,
+		 * do not backoff.
+		 */
+		if (--icsk->icsk_retransmits == 0)
+			icsk->icsk_retransmits = 1;
+		inet_csk_reset_xmit_timer(sk, ICSK_TIME_RETRANS,
+					  min(icsk->icsk_rto,
+					      TCP_RESOURCE_PROBE_INTERVAL),
+					  GMTP_RTO_MAX);
+		return;
+	}
+
+	icsk->icsk_backoff++;
+
+	icsk->icsk_rto = min(icsk->icsk_rto << 1, GMTP_RTO_MAX);
+	inet_csk_reset_xmit_timer(sk, ICSK_TIME_RETRANS, icsk->icsk_rto,
+				  GMTP_RTO_MAX);
+	if (icsk->icsk_retransmits > TCP_RETR1)
+		__sk_dst_reset(sk);
+}
+
+static void gmtp_write_timer(unsigned long data)
+{
+	struct sock *sk = (struct sock *)data;
+	struct inet_connection_sock *icsk = inet_csk(sk);
+	int event = 0;
+	gmtp_print_function();
+
+	bh_lock_sock(sk);
+	if (sock_owned_by_user(sk)) {
+		/* Try again later */
+		sk_reset_timer(sk, &icsk->icsk_retransmit_timer,
+			       jiffies + (HZ / 20));
+		goto out;
+	}
+
+	if (sk->sk_state == GMTP_CLOSED || !icsk->icsk_pending)
+		goto out;
+
+	if (time_after(icsk->icsk_timeout, jiffies)) {
+		sk_reset_timer(sk, &icsk->icsk_retransmit_timer,
+			       icsk->icsk_timeout);
+		goto out;
+	}
+
+	event = icsk->icsk_pending;
+	icsk->icsk_pending = 0;
+
+	switch (event) {
+        case ICSK_TIME_RETRANS:
+            gmtp_retransmit_timer(sk);
+            break;
+	}
+out:
+	bh_unlock_sock(sk);
+	sock_put(sk);
+}
+
+/*
+ *	Timer for listening sockets
+ */
+static void gmtp_response_timer(struct sock *sk)
+{
+    gmtp_print_function();
+	inet_csk_reqsk_queue_prune(sk, TCP_SYNQ_INTERVAL, GMTP_TIMEOUT_INIT,
+				   GMTP_RTO_MAX);
+}
+
+static void gmtp_keepalive_timer(unsigned long data)
+{
+	struct sock *sk = (struct sock *)data;
+
+	gmtp_print_function();
+
+	/* Only process if socket is not in use. */
+	bh_lock_sock(sk);
+	if (sock_owned_by_user(sk)) {
+		/* Try again later. */
+		inet_csk_reset_keepalive_timer(sk, HZ / 20);
+		goto out;
+	}
+
+	if (sk->sk_state == GMTP_LISTEN) {
+		gmtp_response_timer(sk);
+		goto out;
+	}
+out:
+	bh_unlock_sock(sk);
+	sock_put(sk);
+}
+
+/* This is the same as tcp_delack_timer, sans prequeue & mem_reclaim stuff */
+static void gmtp_delack_timer(unsigned long data)
+{
+	struct sock *sk = (struct sock *)data;
+	struct inet_connection_sock *icsk = inet_csk(sk);
+	gmtp_print_function();
+
+	bh_lock_sock(sk);
+	if (sock_owned_by_user(sk)) {
+		/* Try again later. */
+		icsk->icsk_ack.blocked = 1;
+		NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_DELAYEDACKLOCKED);
+		sk_reset_timer(sk, &icsk->icsk_delack_timer,
+			       jiffies + TCP_DELACK_MIN);
+		goto out;
+	}
+
+	if (sk->sk_state == GMTP_CLOSED ||
+	    !(icsk->icsk_ack.pending & ICSK_ACK_TIMER))
+		goto out;
+	if (time_after(icsk->icsk_ack.timeout, jiffies)) {
+		sk_reset_timer(sk, &icsk->icsk_delack_timer,
+			       icsk->icsk_ack.timeout);
+		goto out;
+	}
+
+	icsk->icsk_ack.pending &= ~ICSK_ACK_TIMER;
+
+	if (inet_csk_ack_scheduled(sk)) {
+		if (!icsk->icsk_ack.pingpong) {
+			/* Delayed ACK missed: inflate ATO. */
+			icsk->icsk_ack.ato = min(icsk->icsk_ack.ato << 1,
+						 icsk->icsk_rto);
+		} else {
+			/* Delayed ACK missed: leave pingpong mode and
+			 * deflate ATO.
+			 */
+			icsk->icsk_ack.pingpong = 0;
+			icsk->icsk_ack.ato = TCP_ATO_MIN;
+		}
+		gmtp_send_ack(sk, GMTP_ACK_NO_CODE);
+		NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_DELAYEDACKS);
+	}
+out:
+	bh_unlock_sock(sk);
+	sock_put(sk);
+}
+
+/**
+ * gmtp_write_xmitlet  -  Workhorse for CCID packet dequeueing interface
+ * See the comments above %ccid_dequeueing_decision for supported modes.
+ */
+static void gmtp_write_xmitlet(unsigned long data)
+{
+	struct sock *sk = (struct sock *)data;
+
+	gmtp_print_function();
+
+	bh_lock_sock(sk);
+	if(sock_owned_by_user(sk))
+		sk_reset_timer(sk, &gmtp_sk(sk)->xmit_timer, jiffies + 1);
+	/*
+	 * FIXME Treat it
+	 else
+	 gmtp_write_xmit(sk);
+	 */
+	bh_unlock_sock(sk);
+}
+
+static void gmtp_write_xmit_timer(unsigned long data)
+{
+	gmtp_print_function();
+	gmtp_write_xmitlet(data);
+	sock_put((struct sock *)data);
+}
+
+void gmtp_init_xmit_timers(struct sock *sk)
+{
+	struct gmtp_sock *gp = gmtp_sk(sk);
+
+	gmtp_print_function();
+
+	tasklet_init(&gp->xmitlet, gmtp_write_xmitlet, (unsigned long)sk);
+	setup_timer(&gp->xmit_timer, gmtp_write_xmit_timer, (unsigned long )sk);
+	inet_csk_init_xmit_timers(sk, &gmtp_write_timer, &gmtp_delack_timer,
+			&gmtp_keepalive_timer);
+}
+
+
diff --git a/linux-3.17.1/net/ipv4/af_inet.c b/linux-3.17.1/net/ipv4/af_inet.c
index d156b3c..4fcdff6 100644
--- a/linux-3.17.1/net/ipv4/af_inet.c
+++ b/linux-3.17.1/net/ipv4/af_inet.c
@@ -668,6 +668,7 @@ int inet_accept(struct socket *sock, struct socket *newsock, int flags)
 {
 	struct sock *sk1 = sock->sk;
 	int err = -EINVAL;
+
 	struct sock *sk2 = sk1->sk_prot->accept(sk1, flags, &err);
 
 	if (!sk2)
